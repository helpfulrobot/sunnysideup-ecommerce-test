<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="i18nTranslateAdapterInterface" namespace="" name="i18nTranslateAdapterInterface" abstract="false" final="false" start="17" end="23">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/i18n" file="i18nTranslateAdapterInterface.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/i18n/i18nTranslateAdapterInterface.php" size="874" time="2015-03-14T10:40:46+13:00" unixtime="1426282846" sha1="cdf6e7fbc7642d245d60ebf5a674bf6377bc244b" relative="framework/i18n/i18nTranslateAdapterInterface.php"/>
  <docblock>
    <description compact="Makes the {@link Zend_Translate_Adapter} base class aware of file naming conventions within SilverStripe.">Needs to be implemented by all translators used through <link xmlns="http://xml.phpdox.net/src" value="i18n::register_translator()"/>.
A bit of context: Zend is file extension agnostic by default, and simply uses the filenames to detect locales
with the 'scan' option, passing all files to the used adapter. We support multiple formats in the same /lang/
folder, so need to be more selective about including files to avoid e.g. a YAML adapter trying to parse a PHP file.
</description>
    <see value="http://framework.zend.com/manual/en/zend.translate.additional.html#zend.translate.additional.combination"/>
  </docblock>
  <method name="getFilenameForLocale" start="22" end="22" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object">
        <type full="String" namespace="" name="String"/>
      </param>
      <return type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}"/>
  </method>
  <implementor full="i18nTest_CustomTranslatorAdapter" namespace="" name="i18nTest_CustomTranslatorAdapter"/>
  <implementor full="i18nTest_OtherCustomTranslatorAdapter" namespace="" name="i18nTest_OtherCustomTranslatorAdapter"/>
  <implementor full="i18nRailsYamlAdapter" namespace="" name="i18nRailsYamlAdapter"/>
  <implementor full="i18nSSLegacyAdapter" namespace="" name="i18nSSLegacyAdapter"/>
</interface>
