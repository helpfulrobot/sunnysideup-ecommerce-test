<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/model" file="Sortable.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/model/Sortable.php" size="1174" time="2015-03-14T10:40:57+13:00" unixtime="1426282857" sha1="18e60286e69aff2137a42af91fa8506eb329dea6" relative="framework/model/Sortable.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * Additional interface for {@link SS_List} classes that are sortable.</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * All methods in this interface are immutable - they should return new instances with the sort</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * applied, rather than applying the sort in place</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> * @see SS_List, SS_Filterable, SS_Limitable</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * @package framework</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * @subpackage model</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="13">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SS_Sortable</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="14"/>
  <line no="15">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT">	 * Returns TRUE if the list can be sorted by a field.</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT">	 * @param  string $by</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">	 * @return bool</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">canSortBy</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$by</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22"/>
  <line no="23">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">	 * Return a new instance of this list that is sorted by one or more fields. You can either pass in a single</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">	 * field name and direction, or a map of field names to sort directions.</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">	 * @return SS_Sortable</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">	 * @example $list = $list-&gt;sort('Name'); // default ASC sorting</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">	 * @example $list = $list-&gt;sort('Name DESC'); // DESC sorting</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">	 * @example $list = $list-&gt;sort('Name', 'ASC');</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">	 * @example $list = $list-&gt;sort(array('Name'=&gt;'ASC,'Age'=&gt;'DESC'));</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">sort</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">	 * Return a new instance of this list based on reversing the current sort.</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">	 * @return SS_Sortable</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">	 * @example $list = $list-&gt;reverse();</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">reverse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="43">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="44"/>
</source>
