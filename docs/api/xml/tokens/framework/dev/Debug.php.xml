<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/dev" file="Debug.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/dev/Debug.php" size="16423" time="2015-03-14T10:39:31+13:00" unixtime="1426282771" sha1="ccaf553e9ce155acc8f8662530000fa6f1fe4351" relative="framework/dev/Debug.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT"> * Supports debugging and core error handling.</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * Attaches custom methods to the default error handling hooks</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * in PHP. Currently, two levels of error are supported:</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * - Notice</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> * - Warning</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * - Error</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * Uncaught exceptions are currently passed to the debug</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> * reporter as standard PHP errors.</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * Errors handled by this class are passed along to {@link SS_Log}.</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * For configuration information, see the {@link SS_Log}</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * class documentation.</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> * @todo add support for user defined config: Debug::die_on_notice(true | false)</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> * @todo better way of figuring out the error context to display in highlighted source</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT"> * @package framework</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> * @subpackage dev</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="25">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">	 * @var String indicating the file where errors are logged.</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">	 * Filename is relative to the site root.</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">	 * The named file will have a terse log sent to it, and the full log (an </token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">	 * encoded file containing backtraces and things) will go to a file of a similar</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">	 * name, but with the suffix ".full" added.</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$log_errors_to</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="36"/>
  <line no="37">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">	 * @var string The header of the message shown to users on the live site when a fatal error occurs.</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$friendly_error_header</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'There has been an error'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="42"/>
  <line no="43">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">	 * @var string The body of the message shown to users on the live site when a fatal error occurs.</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$friendly_error_detail</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'The website server has not been able to respond to your request.'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">	 * Show the contents of val in a debug-friendly way.</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">	 * Debug::show() is intended to be equivalent to dprintr()</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">show</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$showHeader</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">isLive</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$showHeader</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">caller</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_ajax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_cli</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">					</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">Debug (</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">class</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">type</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">function</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">() in </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">basename</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">						</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">:</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">line</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">)\n</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">				</token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">					</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;div style=\"background-color: white; text-align: left;\"&gt;\n&lt;hr&gt;\n"</token>
  </line>
  <line no="62">
    <token name="T_WHITESPACE">						</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;h3&gt;Debug &lt;span style=\"font-size: 65%\"&gt;(</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">class</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">type</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">function</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">()</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">						</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" \nin "</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">basename</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">:</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">line</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">)&lt;/span&gt;\n&lt;/h3&gt;\n</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">text</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_ajax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_cli</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;/div&gt;"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="71"/>
  <line no="72">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="73"/>
  <line no="74">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">	 * Returns the caller for a specific method</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">	 * @return array</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">caller</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$bt</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">debug_backtrace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$bt</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="82">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$bt</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="83">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$bt</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="88"/>
  <line no="89">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">	 * Close out the show dumper</token>
  </line>
  <line no="91">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="92">
    <token name="T_DOC_COMMENT">	 * @param mixed $val</token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">endshow</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="95">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">isLive</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">caller</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;hr&gt;\n&lt;h3&gt;Debug \n&lt;span style=\"font-size: 65%\"&gt;(</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">class</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">type</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">function</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">()</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" \nin "</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">basename</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">:</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">line</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">)&lt;/span&gt;\n&lt;/h3&gt;\n</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="99">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">text</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="100">
    <token name="T_WHITESPACE">			</token>
    <token name="T_EXIT">die</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="102">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="105">
    <token name="T_DOC_COMMENT">	 * Quick dump of a variable.</token>
  </line>
  <line no="106">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="107">
    <token name="T_DOC_COMMENT">	 * @param mixed $val</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dump</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="110">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create_debug_view</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeVariable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">caller</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="112"/>
  <line no="113">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="114">
    <token name="T_DOC_COMMENT">	 * ??</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="116">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $val</token>
  </line>
  <line no="117">
    <token name="T_DOC_COMMENT">	 * @return unknown</token>
  </line>
  <line no="118">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">text</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_object</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">method_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'hasMethod'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$hasDebugMethod</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasMethod</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'debug'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$hasDebugMethod</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">method_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'debug'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$hasDebugMethod</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">				</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">debug</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="130">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="131"/>
  <line no="132">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;ul&gt;\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="134">
    <token name="T_WHITESPACE">			</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="135">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;li&gt;</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> = </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">text</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;/li&gt;\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="137">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;/ul&gt;\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="138"/>
  <line no="139">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_object</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">var_export</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="141">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_bool</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="142">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'true'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'false'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="143">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'(bool) '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_cli</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_ajax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;pre style=\"font-family: Courier new\"&gt;"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">htmlentities</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_COMPAT</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">					</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;/pre&gt;\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="150"/>
  <line no="151">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$val</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="153"/>
  <line no="154">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="155">
    <token name="T_DOC_COMMENT">	 * Show a debugging message</token>
  </line>
  <line no="156">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="157">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">message</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$showHeader</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="158">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">isLive</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">caller</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">basename</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_cli</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="162">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$showHeader</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">Debug (line </token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">line</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> of </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">):\n </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">				</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="164">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="165">
    <token name="T_WHITESPACE">				</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;p class=\"message warning\"&gt;\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="166">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$showHeader</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;b&gt;Debug (line </token>
    <token name="T_VARIABLE">$caller</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">line</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> of </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">):&lt;/b&gt;\n </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="167">
    <token name="T_WHITESPACE">				</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Convert</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">raw2xml</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;/p&gt;\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="168">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="169">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="170">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="171">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="172">
    <token name="T_WHITESPACE">	</token>
    <token name="T_COMMENT">// Keep track of how many headers have been sent</token>
  </line>
  <line no="173">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$headerCount</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="174">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="175">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="176">
    <token name="T_DOC_COMMENT">	 * Send a debug message in an HTTP header. Only works if you are</token>
  </line>
  <line no="177">
    <token name="T_DOC_COMMENT">	 * on Dev, and headers have not yet been sent.</token>
  </line>
  <line no="178">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="179">
    <token name="T_DOC_COMMENT">	 * @param string $msg </token>
  </line>
  <line no="180">
    <token name="T_DOC_COMMENT">	 * @param string $prefix (optional)</token>
  </line>
  <line no="181">
    <token name="T_DOC_COMMENT">	 * @return void</token>
  </line>
  <line no="182">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="183">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$prefix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="184">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">isDev</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">headers_sent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$headerCount</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="186">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SS-'</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$headerCount</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$prefix</token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$prefix</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">': '</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="187">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="188">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="189"/>
  <line no="190">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="191">
    <token name="T_DOC_COMMENT">	 * Log to a standard text file output.</token>
  </line>
  <line no="192">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="193">
    <token name="T_DOC_COMMENT">	 * @param $message string to output</token>
  </line>
  <line no="194">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="195">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">log</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="196">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">defined</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BASE_PATH'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="197">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">BASE_PATH</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="198">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="199">
    <token name="T_WHITESPACE">		</token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="200">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dirname</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_FILE">__FILE__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/../..'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="202">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/debug.log'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="203">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$now</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">date</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'r'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="204">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\n\n== </token>
    <token name="T_VARIABLE">$now</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> ==\n</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\n</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="205">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">file_put_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FILE_APPEND</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="206">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="207"/>
  <line no="208">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="209">
    <token name="T_DOC_COMMENT">	 * Load error handlers into environment.</token>
  </line>
  <line no="210">
    <token name="T_DOC_COMMENT">	 * Caution: The error levels default to E_ALL is the site is in dev-mode (set in main.php).</token>
  </line>
  <line no="211">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="212">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">loadErrorHandlers</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="213">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">set_error_handler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errorHandler'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">error_reporting</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="214">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">set_exception_handler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'exceptionHandler'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="215">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="216"/>
  <line no="217">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">noticeHandler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="218">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">error_reporting</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="219">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">ini_set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'display_errors'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="220">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="221">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Send out the error details to the logger for writing</token>
  </line>
  <line no="222">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">SS_Log</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">log</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="223">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="224">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errno'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="225">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errstr'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="226">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errfile'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="227">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errline'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="228">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errcontext'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
  </line>
  <line no="229">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">SS_Log</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">NOTICE</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="232"/>
  <line no="233">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">isDev</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="234">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">showError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Notice"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="235">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="236">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="237">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="238">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="239"/>
  <line no="240">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="241">
    <token name="T_DOC_COMMENT">	 * Handle a non-fatal warning error thrown by PHP interpreter.</token>
  </line>
  <line no="242">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="243">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errno</token>
  </line>
  <line no="244">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errstr</token>
  </line>
  <line no="245">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errfile</token>
  </line>
  <line no="246">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errline</token>
  </line>
  <line no="247">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errcontext</token>
  </line>
  <line no="248">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="249">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">warningHandler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="250">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">error_reporting</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="251">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">ini_set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'display_errors'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="252"/>
  <line no="253">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Send out the error details to the logger for writing</token>
  </line>
  <line no="254">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">SS_Log</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">log</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="255">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="256">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errno'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="257">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errstr'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="258">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errfile'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errline'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="260">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errcontext'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
  </line>
  <line no="261">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="262">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">SS_Log</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">WARN</token>
  </line>
  <line no="263">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="264">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="265">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">isDev</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="266">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">showError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Warning"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="267">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="268">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="269">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="270">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="271"/>
  <line no="272">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="273">
    <token name="T_DOC_COMMENT">	 * Handle a fatal error, depending on the mode of the site (ie: Dev, Test, or Live).</token>
  </line>
  <line no="274">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="275">
    <token name="T_DOC_COMMENT">	 * Runtime execution dies immediately once the error is generated.</token>
  </line>
  <line no="276">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="277">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errno</token>
  </line>
  <line no="278">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errstr</token>
  </line>
  <line no="279">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errfile</token>
  </line>
  <line no="280">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errline</token>
  </line>
  <line no="281">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errcontext</token>
  </line>
  <line no="282">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="283">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">fatalHandler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="284">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">ini_set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'display_errors'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="285">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="286">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Send out the error details to the logger for writing</token>
  </line>
  <line no="287">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">SS_Log</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">log</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="288">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="289">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errno'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="290">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errstr'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="291">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errfile'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="292">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errline'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="293">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'errcontext'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
  </line>
  <line no="294">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="295">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">SS_Log</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">ERR</token>
  </line>
  <line no="296">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="297">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="298">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">isDev</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_cli</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="299">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">showError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Error"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="300">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="301">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">friendlyError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="302">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="303">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="304">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="305">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="306">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="307">
    <token name="T_DOC_COMMENT">	 * Render a user-facing error page, using the default HTML error template</token>
  </line>
  <line no="308">
    <token name="T_DOC_COMMENT">	 * rendered by {@link ErrorPage} if it exists. Doesn't use the standard {@link SS_HTTPResponse} class</token>
  </line>
  <line no="309">
    <token name="T_DOC_COMMENT">	 * the keep dependencies minimal. </token>
  </line>
  <line no="310">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="311">
    <token name="T_DOC_COMMENT">	 * @uses ErrorPage</token>
  </line>
  <line no="312">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="313">
    <token name="T_DOC_COMMENT">	 * @param int $statusCode HTTP Status Code (Default: 500)</token>
  </line>
  <line no="314">
    <token name="T_DOC_COMMENT">	 * @param string $friendlyErrorMessage User-focused error message. Should not contain code pointers</token>
  </line>
  <line no="315">
    <token name="T_DOC_COMMENT">	 *                                     or "tech-speak". Used in the HTTP Header and ajax responses.</token>
  </line>
  <line no="316">
    <token name="T_DOC_COMMENT">	 * @param string $friendlyErrorDetail Detailed user-focused message. Is just used if no {@link ErrorPage} is found</token>
  </line>
  <line no="317">
    <token name="T_DOC_COMMENT">	 *                                    for this specific status code.</token>
  </line>
  <line no="318">
    <token name="T_DOC_COMMENT">	 * @return string HTML error message for non-ajax requests, plaintext for ajax-request.</token>
  </line>
  <line no="319">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="320">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">friendlyError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$statusCode</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_LNUMBER">500</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$friendlyErrorMessage</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$friendlyErrorDetail</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="321">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$friendlyErrorMessage</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="322">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$friendlyErrorMessage</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Config</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">inst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Debug'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'friendly_error_header'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="323">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="324">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="325">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$friendlyErrorDetail</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="326">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$friendlyErrorDetail</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Config</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">inst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Debug'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'friendly_error_detail'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="327">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="328"/>
  <line no="329">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">headers_sent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="330">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$currController</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Controller</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">has_curr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Controller</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">curr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="331">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Ensure the error message complies with the HTTP 1.1 spec</token>
  </line>
  <line no="332">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strip_tags</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\r"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$friendlyErrorMessage</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="333">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$currController</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="334">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$currController</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="335">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setStatusCode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$statusCode</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="336">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="337">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SERVER_PROTOCOL'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> </token>
    <token name="T_VARIABLE">$statusCode</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> </token>
    <token name="T_VARIABLE">$msg</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="338">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="339">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="340"/>
  <line no="341">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_ajax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="342">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$friendlyErrorMessage</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="343">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="344">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">class_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ErrorPage'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="345">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$errorFilePath</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ErrorPage</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_filepath_for_errorcode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="346">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$statusCode</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="347">
    <token name="T_WHITESPACE">					</token>
    <token name="T_STRING">class_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Translatable'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Translatable</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_current_locale</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
  </line>
  <line no="348">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="349">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">file_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errorFilePath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="350">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">file_get_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errorFilePath</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="351">
    <token name="T_WHITESPACE">					</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">headers_sent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type: text/html'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="352">
    <token name="T_WHITESPACE">					</token>
    <token name="T_COMMENT">// $BaseURL is left dynamic in error-###.html, so that multi-domain sites don't get broken</token>
  </line>
  <line no="353">
    <token name="T_WHITESPACE">					</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'$BaseURL'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">absoluteBaseURL</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="354">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="355">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="356">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$renderer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DebugView</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="357">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$renderer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="358">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$renderer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeInfo</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Website Error"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$friendlyErrorMessage</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$friendlyErrorDetail</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="359">
    <token name="T_WHITESPACE">				</token>
  </line>
  <line no="360">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Email</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">admin_email</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="361">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$mailto</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Email</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">obfuscate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Email</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">admin_email</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="362">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$renderer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeParagraph</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Contact an administrator: '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$mailto</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="363">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="364"/>
  <line no="365">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$renderer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeFooter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="366">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="367">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="368">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="369">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="370"/>
  <line no="371">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="372">
    <token name="T_DOC_COMMENT">	 * Create an instance of an appropriate DebugView object.</token>
  </line>
  <line no="373">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="374">
    <token name="T_DOC_COMMENT">	 * @return DebugView</token>
  </line>
  <line no="375">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="376">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">create_debug_view</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="377">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$service</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_cli</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_ajax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="378">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CliDebugView'</token>
  </line>
  <line no="379">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'DebugView'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="380">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Injector</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">inst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$service</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="381">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="382"/>
  <line no="383">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="384">
    <token name="T_DOC_COMMENT">	 * Render a developer facing error page, showing the stack trace and details</token>
  </line>
  <line no="385">
    <token name="T_DOC_COMMENT">	 * of the code where the error occured.</token>
  </line>
  <line no="386">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="387">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errno</token>
  </line>
  <line no="388">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errstr</token>
  </line>
  <line no="389">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errfile</token>
  </line>
  <line no="390">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errline</token>
  </line>
  <line no="391">
    <token name="T_DOC_COMMENT">	 * @param unknown_type $errcontext</token>
  </line>
  <line no="392">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="393">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">showError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errtype</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="394">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">headers_sent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="395">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$errText</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_VARIABLE">$errtype</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> at line </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> of </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="396">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$errText</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\r"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" "</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$errText</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="397"/>
  <line no="398">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">headers_sent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SERVER_PROTOCOL'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> 500 </token>
    <token name="T_VARIABLE">$errText</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="399">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="400">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// if error is displayed through ajax with CliDebugView, use plaintext output</token>
  </line>
  <line no="401">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_ajax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="402">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type: text/plain'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="403">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="404">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="405">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="406">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$reporter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create_debug_view</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="407">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="408">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Coupling alert: This relies on knowledge of how the director gets its URL, it could be improved.</token>
  </line>
  <line no="409">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$httpRequest</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="410">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'REQUEST_URI'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="411">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$httpRequest</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'REQUEST_URI'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="412">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_REQUEST</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'url'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="413">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$httpRequest</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$_REQUEST</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'url'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="414">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="415">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'REQUEST_METHOD'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$httpRequest</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'REQUEST_METHOD'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$httpRequest</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="416"/>
  <line no="417">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$reporter</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$httpRequest</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="418">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$reporter</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$httpRequest</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="419"/>
  <line no="420">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">file_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="421">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">file</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="422"/>
  <line no="423">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Make the array 1-based</token>
  </line>
  <line no="424">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">array_unshift</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="425">
    <token name="T_WHITESPACE">			</token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="426"/>
  <line no="427">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">10</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="428">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_slice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">16</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="429">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$reporter</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeSourceFragment</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="430">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="431">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$reporter</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeTrace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errcontext</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">debug_backtrace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="432">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$reporter</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">writeFooter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="433">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="434">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="435">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="436">
    <token name="T_DOC_COMMENT">	 * Utility method to render a snippet of PHP source code, from selected file</token>
  </line>
  <line no="437">
    <token name="T_DOC_COMMENT">	 * and highlighting the given line number.</token>
  </line>
  <line no="438">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="439">
    <token name="T_DOC_COMMENT">	 * @param string $errfile</token>
  </line>
  <line no="440">
    <token name="T_DOC_COMMENT">	 * @param int $errline</token>
  </line>
  <line no="441">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="442">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">showLines</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="443">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">file</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="444">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">10</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="445">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_slice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">16</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="446">
    <token name="T_WHITESPACE">		</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;pre&gt;'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="447">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="448">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$lines</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="449">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">htmlentities</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ENT_COMPAT</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'UTF-8'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="450">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="451">
    <token name="T_WHITESPACE">				</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;span&gt;</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/span&gt; &lt;span class=\"error\"&gt;</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/span&gt;</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="452">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="453">
    <token name="T_WHITESPACE">				</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;span&gt;</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/span&gt; </token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="454">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="455">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$offset</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="456">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="457">
    <token name="T_WHITESPACE">		</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;/pre&gt;'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="458">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="459">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="460">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="461">
    <token name="T_DOC_COMMENT">	 * Check if the user has permissions to run URL debug tools,</token>
  </line>
  <line no="462">
    <token name="T_DOC_COMMENT">	 * else redirect them to log in.</token>
  </line>
  <line no="463">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="464">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">require_developer_login</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="465">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">isDev</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="466">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="467">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="468">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_SESSION</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'loggedInAs'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="469">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// We have to do some raw SQL here, because this method is called in Object::defineMethods().</token>
  </line>
  <line no="470">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// This means we have to be careful about what objects we create, as we don't want Object::defineMethods()</token>
  </line>
  <line no="471">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// being called again.</token>
  </line>
  <line no="472">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// This basically calls Permission::checkMember($_SESSION['loggedInAs'], 'ADMIN');</token>
  </line>
  <line no="473">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="474">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$memberID</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$_SESSION</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'loggedInAs'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="475">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="476">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$groups</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DB</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"SELECT \"GroupID\" from \"Group_Members\" WHERE \"MemberID\" = "</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$memberID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="477">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$groupCSV</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">implode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$groups</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">column</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">','</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="478">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="479">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$permission</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DB</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">query</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"</token>
  </line>
  <line no="480">
    <token name="T_CONSTANT_ENCAPSED_STRING">				SELECT \"ID\"</token>
  </line>
  <line no="481">
    <token name="T_CONSTANT_ENCAPSED_STRING">				FROM \"Permission\"</token>
  </line>
  <line no="482">
    <token name="T_CONSTANT_ENCAPSED_STRING">				WHERE (</token>
  </line>
  <line no="483">
    <token name="T_CONSTANT_ENCAPSED_STRING">					\"Code\" = 'ADMIN'</token>
  </line>
  <line no="484">
    <token name="T_CONSTANT_ENCAPSED_STRING">					AND \"Type\" = "</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Permission</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">GRANT_PERMISSION</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
  </line>
  <line no="485">
    <token name="T_ENCAPSED_AND_WHITESPACE">					AND \"GroupID\" IN (</token>
    <token name="T_VARIABLE">$groupCSV</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">)</token>
  </line>
  <line no="486">
    <token name="T_ENCAPSED_AND_WHITESPACE">				)</token>
  </line>
  <line no="487">
    <token name="T_ENCAPSED_AND_WHITESPACE">			</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">value</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="488">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="489">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$permission</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="490">
    <token name="T_WHITESPACE">				</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="491">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="492">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="493">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="494">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// This basically does the same as</token>
  </line>
  <line no="495">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Security::permissionFailure(null, "You need to login with developer access to make use of debugging tools.")</token>
  </line>
  <line no="496">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// We have to do this because of how early this method is called in execution.</token>
  </line>
  <line no="497">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$_SESSION</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Message'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
  </line>
  <line no="498">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"You need to login with developer access to make use of debugging tools."</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="499">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$_SESSION</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Message'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warning'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="500">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$_SESSION</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BackURL'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'REQUEST_URI'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="501">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SERVER_PROTOCOL'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" 302 Found"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="502">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Location: "</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">baseURL</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Security</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">login_url</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="503">
    <token name="T_WHITESPACE">		</token>
    <token name="T_EXIT">die</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="504">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="505">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="506"/>
  <line no="507"/>
  <line no="508"/>
  <line no="509"/>
  <line no="510"/>
  <line no="511"/>
  <line no="512"/>
  <line no="513"/>
  <line no="514"/>
  <line no="515"/>
  <line no="516">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="517">
    <token name="T_DOC_COMMENT"> * Generic callback, to catch uncaught exceptions when they bubble up to the top of the call chain.</token>
  </line>
  <line no="518">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="519">
    <token name="T_DOC_COMMENT"> * @ignore </token>
  </line>
  <line no="520">
    <token name="T_DOC_COMMENT"> * @param Exception $exception</token>
  </line>
  <line no="521">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="522">
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">exceptionHandler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="523">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_USER_ERROR</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="524">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">get_class</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="525">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Uncaught "</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$type</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">": "</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="526">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getFile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="527">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getLine</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="528">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$context</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$exception</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTrace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="529">
    <token name="T_WHITESPACE">	</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">fatalHandler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$line</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$context</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="530">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="531"/>
  <line no="532">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="533">
    <token name="T_DOC_COMMENT"> * Generic callback to catch standard PHP runtime errors thrown by the interpreter</token>
  </line>
  <line no="534">
    <token name="T_DOC_COMMENT"> * or manually triggered with the user_error function.</token>
  </line>
  <line no="535">
    <token name="T_DOC_COMMENT"> * Caution: The error levels default to E_ALL is the site is in dev-mode (set in main.php).</token>
  </line>
  <line no="536">
    <token name="T_DOC_COMMENT"> * </token>
  </line>
  <line no="537">
    <token name="T_DOC_COMMENT"> * @ignore </token>
  </line>
  <line no="538">
    <token name="T_DOC_COMMENT"> * @param int $errno</token>
  </line>
  <line no="539">
    <token name="T_DOC_COMMENT"> * @param string $errstr</token>
  </line>
  <line no="540">
    <token name="T_DOC_COMMENT"> * @param string $errfile</token>
  </line>
  <line no="541">
    <token name="T_DOC_COMMENT"> * @param int $errline</token>
  </line>
  <line no="542">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="543">
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">errorHandler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="544">
    <token name="T_WHITESPACE">	</token>
    <token name="T_SWITCH">switch</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="545">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_ERROR</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="546">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_CORE_ERROR</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="547">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_USER_ERROR</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="548">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">fatalHandler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">debug_backtrace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="549"/>
  <line no="550">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_WARNING</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="551">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_CORE_WARNING</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="552">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_USER_WARNING</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="553">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">warningHandler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">debug_backtrace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="554"/>
  <line no="555">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_NOTICE</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="556">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_USER_NOTICE</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="557">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_DEPRECATED</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="558">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_USER_DEPRECATED</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="559">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CASE">case</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">E_STRICT</token>
    <token name="T_PHPDOX_COLON">:</token>
  </line>
  <line no="560">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Debug</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">noticeHandler</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$errno</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errstr</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errfile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$errline</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">debug_backtrace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="561">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="562">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="563"/>
</source>
