<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/dev/phpunit" file="PhpUnitWrapper.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/dev/phpunit/PhpUnitWrapper.php" size="6681" time="2015-03-14T10:39:31+13:00" unixtime="1426282771" sha1="b4389c2f392f1e6f1f75ec781fcea084a5d4a3a3" relative="framework/dev/phpunit/PhpUnitWrapper.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT">* @package framework</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT">* @subpackage dev</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT">*/</token>
  </line>
  <line no="6"/>
  <line no="7">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * This method checks if a given filename exists in the include path (defined</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> * in php.ini. </token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * @return boolean when the file has been found in the include path.</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="13">
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">fileExistsInIncludePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="14">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$paths</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">explode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">PATH_SEPARATOR</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ini_get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'include_path'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="15">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$paths</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="16">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DIRECTORY_SEPARATOR</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="17">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_AT">@</token>
    <token name="T_STRING">file_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$filename</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="19">
    <token name="T_WHITESPACE">	</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="20">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="21"/>
  <line no="22">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> * PHPUnit Wrapper class.</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT"> * Base class for PHPUnit wrapper classes to support different PHPUnit versions.</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT"> * The current implementation supports PHPUnit 3.4 and PHPUnit 3.5.</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="27">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpUnitWrapper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">IPhpUnitWrapper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="28">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">	 * Flag if coverage report shall be generated or not.</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">	 * @var boolean</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">	 */</token>
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$coverage</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">	 * PHPUnit-TestSuite class. The tests, added to this suite are performed</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">	 * in this test-run.</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">	 * @var PHPUnit_Framework_TestSuite</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">	 */</token>
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$suite</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="41"/>
  <line no="42">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">	 * @var PHPUnit_Framework_TestResult</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$results</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="46"/>
  <line no="47">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">	 * @var PHPUnit_Framework_TestListener</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">	 */</token>
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$reporter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">	 * Shows the version, implemented by the phpunit-wrapper class instance.</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">	 * This instance implements no phpunit, the version is null.</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">	 * @var String</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">	 */</token>
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$version</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpunit_wrapper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60"/>
  <line no="61">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">	 * Getter for $coverage (@see $coverage).</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">	 * @return boolean</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getCoverageStatus</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">coverage</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT">	 * Setter for $coverage (@see $coverage).</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">	 * @parameter $value Boolean</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">	 */</token>
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setCoverageStatus</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">coverage</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="76"/>
  <line no="77">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT">	 * Getter for $suite (@see $suite).</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">	 * @return PHPUnit_Framework_TestSuite</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">	 */</token>
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getSuite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="82">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">suite</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="83">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT">	 * Setter for $suite (@see $suite).</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">	 * @param $value PHPUnit_Framework_TestSuite</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setSuite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">suite</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="93">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">	 * Getter for $reporter (@see $reporter).</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT">	 * @return PHPUnit_Framework_TestListener</token>
  </line>
  <line no="96">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getReporter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">reporter</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="99">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="100">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">	 * Setter for $reporter (@see $reporter).</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT">	 * @param $value PHPUnit_Framework_TestListener</token>
  </line>
  <line no="104">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="105">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setReporter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="106">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">reporter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT">	 * Getter for $results (@see $results).</token>
  </line>
  <line no="111">
    <token name="T_DOC_COMMENT">	 * @return PHPUnit_Framework_TestResult</token>
  </line>
  <line no="112">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="113">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFrameworkTestResults</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="114">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">results</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="118">
    <token name="T_DOC_COMMENT">	 * Setter for $results (@see $results).</token>
  </line>
  <line no="119">
    <token name="T_DOC_COMMENT">	 * @param $value PHPUnit_Framework_TestResult</token>
  </line>
  <line no="120">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setFrameworkTestResults</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">results</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="124"/>
  <line no="125">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="126">
    <token name="T_DOC_COMMENT">	 * Getter for $version (@see $version).</token>
  </line>
  <line no="127">
    <token name="T_DOC_COMMENT">	 * @return String</token>
  </line>
  <line no="128">
    <token name="T_DOC_COMMENT">	 */</token>
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getVersion</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="130">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">version</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="131">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="132"/>
  <line no="133">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="134">
    <token name="T_DOC_COMMENT">	 * Loads and initiates phpunit, based on the available phpunit version.</token>
  </line>
  <line no="135">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="136">
    <token name="T_DOC_COMMENT">	 * @return PhpUnitWrapper Instance of the php-wrapper class</token>
  </line>
  <line no="137">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="138">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">inst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="139">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$phpunit_wrapper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="141">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Loaded via autoloader, composer or other generic</token>
  </line>
  <line no="142">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">class_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PHPUnit_Runner_Version'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="143">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$phpunit_wrapper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpUnitWrapper_Generic</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// 3.5 detection</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">fileExistsInIncludePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/PHPUnit/Autoload.php"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$phpunit_wrapper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpUnitWrapper_3_5</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// 3.4 detection</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">fileExistsInIncludePath</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/PHPUnit/Framework.php"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$phpunit_wrapper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpUnitWrapper_3_4</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// No version found - will lead to an error</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$phpunit_wrapper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpUnitWrapper</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="157">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$phpunit_wrapper</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">init</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="158"/>
  <line no="159">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$phpunit_wrapper</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="162"/>
  <line no="163">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="164">
    <token name="T_DOC_COMMENT">	 * Returns true if one of the two supported PHPUNIT versions is installed.</token>
  </line>
  <line no="165">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="166">
    <token name="T_DOC_COMMENT">	 * @return boolean true if PHPUnit has been installed on the environment.</token>
  </line>
  <line no="167">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="168">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">has_php_unit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="169">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOL_CAST">(Bool)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">inst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getVersion</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="170">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="171">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="172">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="173">
    <token name="T_DOC_COMMENT">	 * Implements method, defined in the interface IPhpUnitWrapper:init (@see IPhpUnitWrapper).</token>
  </line>
  <line no="174">
    <token name="T_DOC_COMMENT">	 * This wrapper class doesn't require any initialisation.</token>
  </line>
  <line no="175">
    <token name="T_DOC_COMMENT">	 */</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="176">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">init</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="177">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="178"/>
  <line no="179">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="180">
    <token name="T_DOC_COMMENT">	 * This method is called before the unittests are performed. </token>
  </line>
  <line no="181">
    <token name="T_DOC_COMMENT">	 * This wrapper implements the non-PHPUnit version which means that unit tests</token>
  </line>
  <line no="182">
    <token name="T_DOC_COMMENT">	 * can not be performed. </token>
  </line>
  <line no="183">
    <token name="T_DOC_COMMENT">	 * @throws PhpUnitWrapper_Excption</token>
  </line>
  <line no="184">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">beforeRunTests</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="186">
    <token name="T_WHITESPACE">		</token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpUnitWrapper_Exception</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Method \'beforeRunTests\' not implemented in PhpUnitWrapper.'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="187">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="188">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="189">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="190">
    <token name="T_DOC_COMMENT">	 * This method is called after the unittests are performed. </token>
  </line>
  <line no="191">
    <token name="T_DOC_COMMENT">	 * This wrapper implements the non-PHPUnit version which means that unit tests</token>
  </line>
  <line no="192">
    <token name="T_DOC_COMMENT">	 * can not be performed. </token>
  </line>
  <line no="193">
    <token name="T_DOC_COMMENT">	 * @throws PhpUnitWrapper_Excption</token>
  </line>
  <line no="194">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="195">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">afterRunTests</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="196">
    <token name="T_WHITESPACE">		</token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpUnitWrapper_Exception</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Method \'afterRunTests\' not implemented in PhpUnitWrapper.'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="197">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="198"/>
  <line no="199">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="200">
    <token name="T_DOC_COMMENT">	 * Perform all tests, added to the suite and initialises SilverStripe to collect</token>
  </line>
  <line no="201">
    <token name="T_DOC_COMMENT">	 * the results of the unit tests.</token>
  </line>
  <line no="202">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="203">
    <token name="T_DOC_COMMENT">	 * This method calls @see beforeRunTests and @see afterRunTests.</token>
  </line>
  <line no="204">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="205">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">runTests</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="206">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="207">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_cli</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="208">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setReporter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">CliTestReporter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="209">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="210">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setReporter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SapphireTestReporter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="212">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="213">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getFrameworkTestResults</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="214">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setFrameworkTestResults</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Framework_TestResult</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="215">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="216">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getFrameworkTestResults</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addListener</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getReporter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="217"/>
  <line no="218">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">beforeRunTests</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="219">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getSuite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">run</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getFrameworkTestResults</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="220">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">afterRunTests</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="221">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="222"/>
  <line no="223">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="224">
    <token name="T_DOC_COMMENT">	 * Returns an array containing all the module folders in the base dir.</token>
  </line>
  <line no="225">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="226">
    <token name="T_DOC_COMMENT">	 * @return array</token>
  </line>
  <line no="227">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="228">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">moduleDirectories</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="229">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$files</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">scandir</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">BASE_PATH</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$modules</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$files</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="232">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_dir</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">BASE_PATH</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">file_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">BASE_PATH</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/_config.php</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="233">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$modules</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$file</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="234">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="235">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="236">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$modules</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="237">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="238">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="239"/>
  <line no="240">
    <token name="T_DOC_COMMENT">/** </token>
  </line>
  <line no="241">
    <token name="T_DOC_COMMENT"> * Interface, implementing the general PHPUnit wrapper API.</token>
  </line>
  <line no="242">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="243">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">IPhpUnitWrapper</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="244"/>
  <line no="245">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">init</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="246"/>
  <line no="247">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">runTests</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="248">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="249"/>
  <line no="250"/>
  <line no="251">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="252">
    <token name="T_DOC_COMMENT"> * PHPUnitWrapper Exception class</token>
  </line>
  <line no="253">
    <token name="T_DOC_COMMENT"> */</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="254">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PhpUnitWrapper_Exception</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Exception</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="255"/>
  <line no="256"/>
  <line no="257">
    <token name="T_COMMENT">// If PHPUnit is not installed on the local environment, declare the class to </token>
  </line>
  <line no="258">
    <token name="T_COMMENT">// ensure that missing class declarations are available to avoind any PHP fatal</token>
  </line>
  <line no="259">
    <token name="T_COMMENT">// errors.</token>
  </line>
  <line no="260">
    <token name="T_COMMENT">//</token>
  </line>
  <line no="261">
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">PhpUnitWrapper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">has_php_unit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="262">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="263">
    <token name="T_DOC_COMMENT">	 * PHPUnit is a testing framework that can be installed using Composer.</token>
  </line>
  <line no="264">
    <token name="T_DOC_COMMENT">	 * It's not bundled with SilverStripe, you will need to install it yourself.</token>
  </line>
  <line no="265">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="266">
    <token name="T_DOC_COMMENT">	 * @package framework</token>
  </line>
  <line no="267">
    <token name="T_DOC_COMMENT">	 * @subpackage testing</token>
  </line>
  <line no="268">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="269">
    <token name="T_WHITESPACE">	</token>
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Framework_TestCase</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="270"/>
  <line no="271">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="272">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="273"/>
</source>
