<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/view" file="TemplateParser.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/view/TemplateParser.php" size="777" time="2015-03-14T10:42:30+13:00" unixtime="1426282950" sha1="557495dfa9bf2bb5dd41546693b03a849b3438c4" relative="framework/view/TemplateParser.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * This interface needs to be implemented by any template parser that is used in SSViewer</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * @package framework</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * @subpackage view</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="9">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TemplateParser</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="10">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT">	 * Compiles some passed template source code into the php code that will execute as per the template source.</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT">	 * @param  $string The source of the template</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT">	 * @param string $templateName The name of the template, normally the filename the template source was loaded from</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT">	 * @param bool $includeDebuggingComments True is debugging comments should be included in the output</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT">	 * @return mixed|string The php that, when executed (via include or exec) will behave as per the template source</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">compileString</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$string</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$templateName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$includeDebuggingComments</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="19">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
</source>
