<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/security" file="Security.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/security/Security.php" size="33040" time="2015-03-14T10:41:01+13:00" unixtime="1426282861" sha1="ce2ae9d7b1b131607abe40e2f2d1821bff34a34c" relative="framework/security/Security.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT"> * Implements a basic security model</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * @package framework</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * @subpackage security</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="7">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Security</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Controller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="8">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="9">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$allowed_actions</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="10">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'index'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="11">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'login'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="12">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'logout'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="13">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'basicauthlogin'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="14">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'lostpassword'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="15">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'passwordsent'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="16">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'changepassword'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="17">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ping'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LoginForm'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="19">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ChangePasswordForm'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="20">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LostPasswordForm'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22"/>
  <line no="23">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">	 * Default user name. Only used in dev-mode by {@link setDefaultAdmin()}</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">	 * @see setDefaultAdmin()</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$default_username</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="30"/>
  <line no="31">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">	 * Default password. Only used in dev-mode by {@link setDefaultAdmin()}</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">	 * @see setDefaultAdmin()</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$default_password</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="38"/>
  <line no="39">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">	 * If set to TRUE to prevent sharing of the session across several sites</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">	 * in the domain.</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">	 * @var bool</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strict_path_checking</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="47"/>
  <line no="48">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">	 * The password encryption algorithm to use by default.</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">	 * This is an arbitrary code registered through {@link PasswordEncryptor}.</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$password_encryption_algorithm</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'blowfish'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="56"/>
  <line no="57">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">	 * Showing "Remember me"-checkbox </token>
  </line>
  <line no="59">
    <token name="T_DOC_COMMENT">	 * on loginform, and saving encrypted credentials to a cookie. </token>
  </line>
  <line no="60">
    <token name="T_DOC_COMMENT"> 	 *</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT"> 	 * @config</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">	 * @var bool </token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">	 */</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$autologin_enabled</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">	 * Determine if login username may be remembered between login sessions</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">	 * If set to false this will disable autocomplete and prevent username persisting in the session</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">	 * @var bool</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$remember_username</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">	 * Location of word list to use for generating passwords</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$word_list</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'./wordlist.txt'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="82">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="83">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$template</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BlankPage'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT">	 * Template thats used to render the pages.</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">	 * @var string</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$template_main</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Page'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="93">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">	 * Default message set used in permission failures.</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="96">
    <token name="T_DOC_COMMENT">	 * @var array|string</token>
  </line>
  <line no="97">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$default_message_set</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="99"/>
  <line no="100">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="101">
    <token name="T_DOC_COMMENT">	 * Random secure token, can be used as a crypto key internally.</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">	 * Generate one through 'sake dev/generatesecuretoken'.</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="104">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="105">
    <token name="T_DOC_COMMENT">	 * @var String</token>
  </line>
  <line no="106">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$token</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT">	 * Get location of word list file</token>
  </line>
  <line no="111">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="112">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.word_list" config setting instead</token>
  </line>
  <line no="113">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="114">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">get_word_list</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.word_list" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">word_list</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="118">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="120">
    <token name="T_DOC_COMMENT">	 * Enable or disable recording of login attempts</token>
  </line>
  <line no="121">
    <token name="T_DOC_COMMENT">	 * through the {@link LoginRecord} object.</token>
  </line>
  <line no="122">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="123">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="124">
    <token name="T_DOC_COMMENT">	 * @var boolean $login_recording</token>
  </line>
  <line no="125">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$login_recording</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="129">
    <token name="T_DOC_COMMENT">	 * @var boolean If set to TRUE or FALSE, {@link database_is_ready()}</token>
  </line>
  <line no="130">
    <token name="T_DOC_COMMENT">	 * will always return FALSE. Used for unit testing.</token>
  </line>
  <line no="131">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">	</token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$force_database_is_ready</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="134">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="135">
    <token name="T_DOC_COMMENT">	 * When the database has once been verified as ready, it will not do the</token>
  </line>
  <line no="136">
    <token name="T_DOC_COMMENT">	 * checks again.</token>
  </line>
  <line no="137">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="138">
    <token name="T_DOC_COMMENT">	 * @var bool</token>
  </line>
  <line no="139">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">	</token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$database_is_ready</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="141"/>
  <line no="142">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="143">
    <token name="T_DOC_COMMENT">	 * Set location of word list file</token>
  </line>
  <line no="144">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="145">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.word_list" config setting instead</token>
  </line>
  <line no="146">
    <token name="T_DOC_COMMENT">	 * @param string $wordListFile Location of word list file</token>
  </line>
  <line no="147">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">set_word_list</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$wordListFile</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.word_list" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">word_list</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$wordListFile</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="154">
    <token name="T_DOC_COMMENT">	 * Set the default message set used in permissions failures.</token>
  </line>
  <line no="155">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="156">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.default_message_set" config setting instead</token>
  </line>
  <line no="157">
    <token name="T_DOC_COMMENT">	 * @param string|array $messageSet</token>
  </line>
  <line no="158">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">set_default_message_set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.default_message_set" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">default_message_set</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="162">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="163"/>
  <line no="164"/>
  <line no="165">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="166">
    <token name="T_DOC_COMMENT">	 * Register that we've had a permission failure trying to view the given page</token>
  </line>
  <line no="167">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="168">
    <token name="T_DOC_COMMENT">	 * This will redirect to a login page.</token>
  </line>
  <line no="169">
    <token name="T_DOC_COMMENT">	 * If you don't provide a messageSet, a default will be used.</token>
  </line>
  <line no="170">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="171">
    <token name="T_DOC_COMMENT">	 * @param Controller $controller The controller that you were on to cause the permission</token>
  </line>
  <line no="172">
    <token name="T_DOC_COMMENT">	 *                               failure.</token>
  </line>
  <line no="173">
    <token name="T_DOC_COMMENT">	 * @param string|array $messageSet The message to show to the user. This</token>
  </line>
  <line no="174">
    <token name="T_DOC_COMMENT">	 *                                 can be a string, or a map of different</token>
  </line>
  <line no="175">
    <token name="T_DOC_COMMENT">	 *                                 messages for different contexts.</token>
  </line>
  <line no="176">
    <token name="T_DOC_COMMENT">	 *                                 If you pass an array, you can use the</token>
  </line>
  <line no="177">
    <token name="T_DOC_COMMENT">	 *                                 following keys:</token>
  </line>
  <line no="178">
    <token name="T_DOC_COMMENT">	 *                                   - default: The default message</token>
  </line>
  <line no="179">
    <token name="T_DOC_COMMENT">	 *                                   - logInAgain: The message to show</token>
  </line>
  <line no="180">
    <token name="T_DOC_COMMENT">	 *                                                 if the user has just</token>
  </line>
  <line no="181">
    <token name="T_DOC_COMMENT">	 *                                                 logged out and the</token>
  </line>
  <line no="182">
    <token name="T_DOC_COMMENT">	 *                                   - alreadyLoggedIn: The message to</token>
  </line>
  <line no="183">
    <token name="T_DOC_COMMENT">	 *                                                      show if the user</token>
  </line>
  <line no="184">
    <token name="T_DOC_COMMENT">	 *                                                      is already logged</token>
  </line>
  <line no="185">
    <token name="T_DOC_COMMENT">	 *                                                      in and lacks the</token>
  </line>
  <line no="186">
    <token name="T_DOC_COMMENT">	 *                                                      permission to</token>
  </line>
  <line no="187">
    <token name="T_DOC_COMMENT">	 *                                                      access the item.</token>
  </line>
  <line no="188">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="189">
    <token name="T_DOC_COMMENT">	 * The alreadyLoggedIn value can contain a '%s' placeholder that will be replaced with a link</token>
  </line>
  <line no="190">
    <token name="T_DOC_COMMENT">	 * to log in.</token>
  </line>
  <line no="191">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="192">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">permissionFailure</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="193">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">set_ignore_disallowed_actions</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="194">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="195">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Controller</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">curr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="196">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="197">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">is_ajax</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="198">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SS_HTTPResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="199">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setStatusCode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">403</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="200">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">Member</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">currentUser</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setBody</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ContentController.NOTLOGGEDIN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Not logged in'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="202">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setStatusDescription</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ContentController.NOTLOGGEDIN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Not logged in'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="203">
    <token name="T_WHITESPACE">				</token>
    <token name="T_COMMENT">// Tell the CMS to allow re-aunthentication</token>
  </line>
  <line no="204">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">CMSSecurity</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">enabled</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="205">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'X-Reauthenticate'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'1'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="206">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="207">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="208">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="209">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="210">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Prepare the messageSet provided</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="212">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_message_set</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="213">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_message_set</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="214">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="215">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="216">
    <token name="T_WHITESPACE">						</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="217">
    <token name="T_WHITESPACE">							</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.NOTEPAGESECURED'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="218">
    <token name="T_WHITESPACE">							</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"That page is secured. Enter your credentials below and we will send "</token>
  </line>
  <line no="219">
    <token name="T_WHITESPACE">								</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"you right along."</token>
  </line>
  <line no="220">
    <token name="T_WHITESPACE">						</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="221">
    <token name="T_WHITESPACE">						</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'alreadyLoggedIn'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="222">
    <token name="T_WHITESPACE">							</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.ALREADYLOGGEDIN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="223">
    <token name="T_WHITESPACE">							</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"You don't have access to this page.  If you have another account that "</token>
  </line>
  <line no="224">
    <token name="T_WHITESPACE">								</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"can access that page, you can log in again below."</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="225">
    <token name="T_WHITESPACE">							</token>
  </line>
  <line no="226">
    <token name="T_WHITESPACE">							</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"%s will be replaced with a link to log in."</token>
  </line>
  <line no="227">
    <token name="T_WHITESPACE">						</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="228">
    <token name="T_WHITESPACE">						</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'logInAgain'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="229">
    <token name="T_WHITESPACE">							</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.LOGGEDOUT'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">							</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"You have been logged out.  If you would like to log in again, enter "</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">								</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"your credentials below."</token>
  </line>
  <line no="232">
    <token name="T_WHITESPACE">						</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="233">
    <token name="T_WHITESPACE">					</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="234">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="235">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="236"/>
  <line no="237">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="238">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="239">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="240"/>
  <line no="241">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Member</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">currentUser</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="242"/>
  <line no="243">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Work out the right message to show</token>
  </line>
  <line no="244">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="245">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SS_HTTPResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="246">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setStatusCode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">403</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="247"/>
  <line no="248">
    <token name="T_WHITESPACE">				</token>
    <token name="T_COMMENT">//If 'alreadyLoggedIn' is not specified in the array, then use the default</token>
  </line>
  <line no="249">
    <token name="T_WHITESPACE">				</token>
    <token name="T_COMMENT">//which should have been specified in the lines above</token>
  </line>
  <line no="250">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'alreadyLoggedIn'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="251">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'alreadyLoggedIn'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="252">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="253">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="254">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="255"/>
  <line no="256">
    <token name="T_WHITESPACE">				</token>
    <token name="T_COMMENT">// Somewhat hackish way to render a login form with an error message.</token>
  </line>
  <line no="257">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$me</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Security</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="258">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$form</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$me</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">LoginForm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$form</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sessionMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warning'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="260">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">Session</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MemberLoginForm.force_message'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="261">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$formText</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$me</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">login</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="262"/>
  <line no="263">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setBody</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$formText</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="264"/>
  <line no="265">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">extend</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'permissionDenied'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="266"/>
  <line no="267">
    <token name="T_WHITESPACE">				</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="268">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="269">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$messageSet</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="270">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="271"/>
  <line no="272">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">Session</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Security.Message.message"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="273">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">Session</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Security.Message.type"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'warning'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="274"/>
  <line no="275">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">Session</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"BackURL"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'REQUEST_URI'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="276"/>
  <line no="277">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// TODO AccessLogEntry needs an extension to handle permission denied errors</token>
  </line>
  <line no="278">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Audit logging hook</token>
  </line>
  <line no="279">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">extend</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'permissionDenied'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="280"/>
  <line no="281">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">redirect</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="282">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">Config</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">inst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'login_url'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="283">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"?BackURL="</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">urlencode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'REQUEST_URI'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="284">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="285">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="286">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="287">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="288"/>
  <line no="289">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">init</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="290">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">parent</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">init</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="291"/>
  <line no="292">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Prevent clickjacking, see https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options</token>
  </line>
  <line no="293">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addHeader</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'X-Frame-Options'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SAMEORIGIN'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="294">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="295"/>
  <line no="296">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">index</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="297">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">httpError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">404</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// no-op</token>
  </line>
  <line no="298">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="299"/>
  <line no="300">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="301">
    <token name="T_DOC_COMMENT">	 * Get the selected authenticator for this request</token>
  </line>
  <line no="302">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="303">
    <token name="T_DOC_COMMENT">	 * @return string Class name of Authenticator</token>
  </line>
  <line no="304">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="305">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getAuthenticator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="306">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$authenticator</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">request</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">requestVar</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'AuthenticationMethod'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="307">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$authenticator</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="308">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$authenticators</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Authenticator</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_authenticators</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="309">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$authenticator</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$authenticators</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="310">
    <token name="T_WHITESPACE">				</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$authenticator</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="311">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="312">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="313">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Authenticator</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_default_authenticator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="314">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="315">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="316"/>
  <line no="317">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="318">
    <token name="T_DOC_COMMENT">	 * Get the login form to process according to the submitted data</token>
  </line>
  <line no="319">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="320">
    <token name="T_DOC_COMMENT">	 * @return Form</token>
  </line>
  <line no="321">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="322">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">LoginForm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="323">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$authenticator</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAuthenticator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="324">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$authenticator</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$authenticator</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_login_form</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="325">
    <token name="T_WHITESPACE">		</token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Exception</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Passed invalid authentication method'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="326">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="327"/>
  <line no="328">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="329">
    <token name="T_DOC_COMMENT">	 * Get the login forms for all available authentication methods</token>
  </line>
  <line no="330">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="331">
    <token name="T_DOC_COMMENT">	 * @return array Returns an array of available login forms (array of Form</token>
  </line>
  <line no="332">
    <token name="T_DOC_COMMENT">	 *               objects).</token>
  </line>
  <line no="333">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="334">
    <token name="T_DOC_COMMENT">	 * @todo Check how to activate/deactivate authentication methods</token>
  </line>
  <line no="335">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="336">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">GetLoginForms</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="337">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="338"/>
  <line no="339">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$authenticators</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Authenticator</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_authenticators</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="340">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$authenticators</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$authenticator</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="341">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$authenticator</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_login_form</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="342">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="343"/>
  <line no="344">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="345">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="346"/>
  <line no="347"/>
  <line no="348">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="349">
    <token name="T_DOC_COMMENT">	 * Get a link to a security action</token>
  </line>
  <line no="350">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="351">
    <token name="T_DOC_COMMENT">	 * @param string $action Name of the action</token>
  </line>
  <line no="352">
    <token name="T_DOC_COMMENT">	 * @return string Returns the link to the given action</token>
  </line>
  <line no="353">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="354">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Link</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$action</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="355">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Controller</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">join_links</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">baseURL</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Security"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$action</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="356">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="357"/>
  <line no="358">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="359">
    <token name="T_DOC_COMMENT">	 * This action is available as a keep alive, so user</token>
  </line>
  <line no="360">
    <token name="T_DOC_COMMENT">	 * sessions don't timeout. A common use is in the admin.</token>
  </line>
  <line no="361">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="362">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ping</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="363">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="364">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="365"/>
  <line no="366">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="367">
    <token name="T_DOC_COMMENT">	 * Log the currently logged in user out</token>
  </line>
  <line no="368">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="369">
    <token name="T_DOC_COMMENT">	 * @param bool $redirect Redirect the user back to where they came.</token>
  </line>
  <line no="370">
    <token name="T_DOC_COMMENT">	 *                       - If it's false, the code calling logout() is</token>
  </line>
  <line no="371">
    <token name="T_DOC_COMMENT">	 *                         responsible for sending the user where-ever</token>
  </line>
  <line no="372">
    <token name="T_DOC_COMMENT">	 *                         they should go.</token>
  </line>
  <line no="373">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="374">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">logout</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$redirect</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="375">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Member</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">currentUser</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="376">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">logOut</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="377"/>
  <line no="378">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$redirect</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">response</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isFinished</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="379">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">redirectBack</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="380">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="381">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="382"/>
  <line no="383">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="384">
    <token name="T_DOC_COMMENT">	 * Perform pre-login checking and prepare a response if available prior to login</token>
  </line>
  <line no="385">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="386">
    <token name="T_DOC_COMMENT">	 * @return SS_HTTPResponse Substitute response object if the login process should be curcumvented.</token>
  </line>
  <line no="387">
    <token name="T_DOC_COMMENT">	 * Returns null if should proceed as normal.</token>
  </line>
  <line no="388">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="389">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preLogin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="390">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Event handler for pre-login, with an option to let it break you out of the login form</token>
  </line>
  <line no="391">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$eventResults</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">extend</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'onBeforeSecurityLogin'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="392">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// If there was a redirection, return</token>
  </line>
  <line no="393">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">redirectedTo</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">response</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="394">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// If there was an SS_HTTPResponse object returned, then return that</token>
  </line>
  <line no="395">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$eventResults</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="396">
    <token name="T_WHITESPACE">			</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$eventResults</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="397">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INSTANCEOF">instanceof</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SS_HTTPResponse</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$result</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="398">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="399">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="400">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="401"/>
  <line no="402">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="403">
    <token name="T_DOC_COMMENT">	 * Prepare the controller for handling the response to this request</token>
  </line>
  <line no="404">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="405">
    <token name="T_DOC_COMMENT">	 * @param string $title Title to use</token>
  </line>
  <line no="406">
    <token name="T_DOC_COMMENT">	 * @return Controller</token>
  </line>
  <line no="407">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="408">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getResponseController</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$title</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="409">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">class_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SiteTree'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="410"/>
  <line no="411">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Use sitetree pages to render the security page</token>
  </line>
  <line no="412">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$tmpPage</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Page</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="413">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$tmpPage</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">Title</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$title</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="414">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$tmpPage</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">URLSegment</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Security"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="415">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Disable ID-based caching  of the log-in page by making it a random number</token>
  </line>
  <line no="416">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$tmpPage</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">ID</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MULT">*</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">rand</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_LNUMBER">10000000</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="417"/>
  <line no="418">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Page_Controller</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tmpPage</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="419">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setDataModel</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">model</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="420">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">init</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="421">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="422">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="423"/>
  <line no="424">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="425">
    <token name="T_DOC_COMMENT">	 * Determine the list of templates to use for rendering the given action</token>
  </line>
  <line no="426">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="427">
    <token name="T_DOC_COMMENT">	 * @param string $action</token>
  </line>
  <line no="428">
    <token name="T_DOC_COMMENT">	 * @return array Template list</token>
  </line>
  <line no="429">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="430">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getTemplatesFor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$action</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="431">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">Security_</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$action</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">stat</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'template_main'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BlankPage'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="432">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="433"/>
  <line no="434">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="435">
    <token name="T_DOC_COMMENT">	 * Combine the given forms into a formset with a tabbed interface</token>
  </line>
  <line no="436">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="437">
    <token name="T_DOC_COMMENT">	 * @param array $forms List of LoginForm instances</token>
  </line>
  <line no="438">
    <token name="T_DOC_COMMENT">	 * @return string</token>
  </line>
  <line no="439">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="440">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">generateLoginFormSet</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="441">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Include resources</token>
  </line>
  <line no="442">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Requirements</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">javascript</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">FRAMEWORK_DIR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/thirdparty/jquery/jquery.js'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="443">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Requirements</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">javascript</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">FRAMEWORK_DIR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/thirdparty/jquery-ui/jquery-ui.js'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="444">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Requirements</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">javascript</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">FRAMEWORK_DIR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/thirdparty/jquery-entwine/dist/jquery.entwine-dist.js'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="445">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Requirements</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">css</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">THIRDPARTY_DIR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/jquery-ui-themes/smoothness/jquery-ui.css'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="446">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Requirements</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">css</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">FRAMEWORK_DIR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/css/Security_login.css'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="447">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Requirements</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">javascript</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">FRAMEWORK_DIR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/javascript/TabSet.js'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="448">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="449">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;div id="Form_EditForm"&gt;'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="450">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;div class="ss-tabset"&gt;'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="451">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;ul&gt;'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="452">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$contentForms</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="453"/>
  <line no="454">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$form</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="455">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;li&gt;&lt;a href=\"#</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$form</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">FormName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">_tab\"&gt;</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
  </line>
  <line no="456">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$form</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getAuthenticator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">get_name</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="457">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;/a&gt;&lt;/li&gt;\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="458"/>
  <line no="459">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$contentForms</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;div class="tab" id="'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$form</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">FormName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'_tab"&gt;'</token>
  </line>
  <line no="460">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$form</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">forTemplate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;/div&gt;\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="461">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="462"/>
  <line no="463">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;/ul&gt;\n"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$contentForms</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\n&lt;/div&gt;\n&lt;/div&gt;\n"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="464">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="465">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="466"/>
  <line no="467">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="468">
    <token name="T_DOC_COMMENT">	 * Get the HTML Content for the $Content area during login</token>
  </line>
  <line no="469">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="470">
    <token name="T_DOC_COMMENT">	 * @return string Message in HTML format</token>
  </line>
  <line no="471">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="472">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getLoginMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="473">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Session</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.Message.message'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="474">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="475"/>
  <line no="476">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$messageType</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Session</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.Message.type'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="477">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$messageType</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'bad'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="478">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;p class=\"message </token>
    <token name="T_VARIABLE">$messageType</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\"&gt;</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/p&gt;</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="479">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="480">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;p&gt;</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/p&gt;</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="481">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="482">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="483"/>
  <line no="484"/>
  <line no="485">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="486">
    <token name="T_DOC_COMMENT">	 * Show the "login" page</token>
  </line>
  <line no="487">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="488">
    <token name="T_DOC_COMMENT">	 * @return string Returns the "login" page as HTML code.</token>
  </line>
  <line no="489">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="490">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">login</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="491">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Check pre-login process</token>
  </line>
  <line no="492">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">preLogin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="493"/>
  <line no="494">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Legacy: Allow projects to use custom mysite/css/tabs.css here</token>
  </line>
  <line no="495">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$customCSS</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">project</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/css/tabs.css'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="496">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Director</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">fileExists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$customCSS</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="497">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">Requirements</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">css</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$customCSS</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="498">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="499"/>
  <line no="500">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Get response handler</token>
  </line>
  <line no="501">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponseController</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.LOGIN'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Log in'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="502"/>
  <line no="503">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">GetLoginForms</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="504">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="505">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">user_error</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'No login-forms found, please use Authenticator::register_authenticator() to add one'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="506">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">E_USER_ERROR</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="507">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="508"/>
  <line no="509">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// if the controller calls Director::redirect(), this will break early</token>
  </line>
  <line no="510">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isFinished</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="511">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="512">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// only display tabs when more than one authenticator is provided</token>
  </line>
  <line no="513">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// to save bandwidth and reduce the amount of custom styling needed </token>
  </line>
  <line no="514">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_GT">&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="515">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">generateLoginFormSet</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="516">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="517">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$forms</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">forTemplate</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="518">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="519">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="520">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getLoginMessage</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="521">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customise</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="522">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Content"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$message</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="523">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Form"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="524">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="525">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="526">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customise</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="527">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Form"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="528">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="529">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="530">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="531">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Session</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">clear</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.Message'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="532"/>
  <line no="533">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// custom processing</token>
  </line>
  <line no="534">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">renderWith</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTemplatesFor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'login'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="535">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="536">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="537">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">basicauthlogin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="538">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">BasicAuth</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">requireLogin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"SilverStripe login"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ADMIN'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="539">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">LogIn</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="540">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="541">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="542">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="543">
    <token name="T_DOC_COMMENT">	 * Show the "lost password" page</token>
  </line>
  <line no="544">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="545">
    <token name="T_DOC_COMMENT">	 * @return string Returns the "lost password" page as HTML code.</token>
  </line>
  <line no="546">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="547">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">lostpassword</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="548">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponseController</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.LOSTPASSWORDHEADER'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Lost Password'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="549"/>
  <line no="550">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// if the controller calls Director::redirect(), this will break early</token>
  </line>
  <line no="551">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isFinished</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="552"/>
  <line no="553">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customise</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="554">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Content'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="555">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;p&gt;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="556">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="557">
    <token name="T_WHITESPACE">					</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.NOTERESETPASSWORD'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="558">
    <token name="T_WHITESPACE">					</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Enter your e-mail address and we will send you a link with which you can reset your password'</token>
  </line>
  <line no="559">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="560">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;/p&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="561">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Form'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">LostPasswordForm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="562">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="563">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="564">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">//Controller::$currentController = $controller;</token>
  </line>
  <line no="565">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">renderWith</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTemplatesFor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'lostpassword'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="566">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="567"/>
  <line no="568"/>
  <line no="569">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="570">
    <token name="T_DOC_COMMENT">	 * Factory method for the lost password form</token>
  </line>
  <line no="571">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="572">
    <token name="T_DOC_COMMENT">	 * @return Form Returns the lost password form</token>
  </line>
  <line no="573">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="574">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">LostPasswordForm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="575">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">MemberLoginForm</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="576">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'LostPasswordForm'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="577">
    <token name="T_WHITESPACE">			</token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FieldList</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="578">
    <token name="T_WHITESPACE">				</token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">EmailField</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Email'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Member.EMAIL'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Email'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="579">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="580">
    <token name="T_WHITESPACE">			</token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FieldList</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="581">
    <token name="T_WHITESPACE">				</token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FormAction</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="582">
    <token name="T_WHITESPACE">					</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'forgotPassword'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="583">
    <token name="T_WHITESPACE">					</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.BUTTONSEND'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Send me the password reset link'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="584">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="585">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="586">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">false</token>
  </line>
  <line no="587">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="588">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="589"/>
  <line no="590"/>
  <line no="591">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="592">
    <token name="T_DOC_COMMENT">	 * Show the "password sent" page, after a user has requested</token>
  </line>
  <line no="593">
    <token name="T_DOC_COMMENT">	 * to reset their password.</token>
  </line>
  <line no="594">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="595">
    <token name="T_DOC_COMMENT">	 * @param SS_HTTPRequest $request The SS_HTTPRequest for this action. </token>
  </line>
  <line no="596">
    <token name="T_DOC_COMMENT">	 * @return string Returns the "password sent" page as HTML code.</token>
  </line>
  <line no="597">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="598">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">passwordsent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$request</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="599">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponseController</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.LOSTPASSWORDHEADER'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Lost Password'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="600"/>
  <line no="601">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// if the controller calls Director::redirect(), this will break early</token>
  </line>
  <line no="602">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isFinished</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="603"/>
  <line no="604">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Convert</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">raw2xml</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">rawurldecode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$request</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">param</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ID'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$request</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getExtension</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="605"/>
  <line no="606">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customise</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="607">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Title'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.PASSWORDSENTHEADER'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Password reset link sent to '{email}'"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="608">
    <token name="T_WHITESPACE">				</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="609">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Content'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
  </line>
  <line no="610">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;p&gt;"</token>
  </line>
  <line no="611">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.PASSWORDSENTTEXT'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="612">
    <token name="T_WHITESPACE">					</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Thank you! A reset link has been sent to '{email}', provided an account exists for this email"</token>
  </line>
  <line no="613">
    <token name="T_WHITESPACE">					</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" address."</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="614">
    <token name="T_WHITESPACE">					</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="615">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;/p&gt;"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="616">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Email'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$email</token>
  </line>
  <line no="617">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="618">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="619">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">//Controller::$currentController = $controller;</token>
  </line>
  <line no="620">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">renderWith</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTemplatesFor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'passwordsent'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="621">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="622"/>
  <line no="623"/>
  <line no="624">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="625">
    <token name="T_DOC_COMMENT">	 * Create a link to the password reset form.</token>
  </line>
  <line no="626">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="627">
    <token name="T_DOC_COMMENT">	 * GET parameters used:</token>
  </line>
  <line no="628">
    <token name="T_DOC_COMMENT">	 * - m: member ID</token>
  </line>
  <line no="629">
    <token name="T_DOC_COMMENT">	 * - t: plaintext token</token>
  </line>
  <line no="630">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="631">
    <token name="T_DOC_COMMENT">	 * @param Member $member Member object associated with this link.</token>
  </line>
  <line no="632">
    <token name="T_DOC_COMMENT">	 * @param string $autoLoginHash The auto login token.</token>
  </line>
  <line no="633">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="634">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getPasswordResetLink</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$autologinToken</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="635">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$autologinToken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">urldecode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$autologinToken</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="636">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$selfControllerClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLASS_C">__CLASS__</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="637">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$selfController</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$selfControllerClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="638">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$selfController</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">Link</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'changepassword'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">?m=</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">ID</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&amp;t=</token>
    <token name="T_VARIABLE">$autologinToken</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="639">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="640">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="641">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="642">
    <token name="T_DOC_COMMENT">	 * Show the "change password" page.</token>
  </line>
  <line no="643">
    <token name="T_DOC_COMMENT">	 * This page can either be called directly by logged-in users</token>
  </line>
  <line no="644">
    <token name="T_DOC_COMMENT">	 * (in which case they need to provide their old password),</token>
  </line>
  <line no="645">
    <token name="T_DOC_COMMENT">	 * or through a link emailed through {@link lostpassword()}.</token>
  </line>
  <line no="646">
    <token name="T_DOC_COMMENT">	 * In this case no old password is required, authentication is ensured</token>
  </line>
  <line no="647">
    <token name="T_DOC_COMMENT">	 * through the Member.AutoLoginHash property.</token>
  </line>
  <line no="648">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="649">
    <token name="T_DOC_COMMENT">	 * @see ChangePasswordForm</token>
  </line>
  <line no="650">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="651">
    <token name="T_DOC_COMMENT">	 * @return string Returns the "change password" page as HTML code.</token>
  </line>
  <line no="652">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="653">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">changepassword</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="654">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponseController</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.CHANGEPASSWORDHEADER'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Change your password'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="655"/>
  <line no="656">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// if the controller calls Director::redirect(), this will break early</token>
  </line>
  <line no="657">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isFinished</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$response</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="658"/>
  <line no="659">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Extract the member from the URL.</token>
  </line>
  <line no="660">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="661">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_REQUEST</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'m'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="662">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Member</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ID'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_INT_CAST">(int)</token>
    <token name="T_VARIABLE">$_REQUEST</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'m'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">First</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="663">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="664"/>
  <line no="665">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Check whether we are merely changin password, or resetting.</token>
  </line>
  <line no="666">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_REQUEST</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'t'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">validateAutoLoginToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_REQUEST</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'t'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="667">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// On first valid password reset request redirect to the same URL without hash to avoid referrer leakage.</token>
  </line>
  <line no="668"/>
  <line no="669">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Store the hash for the change password form. Will be unset after reload within the ChangePasswordForm.</token>
  </line>
  <line no="670">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">Session</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'AutoLoginHash'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">encryptWithUserSettings</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_REQUEST</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'t'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="671">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="672">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">redirect</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">Link</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'changepassword'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="673">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Session</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'AutoLoginHash'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="674">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Subsequent request after the "first load with hash" (see previous if clause).</token>
  </line>
  <line no="675">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customise</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="676">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Content'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
  </line>
  <line no="677">
    <token name="T_WHITESPACE">					</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;p&gt;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="678">
    <token name="T_WHITESPACE">					</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.ENTERNEWPASSWORD'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Please enter a new password.'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
  </line>
  <line no="679">
    <token name="T_WHITESPACE">					</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;/p&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="680">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Form'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">ChangePasswordForm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="681">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="682">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSEIF">elseif</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Member</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">currentUser</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="683">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Logged in user requested a password change form.</token>
  </line>
  <line no="684">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customise</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="685">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Content'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;p&gt;'</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="686">
    <token name="T_WHITESPACE">					</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.CHANGEPASSWORDBELOW'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'You can change your password below.'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;/p&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="687">
    <token name="T_WHITESPACE">				</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Form'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">ChangePasswordForm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="688"/>
  <line no="689">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="690">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Show friendly message if it seems like the user arrived here via password reset feature.</token>
  </line>
  <line no="691">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_REQUEST</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'m'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_REQUEST</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'t'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="692">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$controller</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">customise</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="693">
    <token name="T_WHITESPACE">					</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Content'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
  </line>
  <line no="694">
    <token name="T_WHITESPACE">						</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="695">
    <token name="T_WHITESPACE">							</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.NOTERESETLINKINVALID'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="696">
    <token name="T_WHITESPACE">							</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;p&gt;The password reset link is invalid or expired.&lt;/p&gt;'</token>
  </line>
  <line no="697">
    <token name="T_WHITESPACE">							</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;p&gt;You can request a new one &lt;a href="{link1}"&gt;here&lt;/a&gt; or change your password after'</token>
  </line>
  <line no="698">
    <token name="T_WHITESPACE">							</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' you &lt;a href="{link2}"&gt;logged in&lt;/a&gt;.&lt;/p&gt;'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="699">
    <token name="T_WHITESPACE">							</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'link1'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">Link</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'lostpassword'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'link2'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">link</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'login'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="700">
    <token name="T_WHITESPACE">						</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="701">
    <token name="T_WHITESPACE">					</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="702">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="703">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ELSE">else</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="704">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">permissionFailure</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="705">
    <token name="T_WHITESPACE">					</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="706">
    <token name="T_WHITESPACE">					</token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Security.ERRORPASSWORDPERMISSION'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'You must be logged in in order to change your password!'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="707">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="708">
    <token name="T_WHITESPACE">				</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="709">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="710">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="711"/>
  <line no="712">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$customisedController</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">renderWith</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTemplatesFor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'changepassword'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="713">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="714">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="715">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="716">
    <token name="T_DOC_COMMENT">	 * Factory method for the lost password form</token>
  </line>
  <line no="717">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="718">
    <token name="T_DOC_COMMENT">	 * @return Form Returns the lost password form</token>
  </line>
  <line no="719">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="720">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ChangePasswordForm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="721">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Object</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ChangePasswordForm'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ChangePasswordForm'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="722">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="723"/>
  <line no="724">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="725">
    <token name="T_DOC_COMMENT">	 * Return an existing member with administrator privileges, or create one of necessary.</token>
  </line>
  <line no="726">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="727">
    <token name="T_DOC_COMMENT">	 * Will create a default 'Administrators' group if no group is found</token>
  </line>
  <line no="728">
    <token name="T_DOC_COMMENT">	 * with an ADMIN permission. Will create a new 'Admin' member with administrative permissions</token>
  </line>
  <line no="729">
    <token name="T_DOC_COMMENT">	 * if no existing Member with these permissions is found. </token>
  </line>
  <line no="730">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="731">
    <token name="T_DOC_COMMENT">	 * Important: Any newly created administrator accounts will NOT have valid</token>
  </line>
  <line no="732">
    <token name="T_DOC_COMMENT">	 * login credentials (Email/Password properties), which means they can't be used for login</token>
  </line>
  <line no="733">
    <token name="T_DOC_COMMENT">	 * purposes outside of any default credentials set through {@link Security::setDefaultAdmin()}.</token>
  </line>
  <line no="734">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="735">
    <token name="T_DOC_COMMENT">	 * @return Member </token>
  </line>
  <line no="736">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="737">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">findAnAdministrator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="738">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// coupling to subsites module</token>
  </line>
  <line no="739">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$origSubsite</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="740">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_callable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Subsite::changeSubsite'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="741">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$origSubsite</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Subsite</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">currentSubsiteID</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="742">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">Subsite</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">changeSubsite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="743">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="744"/>
  <line no="745">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="746"/>
  <line no="747">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// find a group with ADMIN permission</token>
  </line>
  <line no="748">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$adminGroup</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Permission</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_groups_by_permission</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ADMIN'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">First</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="749">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="750">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_callable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Subsite::changeSubsite'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="751">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">Subsite</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">changeSubsite</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$origSubsite</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="752">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="753">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="754">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$adminGroup</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="755">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$adminGroup</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">Members</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">First</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="756">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="757"/>
  <line no="758">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$adminGroup</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="759">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">singleton</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Group'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">requireDefaultRecords</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="760">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$adminGroup</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Permission</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_groups_by_permission</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ADMIN'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">First</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="761">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="762">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="763">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="764">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">singleton</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Member'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">requireDefaultRecords</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="765">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Permission</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get_members_by_permission</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ADMIN'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">First</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="766">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="767"/>
  <line no="768">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="769">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Member</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">default_admin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="770">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="771"/>
  <line no="772">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="773">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// Failover to a blank admin</token>
  </line>
  <line no="774">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Member</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="775">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">FirstName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">_t</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Member.DefaultAdminFirstname'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Default Admin'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="776">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">write</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="777">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">Groups</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">add</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$adminGroup</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="778">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="779"/>
  <line no="780">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="781">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="782"/>
  <line no="783">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="784">
    <token name="T_DOC_COMMENT">	 * Flush the default admin credentials</token>
  </line>
  <line no="785">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="786">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">clear_default_admin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="787">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_username</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="788">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_password</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="789">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="790"/>
  <line no="791"/>
  <line no="792">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="793">
    <token name="T_DOC_COMMENT">	 * Set a default admin in dev-mode</token>
  </line>
  <line no="794">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="795">
    <token name="T_DOC_COMMENT">	 * This will set a static default-admin which is not existing</token>
  </line>
  <line no="796">
    <token name="T_DOC_COMMENT">	 * as a database-record. By this workaround we can test pages in dev-mode</token>
  </line>
  <line no="797">
    <token name="T_DOC_COMMENT">	 * with a unified login. Submitted login-credentials are first checked</token>
  </line>
  <line no="798">
    <token name="T_DOC_COMMENT">	 * against this static information in {@link Security::authenticate()}.</token>
  </line>
  <line no="799">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="800">
    <token name="T_DOC_COMMENT">	 * @param string $username The user name</token>
  </line>
  <line no="801">
    <token name="T_DOC_COMMENT">	 * @param string $password The password (in cleartext)</token>
  </line>
  <line no="802">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="803">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setDefaultAdmin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$password</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="804">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// don't overwrite if already set</token>
  </line>
  <line no="805">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_username</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_password</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="806">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="807">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="808"/>
  <line no="809">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_username</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="810">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_password</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$password</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="811">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="812">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="813">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="814">
    <token name="T_DOC_COMMENT">	 * Checks if the passed credentials are matching the default-admin.</token>
  </line>
  <line no="815">
    <token name="T_DOC_COMMENT">	 * Compares cleartext-password set through Security::setDefaultAdmin().</token>
  </line>
  <line no="816">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="817">
    <token name="T_DOC_COMMENT">	 * @param string $username</token>
  </line>
  <line no="818">
    <token name="T_DOC_COMMENT">	 * @param string $password </token>
  </line>
  <line no="819">
    <token name="T_DOC_COMMENT">	 * @return bool</token>
  </line>
  <line no="820">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="821">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">check_default_admin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$password</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="822">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="823">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_username</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$username</token>
  </line>
  <line no="824">
    <token name="T_WHITESPACE">			</token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_password</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$password</token>
  </line>
  <line no="825">
    <token name="T_WHITESPACE">			</token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">has_default_admin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="826">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="827">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="828">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="829">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="830">
    <token name="T_DOC_COMMENT">	 * Check that the default admin account has been set.</token>
  </line>
  <line no="831">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="832">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">has_default_admin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="833">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_username</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_password</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="834">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="835"/>
  <line no="836">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="837">
    <token name="T_DOC_COMMENT">	 * Get default admin username</token>
  </line>
  <line no="838">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="839">
    <token name="T_DOC_COMMENT">	 * @return string</token>
  </line>
  <line no="840">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="841">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">default_admin_username</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="842">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_username</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="843">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="844"/>
  <line no="845">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="846">
    <token name="T_DOC_COMMENT">	 * Get default admin password</token>
  </line>
  <line no="847">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="848">
    <token name="T_DOC_COMMENT">	 * @return string</token>
  </line>
  <line no="849">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="850">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">default_admin_password</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="851">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$default_password</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="852">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="853"/>
  <line no="854">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="855">
    <token name="T_DOC_COMMENT">	 * Set strict path checking</token>
  </line>
  <line no="856">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="857">
    <token name="T_DOC_COMMENT">	 * This prevents sharing of the session across several sites in the</token>
  </line>
  <line no="858">
    <token name="T_DOC_COMMENT">	 * domain.</token>
  </line>
  <line no="859">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="860">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.strict_path_checking" config setting instead</token>
  </line>
  <line no="861">
    <token name="T_DOC_COMMENT">	 * @param boolean $strictPathChecking To enable or disable strict patch</token>
  </line>
  <line no="862">
    <token name="T_DOC_COMMENT">	 *                                    checking.</token>
  </line>
  <line no="863">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="864">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setStrictPathChecking</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$strictPathChecking</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="865">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.strict_path_checking" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="866">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">strict_path_checking</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$strictPathChecking</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="867">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="868"/>
  <line no="869"/>
  <line no="870">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="871">
    <token name="T_DOC_COMMENT">	 * Get strict path checking</token>
  </line>
  <line no="872">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="873">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.strict_path_checking" config setting instead</token>
  </line>
  <line no="874">
    <token name="T_DOC_COMMENT">	 * @return boolean Status of strict path checking</token>
  </line>
  <line no="875">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="876">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getStrictPathChecking</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="877">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.strict_path_checking" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="878">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">strict_path_checking</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="879">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="880"/>
  <line no="881"/>
  <line no="882">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="883">
    <token name="T_DOC_COMMENT">	 * Set the password encryption algorithm</token>
  </line>
  <line no="884">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="885">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.password_encryption_algorithm" config setting instead</token>
  </line>
  <line no="886">
    <token name="T_DOC_COMMENT">	 * @param string $algorithm One of the available password encryption</token>
  </line>
  <line no="887">
    <token name="T_DOC_COMMENT">	 *  algorithms determined by {@link Security::get_encryption_algorithms()}</token>
  </line>
  <line no="888">
    <token name="T_DOC_COMMENT">	 * @return bool Returns TRUE if the passed algorithm was valid, otherwise FALSE.</token>
  </line>
  <line no="889">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="890">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">set_password_encryption_algorithm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$algorithm</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="891">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.password_encryption_algorithm" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="892">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="893">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">password_encryption_algorithm</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$algorithm</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="894">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="895">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="896">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="897">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.password_encryption_algorithm" config setting instead</token>
  </line>
  <line no="898">
    <token name="T_DOC_COMMENT">	 * @return String</token>
  </line>
  <line no="899">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="900">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">get_password_encryption_algorithm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="901">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.password_encryption_algorithm" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="902">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">password_encryption_algorithm</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="903">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="904"/>
  <line no="905">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="906">
    <token name="T_DOC_COMMENT">	 * Encrypt a password according to the current password encryption settings.</token>
  </line>
  <line no="907">
    <token name="T_DOC_COMMENT">	 * If the settings are so that passwords shouldn't be encrypted, the</token>
  </line>
  <line no="908">
    <token name="T_DOC_COMMENT">	 * result is simple the clear text password with an empty salt except when</token>
  </line>
  <line no="909">
    <token name="T_DOC_COMMENT">	 * a custom algorithm ($algorithm parameter) was passed.</token>
  </line>
  <line no="910">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="911">
    <token name="T_DOC_COMMENT">	 * @param string $password The password to encrypt</token>
  </line>
  <line no="912">
    <token name="T_DOC_COMMENT">	 * @param string $salt Optional: The salt to use. If it is not passed, but</token>
  </line>
  <line no="913">
    <token name="T_DOC_COMMENT">	 *  needed, the method will automatically create a</token>
  </line>
  <line no="914">
    <token name="T_DOC_COMMENT">	 *  random salt that will then be returned as return value.</token>
  </line>
  <line no="915">
    <token name="T_DOC_COMMENT">	 * @param string $algorithm Optional: Use another algorithm to encrypt the</token>
  </line>
  <line no="916">
    <token name="T_DOC_COMMENT">	 *  password (so that the encryption algorithm can be changed over the time).</token>
  </line>
  <line no="917">
    <token name="T_DOC_COMMENT">	 * @param Member $member Optional</token>
  </line>
  <line no="918">
    <token name="T_DOC_COMMENT">	 * @return mixed Returns an associative array containing the encrypted</token>
  </line>
  <line no="919">
    <token name="T_DOC_COMMENT">	 *  password and the used salt in the form:</token>
  </line>
  <line no="920">
    <token name="T_DOC_COMMENT">	 * &lt;code&gt;</token>
  </line>
  <line no="921">
    <token name="T_DOC_COMMENT">	 * 	array(</token>
  </line>
  <line no="922">
    <token name="T_DOC_COMMENT">	 * 	'password' =&gt; string, </token>
  </line>
  <line no="923">
    <token name="T_DOC_COMMENT">	 * 	'salt' =&gt; string, </token>
  </line>
  <line no="924">
    <token name="T_DOC_COMMENT">	 * 	'algorithm' =&gt; string,</token>
  </line>
  <line no="925">
    <token name="T_DOC_COMMENT">	 * 	'encryptor' =&gt; PasswordEncryptor instance</token>
  </line>
  <line no="926">
    <token name="T_DOC_COMMENT">	 * 	)</token>
  </line>
  <line no="927">
    <token name="T_DOC_COMMENT">	 * &lt;/code&gt;</token>
  </line>
  <line no="928">
    <token name="T_DOC_COMMENT">	 * If the passed algorithm is invalid, FALSE will be returned.</token>
  </line>
  <line no="929">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="930">
    <token name="T_DOC_COMMENT">	 * @see encrypt_passwords()</token>
  </line>
  <line no="931">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="932">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">encrypt_password</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$password</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$salt</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$algorithm</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="933">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Fall back to the default encryption algorithm</token>
  </line>
  <line no="934">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$algorithm</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$algorithm</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">password_encryption_algorithm</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="935">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="936">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PasswordEncryptor</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create_for_algorithm</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$algorithm</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="937"/>
  <line no="938">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// New salts will only need to be generated if the password is hashed for the first time</token>
  </line>
  <line no="939">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$salt</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$salt</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$salt</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">salt</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$password</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="940">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="941">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="942">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">encrypt</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$password</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$salt</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$member</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="943">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'salt'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$salt</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="944">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'algorithm'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$algorithm</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="945">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'encryptor'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$e</token>
  </line>
  <line no="946">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="947">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="948">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="949">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="950">
    <token name="T_DOC_COMMENT">	 * Checks the database is in a state to perform security checks.</token>
  </line>
  <line no="951">
    <token name="T_DOC_COMMENT">	 * See {@link DatabaseAdmin-&gt;init()} for more information.</token>
  </line>
  <line no="952">
    <token name="T_DOC_COMMENT">	 * </token>
  </line>
  <line no="953">
    <token name="T_DOC_COMMENT">	 * @return bool</token>
  </line>
  <line no="954">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="955">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">database_is_ready</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="956">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Used for unit tests</token>
  </line>
  <line no="957">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$force_database_is_ready</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">NULL</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$force_database_is_ready</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="958"/>
  <line no="959">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$database_is_ready</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$database_is_ready</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="960">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="961">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$requiredTables</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ClassInfo</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">dataClassesFor</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Member'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="962">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$requiredTables</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Group'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="963">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$requiredTables</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Permission'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="964">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="965">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$requiredTables</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="966">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// if any of the tables aren't created in the database</token>
  </line>
  <line no="967">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">ClassInfo</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">hasTable</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="968"/>
  <line no="969">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// HACK: DataExtensions aren't applied until a class is instantiated for</token>
  </line>
  <line no="970">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// the first time, so create an instance here.</token>
  </line>
  <line no="971">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">singleton</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="972">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="973">
    <token name="T_WHITESPACE">			</token>
    <token name="T_COMMENT">// if any of the tables don't have all fields mapped as table columns</token>
  </line>
  <line no="974">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$dbFields</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DB</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">fieldList</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="975">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$dbFields</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="976">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="977">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$objFields</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DataObject</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">database_fields</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="978">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$missingFields</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_diff_key</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$objFields</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dbFields</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="979">
    <token name="T_WHITESPACE">			</token>
  </line>
  <line no="980">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$missingFields</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="981">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="982">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$database_is_ready</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="983">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="984">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="985">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="986">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="987">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="988">
    <token name="T_DOC_COMMENT">	 * Enable or disable recording of login attempts</token>
  </line>
  <line no="989">
    <token name="T_DOC_COMMENT">	 * through the {@link LoginRecord} object.</token>
  </line>
  <line no="990">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="991">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.login_recording" config setting instead</token>
  </line>
  <line no="992">
    <token name="T_DOC_COMMENT">	 * @param boolean $bool</token>
  </line>
  <line no="993">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="994">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">set_login_recording</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$bool</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="995">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.login_recording" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="996">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$login_recording</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOL_CAST">(bool)</token>
    <token name="T_VARIABLE">$bool</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="997">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="998">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="999">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1000">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.login_recording" config setting instead</token>
  </line>
  <line no="1001">
    <token name="T_DOC_COMMENT">	 * @return boolean</token>
  </line>
  <line no="1002">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="1003">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">login_recording</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1004">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.login_recording" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1005">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$login_recording</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1006">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1007">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="1008">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1009">
    <token name="T_DOC_COMMENT">	 * @config</token>
  </line>
  <line no="1010">
    <token name="T_DOC_COMMENT">	 * @var string Set the default login dest</token>
  </line>
  <line no="1011">
    <token name="T_DOC_COMMENT">	 * This is the URL that users will be redirected to after they log in,</token>
  </line>
  <line no="1012">
    <token name="T_DOC_COMMENT">	 * if they haven't logged in en route to access a secured page.</token>
  </line>
  <line no="1013">
    <token name="T_DOC_COMMENT">	 * By default, this is set to the homepage.</token>
  </line>
  <line no="1014">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="1015">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$default_login_dest</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1016">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="1017">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1018">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.default_login_dest" config setting instead</token>
  </line>
  <line no="1019">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="1020">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">set_default_login_dest</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$dest</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1021">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.default_login_dest" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1022">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">default_login_dest</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$dest</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1023">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1024"/>
  <line no="1025">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1026">
    <token name="T_DOC_COMMENT">	 * Get the default login dest.</token>
  </line>
  <line no="1027">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="1028">
    <token name="T_DOC_COMMENT">	 * @deprecated 3.2 Use the "Security.default_login_dest" config setting instead</token>
  </line>
  <line no="1029">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="1030">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">default_login_dest</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1031">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">Deprecation</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">notice</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'3.2'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Use the "Security.default_login_dest" config setting instead'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1032">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">config</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">default_login_dest</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1033">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1034"/>
  <line no="1035">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ignore_disallowed_actions</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1036">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="1037">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1038">
    <token name="T_DOC_COMMENT">	 * Set to true to ignore access to disallowed actions, rather than returning permission failure</token>
  </line>
  <line no="1039">
    <token name="T_DOC_COMMENT">	 * Note that this is just a flag that other code needs to check with Security::ignore_disallowed_actions()</token>
  </line>
  <line no="1040">
    <token name="T_DOC_COMMENT">	 * @param $flag True or false</token>
  </line>
  <line no="1041">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="1042">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">set_ignore_disallowed_actions</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$flag</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1043">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$ignore_disallowed_actions</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$flag</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1044">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1045"/>
  <line no="1046">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ignore_disallowed_actions</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1047">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$ignore_disallowed_actions</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1048">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1049"/>
  <line no="1050">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** @config */</token>
  </line>
  <line no="1051">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$login_url</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Security/login"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1052"/>
  <line no="1053">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1054">
    <token name="T_DOC_COMMENT">	 * Set a custom log-in URL if you have built your own log-in page.</token>
  </line>
  <line no="1055">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="1056">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">set_login_url</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$loginUrl</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1057">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$login_url</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$loginUrl</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1058">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1059"/>
  <line no="1060">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="1061">
    <token name="T_DOC_COMMENT">	 * Get the URL of the log-in page.</token>
  </line>
  <line no="1062">
    <token name="T_DOC_COMMENT">	 * Defaults to Security/login but can be re-set with {@link set_login_url()}</token>
  </line>
  <line no="1063">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="1064">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">login_url</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="1065">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$login_url</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="1066">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1067"/>
  <line no="1068">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="1069"/>
</source>
