<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../ecommerce/code/forms/fields" file="Product_ProductImageUploadField.php" realpath="/var/www/_modules/ecommerce_test/trunk/ecommerce/code/forms/fields/Product_ProductImageUploadField.php" size="4701" time="2015-03-14T10:43:16+13:00" unixtime="1426282996" sha1="cca14dd23008931f73aa0bc6e7037cadbdaa8a19" relative="ecommerce/code/forms/fields/Product_ProductImageUploadField.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * This is a preset upload field for product images.</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * In the config you can set the default folder name for a certain image Field</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * using</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * MyClass:</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> *   folder_name_for_images: "MyFolderName"</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * It is recommended that you also set the calling class manually as we expect this</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * to be faster</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * e.g.</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> *     $fields-&gt;addFieldToTab('Root.Images', $uploadField = new Product_ProductImageUploadField('Image', _t('Product.IMAGE', 'Product Image')));</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT"> *     $uploadField-&gt;setCallingClass("Product");</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="24"/>
  <line no="25">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Product_ProductImageUploadField</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">UploadField</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="26"/>
  <line no="27"/>
  <line no="28">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">	 * @var String</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="32">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$callingClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="33"/>
  <line no="34">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">	 * @var array Config for this field used in both, php and javascript</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">	 * (will be merged into the config of the javascript file upload plugin).</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">	 * See framework/_config/uploadfield.yml for configuration defaults and documentation.</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$ufConfig</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">		 * @var boolean</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'autoUpload'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="45">
    <token name="T_DOC_COMMENT">		 * php validation of allowedMaxFileNumber only works when a db relation is available, set to null to allow</token>
  </line>
  <line no="46">
    <token name="T_DOC_COMMENT">		 * unlimited if record has a has_one and allowedMaxFileNumber is null, it will be set to 1</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">		 * @var int</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'allowedMaxFileNumber'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">		 * @var boolean|string Can the user upload new files, or just select from existing files.</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">		 * String values are interpreted as permission codes.</token>
  </line>
  <line no="53">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'canUpload'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">		 * @var boolean|string Can the user attach files from the assets archive on the site?</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">		 * String values are interpreted as permission codes.</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'canAttachExisting'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"CMS_ACCESS_AssetAdmin"</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT">		 * @var boolean If a second file is uploaded, should it replace the existing one rather than throwing an errror?</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">		 * This only applies for has_one relationships, and only replaces the association</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">		 * rather than the actual file database record or filesystem entry.</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'replaceExistingFile'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">		 * @var int</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'previewMaxWidth'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">80</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">		 * @var int</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'previewMaxHeight'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">60</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">		 * javascript template used to display uploading files</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">		 * @see javascript/UploadField_uploadtemplate.js</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">		 * @var string</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'uploadTemplateName'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ss-uploadfield-uploadtemplate'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">		 * javascript template used to display already uploaded files</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">		 * @see javascript/UploadField_downloadtemplate.js</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">		 * @var string</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'downloadTemplateName'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ss-uploadfield-downloadtemplate'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="86">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">		 * FieldList $fields or string $name (of a method on File to provide a fields) for the EditForm</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">		 * @example 'getCMSFields'</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT">		 * @var FieldList|string</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'fileEditFields'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT">		 * FieldList $actions or string $name (of a method on File to provide a actions) for the EditForm</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">		 * @example 'getCMSActions'</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT">		 * @var FieldList|string</token>
  </line>
  <line no="96">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'fileEditActions'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="99">
    <token name="T_DOC_COMMENT">		 * Validator (eg RequiredFields) or string $name (of a method on File to provide a Validator) for the EditForm</token>
  </line>
  <line no="100">
    <token name="T_DOC_COMMENT">		 * @example 'getCMSValidator'</token>
  </line>
  <line no="101">
    <token name="T_DOC_COMMENT">		 * @var string</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">		 */</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'fileEditValidator'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="105"/>
  <line no="106">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="107">
    <token name="T_DOC_COMMENT">	 * Must be a real class name.</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT">	 * @param String $name</token>
  </line>
  <line no="109">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="110">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setCallingClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">callingClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="113"/>
  <line no="114">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT">	 * Construct a new UploadField instance</token>
  </line>
  <line no="116">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="117">
    <token name="T_DOC_COMMENT">	 * @param string $name The internal field name, passed to forms.</token>
  </line>
  <line no="118">
    <token name="T_DOC_COMMENT">	 * @param string $title The field label.</token>
  </line>
  <line no="119">
    <token name="T_DOC_COMMENT">	 * @param SS_List $items If no items are defined, the field will try to auto-detect an existing relation on</token>
  </line>
  <line no="120">
    <token name="T_DOC_COMMENT">	 *                       @link $record}, with the same name as the field name.</token>
  </line>
  <line no="121">
    <token name="T_DOC_COMMENT">	 * @param Form $form Reference to the container form</token>
  </line>
  <line no="122">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$title</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SS_List</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$items</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">parent</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$title</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$items</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getValidator</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setAllowedExtensions</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"gif"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"jpg"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"jpeg"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"png"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="126"/>
  <line no="127">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$callingClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getCallingClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$folderName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Config</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">inst</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$callingClass</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"folder_name_for_images"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$folderName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="130">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$folderName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$callingClass</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"_"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$name</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="131">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">setFolderName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$folderName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="134"/>
  <line no="135">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="136">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="137">
    <token name="T_DOC_COMMENT">	 * @return String</token>
  </line>
  <line no="138">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="139">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getCallingClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">callingClass</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="141">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">callingClass</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="142">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="143">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">//get the trace</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$trace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">debug_backtrace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Get the class that is asking for who awoke it</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$trace</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// +1 to i cos we have to account for calling this function</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_STRING">count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$trace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$trace</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_COMMENT">// is it set?</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_EQUAL">!=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$trace</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// is it a different class</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">					</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$trace</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="156"/>
  <line no="157">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="158">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="159">
    <token name="T_DOC_COMMENT">	 * @return String</token>
  </line>
  <line no="160">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getRelationAutosetClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$default</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'File'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="162">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Image"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="164"/>
  <line no="165"/>
  <line no="166">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="167"/>
  <line no="168"/>
</source>
