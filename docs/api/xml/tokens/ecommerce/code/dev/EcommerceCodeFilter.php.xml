<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../ecommerce/code/dev" file="EcommerceCodeFilter.php" realpath="/var/www/_modules/ecommerce_test/trunk/ecommerce/code/dev/EcommerceCodeFilter.php" size="1496" time="2015-03-14T10:43:17+13:00" unixtime="1426282997" sha1="04f5092e3d94309f0ee5611cbc9272ea7b98a0e9" relative="ecommerce/code/dev/EcommerceCodeFilter.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">EcommerceCodeFilter</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Object</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="6"/>
  <line no="7">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT">	 * @var Array</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="10">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$regexReplacements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="11">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[^A-Za-z0-9.\-_]+/u'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// remove non-ASCII chars, only allow alphanumeric, dashes and dots.</token>
  </line>
  <line no="12">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[\-]{2,}/u'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// remove duplicate dashes</token>
  </line>
  <line no="13">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/[\_]{2,}/u'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'_'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// remove duplicate underscores</token>
  </line>
  <line no="14">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="15"/>
  <line no="16">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT">	 * @var Array</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="19">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$straightReplacements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="20">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&amp;amp;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-and-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">//change ampersands to -and-</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&amp;'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-and-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">//change ampersands to -and-</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">		</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// remove whitespace</token>
  </line>
  <line no="23">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="24"/>
  <line no="25">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">	 * makes sure that code is unique and gets rid of special characters</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">	 * should be run in onBeforeWrite</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">	 * @param DataObject | String $obj</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="31"/>
  <line no="32">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">checkCode</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fieldName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Code"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">//exception dealing with Strings</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$isObject</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_object</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">DataObject</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$fieldName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strval</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$str</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$isObject</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$fieldName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">regexReplacements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$regex</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">preg_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$regex</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">straightReplacements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$find</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$find</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$replace</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trim</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">//check for other ones.</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">			</token>
    <token name="T_WHILE">while</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$isObject</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">get</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">filter</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fieldName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">exclude</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"ID"</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">ID</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">Count</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$code</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'_'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$count</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$fieldName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$s</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$obj</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$fieldName</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="61">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="62"/>
</source>
