<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="ProductWithVariationDecorator_Controller" namespace="" name="ProductWithVariationDecorator_Controller" abstract="false" final="false" start="593" end="843">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../ecommerce_product_variation/code/dod" file="ProductWithVariationDecorator.php" realpath="/var/www/_modules/ecommerce_test/trunk/ecommerce_product_variation/code/dod/ProductWithVariationDecorator.php" size="26406" time="2015-03-14T10:43:42+13:00" unixtime="1426283022" sha1="b6dc71dfd6aec512d8262e353e4bf11564ea4a87" relative="ecommerce_product_variation/code/dod/ProductWithVariationDecorator.php"/>
  <extends full="Extension" namespace="" name="Extension"/>
  <member name="allowed_actions" type="array" visibility="private" line="598">
    <docblock>
      <description compact="standard SS Var"/>
    </docblock>
  </member>
  <member name="use_js_validation" type="{unknown}" default="true" visibility="private" line="609">
    <docblock>
      <description compact="tells us if Javascript should be used in validating the product variation form."/>
      <var type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </var>
    </docblock>
  </member>
  <member name="variationFilter" type="array" visibility="protected" line="616">
    <docblock>
      <description compact="array of IDs of variations that should be shown if count(array) == 0 then all of them will be shown"/>
      <var type="object">
        <type full="Array" namespace="" name="Array"/>
      </var>
    </docblock>
  </member>
  <method name="Variations" start="622" end="628" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="return the variations and apply filter if one has been set."/>
      <return type="object">
        <type full="DataList" namespace="" name="DataList"/>
      </return>
    </docblock>
  </method>
  <method name="VariationForm" start="635" end="672" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns a form of the product if it can be purchased."/>
      <return description="| NULL" type="object">
        <type full="Form" namespace="" name="Form"/>
      </return>
    </docblock>
    <inline>
      <comment value="new DropDownField(&quot;Attribute_&quot;.$attribute-&gt;ID,$attribute-&gt;Name,);" line="644"/>
      <todo value="perhaps use a dropdown instead (elimiates need to use keyboard)" line="650"/>
      <todo value="make javascript json inclusion optional" line="661"/>
    </inline>
  </method>
  <method name="addVariation" start="674" end="716" abstract="false" final="false" static="false" visibility="public">
    <parameter name="data" byreference="false" type="{unknown}"/>
    <parameter name="form" byreference="false" type="{unknown}"/>
    <inline>
      <todo value="save form data to session so selected values are not lost" line="675"/>
    </inline>
  </method>
  <method name="VariationsForSaleJSON" start="729" end="741" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns a list of variations for sale as JSON.">the output is as follows:
  VariationID: [
    AttributeValueID: AttributeValueID,
    AttributeValueID: AttributeValueID
  ]</description>
      <param description="- show all variations, evens the ones that can not be purchased." type="object" variable="$showCanNotPurchaseAsWell">
        <type full="Boolean" namespace="" name="Boolean"/>
      </param>
      <return description="(JSON)" type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
    <parameter name="showCanNotPurchaseAsWell" byreference="false" type="{unknown}" default="false"/>
    <inline>
      <todo value="change JS so that we dont have to add this default array." line="730"/>
    </inline>
  </method>
  <method name="AttributeValuesPerAttributeType" start="749" end="764" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns a list of VariationAttributes (e.g. colour, size) and the possible Atrribute Values for each type (e.g. RED, ORANGE, XL)"/>
      <return type="object">
        <type full="ArrayList" namespace="" name="ArrayList"/>
      </return>
    </docblock>
  </method>
  <method name="possibleValuesForAttributeType" start="772" end="803" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="| ProductAttributeType" type="object">
        <type full="Int" namespace="" name="Int"/>
      </param>
      <return description="of ProductAttributeValues" type="object">
        <type full="DataList" namespace="" name="DataList"/>
      </return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
  </method>
  <method name="selectvariation" start="812" end="820" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="action! this action is for selecting product variations"/>
      <param type="object" variable="$request">
        <type full="HTTPRequest" namespace="" name="HTTPRequest"/>
      </param>
    </docblock>
    <parameter name="request" byreference="false" type="{unknown}"/>
  </method>
  <method name="filterforvariations" start="827" end="833" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="You can specificy one or MORE"/>
      <param type="object" variable="$request">
        <type full="HTTPRequest" namespace="" name="HTTPRequest"/>
      </param>
    </docblock>
    <parameter name="request" byreference="false" type="{unknown}"/>
  </method>
  <method name="HasFilterForVariations" start="838" end="840" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
  </method>
  <parent full="Extension" namespace="" name="Extension">
    <member name="owner" type="{unknown}" visibility="protected" line="26">
      <docblock>
        <description compact="The object this extension is applied to."/>
        <var type="object">
          <type full="Object" namespace="" name="Object"/>
        </var>
      </docblock>
    </member>
    <member name="ownerBaseClass" type="{unknown}" visibility="protected" line="32">
      <docblock>
        <description compact="The base class that this extension was applied to; $this-&gt;owner must be one of these"/>
        <var type="object">
          <type full="DataObject" namespace="" name="DataObject"/>
        </var>
      </docblock>
    </member>
    <member name="class" type="{unknown}" visibility="public" line="40"/>
    <constructor name="__construct" start="42" end="44" abstract="false" final="false" static="false" visibility="public"/>
    <method name="add_to_class" start="52" end="54" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Called when this extension is added to a particular class"/>
        <static/>
        <param variable="$class"/>
      </docblock>
      <parameter name="class" byreference="false" type="{unknown}"/>
      <parameter name="extensionClass" byreference="false" type="{unknown}"/>
      <parameter name="args" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="setOwner" start="64" end="70" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the owner of this extension."/>
        <param description="The owner object," type="object" variable="$owner">
          <type full="Object" namespace="" name="Object"/>
        </param>
        <param description="The base class that the extension is applied to; this may be" type="string" variable="$ownerBaseClass">the class of owner, or it may be a parent.  For example, if Versioned was applied to SiteTree,
and then a Page object was instantiated, $owner would be a Page object, but $ownerBaseClass
would be 'SiteTree'.</param>
      </docblock>
      <parameter name="owner" byreference="false" type="{unknown}"/>
      <parameter name="ownerBaseClass" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="clearOwner" start="72" end="76" abstract="false" final="false" static="false" visibility="public"/>
    <method name="getOwner" start="83" end="85" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the owner of this extension."/>
        <return type="object">
          <type full="Object" namespace="" name="Object"/>
        </return>
      </docblock>
    </method>
    <method name="get_classname_without_arguments" start="95" end="97" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Helper method to strip eval'ed arguments from a string thats passed to {@link DataObject::$extensions} or {@link Object::add_extension()}."/>
        <param description="E.g. &quot;Versioned('Stage','Live')&quot;" type="string" variable="$extensionStr"/>
        <return description="Extension classname, e.g. &quot;Versioned&quot;" type="string"/>
      </docblock>
      <parameter name="extensionStr" byreference="false" type="{unknown}"/>
    </method>
  </parent>
</class>
