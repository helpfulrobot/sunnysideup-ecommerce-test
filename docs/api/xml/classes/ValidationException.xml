<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="ValidationException" namespace="" name="ValidationException" abstract="false" final="false" start="10" end="60">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/model" file="ValidationException.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/model/ValidationException.php" size="1702" time="2015-03-14T10:40:57+13:00" unixtime="1426282857" sha1="460b39bedf4976947eeac013e5176722b462c578" relative="framework/model/ValidationException.php"/>
  <docblock>
    <description compact="Exception thrown by {@link DataObject}::write if validation fails. By throwing an exception rather than a user error, the exception can be caught in unit tests and as such can be used as a successful test."/>
    <package value="framework"/>
    <subpackage value="validation"/>
  </docblock>
  <extends full="Exception" namespace="" name="Exception"/>
  <member name="result" type="{unknown}" visibility="protected" line="17">
    <docblock>
      <description compact="The contained ValidationResult related to this error"/>
      <var type="object">
        <type full="ValidationResult" namespace="" name="ValidationResult"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="30" end="50" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Construct a new ValidationException with an optional ValidationResult object"/>
      <param description="The ValidationResult containing the" type="object" variable="$result">failed result. Can be substituted with an error message instead if no
ValidationResult exists.<type full="ValidationResult|string" namespace="" name="ValidationResult|string"/></param>
      <param description="The error message. If $result was given the" type="object" variable="$message">message string rather than a ValidationResult object then this will have
the error code number.<type full="string|integer" namespace="" name="string|integer"/></param>
      <param description="The error code number, if not given in the second parameter" type="integer" variable="$code"/>
    </docblock>
    <parameter name="result" byreference="false" type="{unknown}" default="null"/>
    <parameter name="message" byreference="false" type="{unknown}" default="null"/>
    <parameter name="code" byreference="false" type="integer" default="0"/>
    <inline>
      <comment value="Check arguments" line="32"/>
      <comment value="Shift parameters if no ValidationResult is given" line="35"/>
      <comment value="Infer ValidationResult from parameters" line="39"/>
      <comment value="Construct" line="47"/>
    </inline>
  </constructor>
  <method name="getResult" start="57" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieves the ValidationResult related to this error"/>
      <return type="object">
        <type full="ValidationResult" namespace="" name="ValidationResult"/>
      </return>
    </docblock>
  </method>
  <parent full="Exception" namespace="" name="Exception">
    <member name="message" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception message"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="code" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception code"/>
      <var type="int"/>
    </docblock>
  </member>
    <member name="file" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The filename where the exception was created"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="line" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The line where the exception was created"/>
      <var type="int"/>
    </docblock>
  </member>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct the exception"/>
      <return type="void"/>
    </docblock>
    <parameter name="message" optional="true" byreference="false" type="string"/>
    <parameter name="code" optional="true" byreference="false" type="int"/>
    <parameter name="previous" optional="true" byreference="false" type="object" class="Exception"/>
  </constructor>
    <method name="getMessage" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception message"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getPrevious" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Returns previous Exception"/>
      <return type="Exception"/>
    </docblock>
  </method>
    <method name="getCode" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception code"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getFile" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the file in which the exception occurred"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getLine" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the line in which the exception occurred"/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="getTrace" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace"/>
      <return type="array"/>
    </docblock>
  </method>
    <method name="getTraceAsString" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace as a string"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="__toString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="String representation of the exception"/>
      <return type="string"/>
    </docblock>
  </method>
  </parent>
</class>
