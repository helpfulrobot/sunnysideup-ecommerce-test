<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Date" namespace="" name="Zend_Date" abstract="false" final="false" start="36" end="4957">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/Zend" file="Date.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/Zend/Date.php" size="198150" time="2015-03-14T10:41:14+13:00" unixtime="1426282874" sha1="dc5ccc1cae99edf22cbd02e5038ff0658b031816" relative="framework/thirdparty/Zend/Date.php"/>
  <docblock>
    <description/>
    <category value="Zend"/>
    <package value="Zend_Date"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <extends full="Zend_Date_DateObject" namespace="" name="Zend_Date_DateObject"/>
  <member name="_locale" type="{unknown}" default="null" visibility="private" line="38"/>
  <member name="_fractional" type="integer" default="0" visibility="private" line="41"/>
  <member name="_precision" type="integer" default="3" visibility="private" line="42"/>
  <member name="_options" type="array" visibility="private" line="44"/>
  <constant name="DAY" value="'dd'"/>
  <constant name="DAY_SHORT" value="'d'"/>
  <constant name="DAY_SUFFIX" value="'SS'"/>
  <constant name="DAY_OF_YEAR" value="'D'"/>
  <constant name="WEEKDAY" value="'EEEE'"/>
  <constant name="WEEKDAY_SHORT" value="'EEE'"/>
  <constant name="WEEKDAY_NARROW" value="'E'"/>
  <constant name="WEEKDAY_NAME" value="'EE'"/>
  <constant name="WEEKDAY_8601" value="'eee'"/>
  <constant name="WEEKDAY_DIGIT" value="'e'"/>
  <constant name="WEEK" value="'ww'"/>
  <constant name="MONTH" value="'MM'"/>
  <constant name="MONTH_SHORT" value="'M'"/>
  <constant name="MONTH_DAYS" value="'ddd'"/>
  <constant name="MONTH_NAME" value="'MMMM'"/>
  <constant name="MONTH_NAME_SHORT" value="'MMM'"/>
  <constant name="MONTH_NAME_NARROW" value="'MMMMM'"/>
  <constant name="YEAR" value="'y'"/>
  <constant name="YEAR_SHORT" value="'yy'"/>
  <constant name="YEAR_8601" value="'Y'"/>
  <constant name="YEAR_SHORT_8601" value="'YY'"/>
  <constant name="LEAPYEAR" value="'l'"/>
  <constant name="MERIDIEM" value="'a'"/>
  <constant name="SWATCH" value="'B'"/>
  <constant name="HOUR" value="'HH'"/>
  <constant name="HOUR_SHORT" value="'H'"/>
  <constant name="HOUR_AM" value="'hh'"/>
  <constant name="HOUR_SHORT_AM" value="'h'"/>
  <constant name="MINUTE" value="'mm'"/>
  <constant name="MINUTE_SHORT" value="'m'"/>
  <constant name="SECOND" value="'ss'"/>
  <constant name="SECOND_SHORT" value="'s'"/>
  <constant name="MILLISECOND" value="'S'"/>
  <constant name="TIMEZONE_NAME" value="'zzzz'"/>
  <constant name="DAYLIGHT" value="'I'"/>
  <constant name="GMT_DIFF" value="'Z'"/>
  <constant name="GMT_DIFF_SEP" value="'ZZZZ'"/>
  <constant name="TIMEZONE" value="'z'"/>
  <constant name="TIMEZONE_SECS" value="'X'"/>
  <constant name="ISO_8601" value="'c'"/>
  <constant name="RFC_2822" value="'r'"/>
  <constant name="TIMESTAMP" value="'U'"/>
  <constant name="ERA" value="'G'"/>
  <constant name="ERA_NAME" value="'GGGG'"/>
  <constant name="ERA_NARROW" value="'GGGGG'"/>
  <constant name="DATES" value="'F'"/>
  <constant name="DATE_FULL" value="'FFFFF'"/>
  <constant name="DATE_LONG" value="'FFFF'"/>
  <constant name="DATE_MEDIUM" value="'FFF'"/>
  <constant name="DATE_SHORT" value="'FF'"/>
  <constant name="TIMES" value="'WW'"/>
  <constant name="TIME_FULL" value="'TTTTT'"/>
  <constant name="TIME_LONG" value="'TTTT'"/>
  <constant name="TIME_MEDIUM" value="'TTT'"/>
  <constant name="TIME_SHORT" value="'TT'"/>
  <constant name="DATETIME" value="'K'"/>
  <constant name="DATETIME_FULL" value="'KKKKK'"/>
  <constant name="DATETIME_LONG" value="'KKKK'"/>
  <constant name="DATETIME_MEDIUM" value="'KKK'"/>
  <constant name="DATETIME_SHORT" value="'KK'"/>
  <constant name="ATOM" value="'OOO'"/>
  <constant name="COOKIE" value="'CCC'"/>
  <constant name="RFC_822" value="'R'"/>
  <constant name="RFC_850" value="'RR'"/>
  <constant name="RFC_1036" value="'RRR'"/>
  <constant name="RFC_1123" value="'RRRR'"/>
  <constant name="RFC_3339" value="'RRRRR'"/>
  <constant name="RSS" value="'SSS'"/>
  <constant name="W3C" value="'WWW'"/>
  <constructor name="__construct" start="137" end="229" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Generates the standard date object, could be a unix timestamp, localized date, string, integer, array and so on. Also parts of dates or time are supported Always set the default timezone: http://php.net/date_default_timezone_set For example, in your bootstrap: date_default_timezone_set('America/Los_Angeles'); For detailed instructions please look in the docu."/>
      <param description="OPTIONAL Date value or value of date part to set" type="object" variable="$date">,depending on $part. If null the actual time is set<type full="string|integer|Zend_Date|array" namespace="" name="string|integer|Zend_Date|array"/></param>
      <param description="OPTIONAL Defines the input format of $date" type="string" variable="$part"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}" default="null"/>
    <parameter name="part" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="set the timezone and offset for $this" line="183"/>
      <comment value="try to get timezone from date-string" line="187"/>
      <comment value="set datepart" line="193"/>
      <comment value="switch off dst handling for value setting" line="195"/>
      <comment value="DST fix" line="199"/>
    </inline>
  </constructor>
  <method name="setOptions" start="238" end="302" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Sets class wide options, if no option was given, the actual set options will be returned"/>
      <param description="Options to set" type="array" variable="$options"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
      <return description="array if no option was given" type="object">
        <type full="Options" namespace="" name="Options"/>
      </return>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
  </method>
  <method name="getTimestamp" start="312" end="315" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns this object's internal UNIX timestamp (equivalent to Zend_Date::TIMESTAMP).">If the timestamp is too large for integers, then the return value will be a string.
This function does not return the timestamp as an object.
Use clone() or copyPart() instead.</description>
      <return description="UNIX timestamp" type="object">
        <type full="integer|string" namespace="" name="integer|string"/>
      </return>
    </docblock>
  </method>
  <method name="_timestamp" start="326" end="351" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Returns the calculated timestamp HINT: timestamps are always GMT"/>
      <param description="Type of calculation to make" type="string" variable="$calc"/>
      <param description="Timestamp to calculate, when null the actual timestamp is calculated" type="object" variable="$stamp">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <return type="object">
        <type full="Zend_Date|integer" namespace="" name="Zend_Date|integer"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="stamp" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="extract timestamp from object" line="329"/>
    </inline>
  </method>
  <method name="setTimestamp" start="360" end="363" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new timestamp"/>
      <param description="Timestamp to set" type="object" variable="$timestamp">
        <type full="integer|string|array|Zend_Date" namespace="" name="integer|string|array|Zend_Date"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="timestamp" byreference="false" type="{unknown}"/>
  </method>
  <method name="addTimestamp" start="372" end="375" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a timestamp"/>
      <param description="Timestamp to add" type="object" variable="$timestamp">
        <type full="integer|string|array|Zend_Date" namespace="" name="integer|string|array|Zend_Date"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="timestamp" byreference="false" type="{unknown}"/>
  </method>
  <method name="subTimestamp" start="384" end="387" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts a timestamp"/>
      <param description="Timestamp to sub" type="object" variable="$timestamp">
        <type full="integer|string|array|Zend_Date" namespace="" name="integer|string|array|Zend_Date"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="timestamp" byreference="false" type="{unknown}"/>
  </method>
  <method name="compareTimestamp" start="396" end="399" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares two timestamps, returning the difference as integer"/>
      <param description="Timestamp to compare" type="object" variable="$timestamp">
        <type full="integer|string|array|Zend_Date" namespace="" name="integer|string|array|Zend_Date"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="timestamp" byreference="false" type="{unknown}"/>
  </method>
  <method name="toString" start="423" end="467" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a string representation of the object Supported format tokens are: G - era, y - year, Y - ISO year, M - month, w - week of year, D - day of year, d - day of month E - day of week, e - number of weekday (1-7), h - hour 1-12, H - hour 0-23, m - minute, s - second A - milliseconds of day, z - timezone, Z - timezone offset, S - fractional second, a - period of day">Additionally format tokens but non ISO conform are:
SS - day suffix, eee - php number of weekday(0-6), ddd - number of days per month
l - Leap year, B - swatch internet time, I - daylight saving time, X - timezone offset in seconds
r - RFC2822 format, U - unix timestamp

Not supported ISO tokens are
u - extended year, Q - quarter, q - quarter, L - stand alone month, W - week of month
F - day of week of month, g - modified julian, c - stand alone weekday, k - hour 0-11, K - hour 1-24
v - wall zone</description>
      <param description="OPTIONAL Rule for formatting output. If null the default date format is used" type="string" variable="$format"/>
      <param description="OPTIONAL Type for the format string which overrides the standard setting" type="string" variable="$type"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="type" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="__toString" start="474" end="477" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a string representation of the date which is equal with the timestamp"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="toValue" start="486" end="494" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a integer representation of the object But returns false when the given part is no value f.e. Month-Name"/>
      <param description="OPTIONAL Defines the date or datepart to return as integer" type="object" variable="$part">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <return type="object">
        <type full="integer|false" namespace="" name="integer|false"/>
      </return>
    </docblock>
    <parameter name="part" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="toArray" start="501" end="515" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array representation of the object"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="get" start="527" end="547" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a representation of a date or datepart This could be for example a localized monthname, the time without date, the era or only the fractional seconds. There are about 50 different supported date parts.">For a complete list of supported datepart values look into the docu</description>
      <param description="OPTIONAL Part of the date to return, if null the timestamp is returned" type="string" variable="$part"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="date or datepart" type="string"/>
    </docblock>
    <parameter name="part" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="_toToken" start="556" end="587" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Internal method to apply tokens"/>
      <param type="string" variable="$part"/>
      <param type="string" variable="$locale"/>
      <return type="string"/>
    </docblock>
    <parameter name="part" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="get format tokens" line="557"/>
    </inline>
  </method>
  <method name="_parseIsoToDate" start="596" end="966" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Internal parsing method"/>
      <param type="string" variable="$token"/>
      <param type="string" variable="$locale"/>
      <return type="string"/>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
  </method>
  <method name="_toComment" start="974" end="983" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Private function to make a comment of a token"/>
      <param type="string" variable="$token"/>
      <return type="string"/>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <method name="_getDigitFromName" start="993" end="1036" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Return digit from standard names (english) Faster implementation than locale aware searching"/>
      <param type="string" variable="$name"/>
      <return description="Number of this month" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="getFullYear" start="1045" end="1055" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Counts the exact year number &lt; 70 - 2000 added, &gt;70 &lt; 100 - 1900, others just returned"/>
      <param description="year number" type="integer" variable="$value"/>
      <return description="Number of year" type="integer"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="set" start="1069" end="1080" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the given date as new date or a given datepart as new datepart returning the new datepart This could be for example a localized dayname, the date without time, the month or only the seconds. There are about 50 different supported date parts.">For a complete list of supported datepart values look into the docu</description>
      <param description="Date or datepart to set" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Part of the date to set, if null the timestamp is set" type="string" variable="$part"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="part" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="add" start="1097" end="1105" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a date or datepart to the existing date, by extracting $part from $date, and modifying this object by adding that part.  The $part is then extracted from this object and returned as an integer or numeric string (for large values, or $part's corresponding to pre-defined formatted date strings).">This could be for example a ISO 8601 date, the hour the monthname or only the minute.
There are about 50 different supported date parts.
For a complete list of supported datepart values look into the docu.</description>
      <param description="Date or datepart to add" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Part of the date to add, if null the timestamp is added" type="string" variable="$part"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="part" byreference="false" type="{unknown}" default="self::TIMESTAMP"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="sub" start="1120" end="1128" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts a date from another date.">This could be for example a RFC2822 date, the time,
the year or only the timestamp. There are about 50 different supported date parts.
For a complete list of supported datepart values look into the docu
Be aware: Adding -2 Months is not equal to Subtracting 2 Months !!!</description>
      <param description="Date or datepart to subtract" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Part of the date to sub, if null the timestamp is subtracted" type="string" variable="$part"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="part" byreference="false" type="{unknown}" default="self::TIMESTAMP"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compare" start="1140" end="1154" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares a date or datepart with the existing one.">Returns -1 if earlier, 0 if equal and 1 if later.</description>
      <param description="Date or datepart to compare with the date object" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Part of the date to compare, if null the timestamp is subtracted" type="string" variable="$part"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="part" byreference="false" type="{unknown}" default="self::TIMESTAMP"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="copyPart" start="1170" end="1179" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a new instance of Zend_Date with the selected part copied.">To make an exact copy, use PHP's clone keyword.
For a complete list of supported date part values look into the docu.
If a date part is copied, all other date parts are set to standard values.
For example: If only YEAR is copied, the returned date object is equal to
01-01-YEAR 00:00:00 (01-01-1970 00:00:00 is equal to timestamp 0)
If only HOUR is copied, the returned date object is equal to
01-01-1970 HOUR:00:00 (so $this contains a timestamp equal to a timestamp of 0 plus HOUR).</description>
      <param description="Part of the date to compare, if null the timestamp is subtracted" type="string" variable="$part"/>
      <param description="OPTIONAL New object's locale.  No adjustments to timezone are made." type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="New clone with requested part" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="part" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="copy all instance variables" line="1172"/>
      <comment value="except the timestamp" line="1173"/>
    </inline>
  </method>
  <method name="getTimezoneFromString" start="1187" end="1227" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Internal function, returns the offset of a given timezone"/>
      <param type="string" variable="$zone"/>
      <return type="integer"/>
    </docblock>
    <parameter name="zone" byreference="false" type="{unknown}"/>
  </method>
  <method name="_assign" start="1238" end="1275" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Calculates the date or object"/>
      <param description="Calculation to make" type="string" variable="$calc"/>
      <param description="Date for calculation" type="object" variable="$date">
        <type full="string|integer" namespace="" name="string|integer"/>
      </param>
      <param description="Second date for calculation" type="object" variable="$comp">
        <type full="string|integer" namespace="" name="string|integer"/>
      </param>
      <param description="Use dst correction if option is set" type="object" variable="$dst">
        <type full="boolean|integer" namespace="" name="boolean|integer"/>
      </param>
      <return description="new timestamp or Zend_Date depending on calculation" type="object">
        <type full="integer|string|Zend_Date" namespace="" name="integer|string|Zend_Date"/>
      </return>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="comp" byreference="false" type="integer" default="0"/>
    <parameter name="dst" byreference="false" type="{unknown}" default="false"/>
    <inline>
      <comment value="dst-correction if 'fix_dst' = true and dst !== false but only for non UTC and non GMT" line="1262"/>
    </inline>
  </method>
  <method name="_calculate" start="1288" end="2673" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Calculates the date or object"/>
      <param description="Calculation to make, one of: 'add'|'sub'|'cmp'|'copy'|'set'" type="string" variable="$calc"/>
      <param description="Date or datepart to calculate with" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="Part of the date to calculate, if null the timestamp is used" type="string" variable="$part"/>
      <param description="Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="new timestamp" type="object">
        <type full="integer|string|Zend_Date" namespace="" name="integer|string|Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="part" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Create date parts" line="1306"/>
      <comment value="If object extract value" line="1313"/>
      <comment value="$date as object, part of foreign date as own date" line="1444"/>
    </inline>
  </method>
  <method name="equals" start="2686" end="2695" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns true when both date objects or date parts are equal.">For example:
15.May.2000 &lt;-&gt; 15.June.2000 Equals only for Day or Year... all other will return false</description>
      <param description="Date or datepart to equal with" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Part of the date to compare, if null the timestamp is used" type="string" variable="$part"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="boolean"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="part" byreference="false" type="{unknown}" default="self::TIMESTAMP"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="isEarlier" start="2708" end="2717" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns if the given date or datepart is earlier For example: 15.May.2000 &lt;-&gt; 13.June.1999 will return true for day, year and date, but not for month"/>
      <param description="Date or datepart to compare with" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Part of the date to compare, if null the timestamp is used" type="string" variable="$part"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="boolean"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="part" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="isLater" start="2731" end="2740" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns if the given date or datepart is later For example: 15.May.2000 &lt;-&gt; 13.June.1999 will return true for month but false for day, year and date Returns if the given date is later"/>
      <param description="Date or datepart to compare with" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Part of the date to compare, if null the timestamp is used" type="string" variable="$part"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="boolean"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="part" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getTime" start="2750" end="2759" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns only the time of the date as new Zend_Date object For example: 15.May.2000 10:11:23 will return a dateobject equal to 01.Jan.1970 10:11:23"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="_time" start="2771" end="2829" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Returns the calculated time"/>
      <param description="Calculation to make" type="string" variable="$calc"/>
      <param description="Time to calculate with, if null the actual time is taken" type="object" variable="$time">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="Timeformat for parsing input" type="string" variable="$format"/>
      <param description="Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="new time" type="object">
        <type full="integer|Zend_Date" namespace="" name="integer|Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="time" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="extract time from object" line="2779"/>
    </inline>
  </method>
  <method name="setTime" start="2844" end="2847" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new time for the date object. Format defines how to parse the time string.">Also a complete date can be given, but only the time is used for setting.
For example: dd.MMMM.yyTHH:mm' and 'ss sec'-&gt; 10.May.07T25:11 and 44 sec =&gt; 1h11min44sec + 1 day
Returned is the new date object and the existing date is left as it was before</description>
      <param description="Time to set" type="object" variable="$time">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Timeformat for parsing input" type="string" variable="$format"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="time" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addTime" start="2862" end="2865" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a time to the existing date. Format defines how to parse the time string.">If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: HH:mm:ss -&gt; 10 -&gt; +10 hours</description>
      <param description="Time to add" type="object" variable="$time">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Timeformat for parsing input" type="string" variable="$format"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="time" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subTime" start="2880" end="2883" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts a time from the existing date. Format defines how to parse the time string.">If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: HH:mm:ss -&gt; 10 -&gt; -10 hours</description>
      <param description="Time to sub" type="object" variable="$time">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Timeformat for parsing input" type="string" variable="$format"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid inteface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="time" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareTime" start="2898" end="2901" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the time from the existing date. Format defines how to parse the time string.">If only parts are given the other parts are set to default.
If no format us given, the standardformat of this locale is used.
For example: HH:mm:ss -&gt; 10 -&gt; 10 hours</description>
      <param description="Time to compare" type="object" variable="$time">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Timeformat for parsing input" type="string" variable="$format"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="time" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getDate" start="2909" end="2921" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a clone of $this, with the time part set to 00:00:00."/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="_date" start="2933" end="2991" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Returns the calculated date"/>
      <param description="Calculation to make" type="string" variable="$calc"/>
      <param description="Date to calculate with, if null the actual date is taken" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="Date format for parsing" type="string" variable="$format"/>
      <param description="Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="new date" type="object">
        <type full="integer|Zend_Date" namespace="" name="integer|Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="extract date from object" line="2941"/>
    </inline>
  </method>
  <method name="setDate" start="3006" end="3009" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new date for the date object. Format defines how to parse the date string.">Also a complete date with time can be given, but only the date is used for setting.
For example: MMMM.yy HH:mm-&gt; May.07 22:11 =&gt; 01.May.07 00:00
Returned is the new date object and the existing time is left as it was before</description>
      <param description="Date to set" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Date format for parsing" type="string" variable="$format"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addDate" start="3024" end="3027" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a date to the existing date object. Format defines how to parse the date string.">If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: MM.dd.YYYY -&gt; 10 -&gt; +10 months</description>
      <param description="Date to add" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Date format for parsing input" type="string" variable="$format"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subDate" start="3043" end="3046" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts a date from the existing date object. Format defines how to parse the date string.">If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: MM.dd.YYYY -&gt; 10 -&gt; -10 months
Be aware: Subtracting 2 months is not equal to Adding -2 months !!!</description>
      <param description="Date to sub" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Date format for parsing input" type="string" variable="$format"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareDate" start="3062" end="3065" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the date from the existing date object, ignoring the time.">Format defines how to parse the date string.
If only parts are given the other parts are set to 0.
If no format is given, the standardformat of this locale is used.
For example: 10.01.2000 =&gt; 10.02.1999 -&gt; false</description>
      <param description="Date to compare" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Date format for parsing input" type="string" variable="$format"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getIso" start="3077" end="3080" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the full ISO 8601 date from the date object.">Always the complete ISO 8601 specifiction is used. If an other ISO date is needed
(ISO 8601 defines several formats) use toString() instead.
This function does not return the ISO date as object. Use copy() instead.</description>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="setIso" start="3094" end="3097" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new date for the date object. Not given parts are set to default.">Only supported ISO 8601 formats are accepted.
For example: 050901 -&gt; 01.Sept.2005 00:00:00, 20050201T10:00:30 -&gt; 01.Feb.2005 10h00m30s
Returned is the new date object</description>
      <param description="ISO Date to set" type="object" variable="$date">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addIso" start="3111" end="3114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a ISO date to the date object. Not given parts are set to default.">Only supported ISO 8601 formats are accepted.
For example: 050901 -&gt; + 01.Sept.2005 00:00:00, 10:00:00 -&gt; +10h
Returned is the new date object</description>
      <param description="ISO Date to add" type="object" variable="$date">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subIso" start="3128" end="3131" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts a ISO date from the date object. Not given parts are set to default.">Only supported ISO 8601 formats are accepted.
For example: 050901 -&gt; - 01.Sept.2005 00:00:00, 10:00:00 -&gt; -10h
Returned is the new date object</description>
      <param description="ISO Date to sub" type="object" variable="$date">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareIso" start="3145" end="3148" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares a ISO date with the date object. Not given parts are set to default.">Only supported ISO 8601 formats are accepted.
For example: 050901 -&gt; - 01.Sept.2005 00:00:00, 10:00:00 -&gt; -10h
Returns if equal, earlier or later</description>
      <param description="ISO Date to sub" type="object" variable="$date">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getArpa" start="3158" end="3167" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a RFC 822 compilant datestring from the date object.">This function does not return the RFC date as object. Use copy() instead.</description>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="setArpa" start="3181" end="3184" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a RFC 822 date as new date for the date object.">Only RFC 822 compilant date strings are accepted.
For example: Sat, 14 Feb 09 00:31:30 +0100
Returned is the new date object</description>
      <param description="RFC 822 to set" type="object" variable="$date">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addArpa" start="3199" end="3202" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a RFC 822 date to the date object.">ARPA messages are used in emails or HTTP Headers.
Only RFC 822 compilant date strings are accepted.
For example: Sat, 14 Feb 09 00:31:30 +0100
Returned is the new date object</description>
      <param description="RFC 822 Date to add" type="object" variable="$date">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subArpa" start="3217" end="3220" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts a RFC 822 date from the date object.">ARPA messages are used in emails or HTTP Headers.
Only RFC 822 compilant date strings are accepted.
For example: Sat, 14 Feb 09 00:31:30 +0100
Returned is the new date object</description>
      <param description="RFC 822 Date to sub" type="object" variable="$date">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareArpa" start="3235" end="3238" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares a RFC 822 compilant date with the date object.">ARPA messages are used in emails or HTTP Headers.
Only RFC 822 compilant date strings are accepted.
For example: Sat, 14 Feb 09 00:31:30 +0100
Returns if equal, earlier or later</description>
      <param description="RFC 822 Date to sub" type="object" variable="$date">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="_checkLocation" start="3247" end="3280" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Check if location is supported"/>
      <param description="locations array" type="array" variable="$location"/>
      <return description="float" type="object">
        <type full="$horizon" namespace="" name="$horizon"/>
      </return>
    </docblock>
    <parameter name="location" byreference="false" type="{unknown}"/>
  </method>
  <method name="getSunrise" start="3294" end="3300" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the time of sunrise for this date and a given location as new date object For a list of cities and correct locations use the class Zend_Date_Cities"/>
      <param description="location of sunrise" type="array" variable="$location">['horizon']   -&gt; civil, nautic, astronomical, effective (default)
                  ['longitude'] -&gt; longitude of location
                  ['latitude']  -&gt; latitude of location</param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="location" byreference="false" type="{unknown}"/>
  </method>
  <method name="getSunset" start="3314" end="3320" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the time of sunset for this date and a given location as new date object For a list of cities and correct locations use the class Zend_Date_Cities"/>
      <param description="location of sunset" type="array" variable="$location">['horizon']   -&gt; civil, nautic, astronomical, effective (default)
                  ['longitude'] -&gt; longitude of location
                  ['latitude']  -&gt; latitude of location</param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="location" byreference="false" type="{unknown}"/>
  </method>
  <method name="getSunInfo" start="3334" end="3361" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array with the sunset and sunrise dates for all horizon types For a list of cities and correct locations use the class Zend_Date_Cities"/>
      <param description="location of suninfo" type="array" variable="$location">['horizon']   -&gt; civil, nautic, astronomical, effective (default)
                  ['longitude'] -&gt; longitude of location
                  ['latitude']  -&gt; latitude of location</param>
      <return description="- [sunset|sunrise][effective|civil|nautic|astronomic]" type="array"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="location" byreference="false" type="{unknown}"/>
  </method>
  <method name="checkLeapYear" start="3370" end="3391" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Check a given year for leap year."/>
      <param description="Year to check" type="object" variable="$year">
        <type full="integer|array|Zend_Date" namespace="" name="integer|array|Zend_Date"/>
      </param>
      <return type="boolean"/>
    </docblock>
    <parameter name="year" byreference="false" type="{unknown}"/>
  </method>
  <method name="isLeapYear" start="3399" end="3402" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns true, if the year is a leap year."/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="isToday" start="3410" end="3415" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns if the set date is todays date"/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="isYesterday" start="3423" end="3430" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns if the set date is yesterdays date"/>
      <return type="boolean"/>
    </docblock>
    <inline>
      <comment value="adjusts for leap days and DST changes that are timezone specific" line="3426"/>
    </inline>
  </method>
  <method name="isTomorrow" start="3438" end="3445" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns if the set date is tomorrows date"/>
      <return type="boolean"/>
    </docblock>
    <inline>
      <comment value="adjusts for leap days and DST changes that are timezone specific" line="3441"/>
    </inline>
  </method>
  <method name="now" start="3453" end="3456" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the actual date as new date object"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="_calcdetail" start="3468" end="3496" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Calculate date details"/>
      <param description="Calculation to make" type="string" variable="$calc"/>
      <param description="Date or Part to calculate" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="Datepart for Calculation" type="string" variable="$part"/>
      <param description="Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="new date" type="object">
        <type full="integer|string" namespace="" name="integer|string"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
  </method>
  <method name="_calcvalue" start="3507" end="3531" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Internal calculation, returns the requested date type"/>
      <param description="Calculation to make" type="string" variable="$calc"/>
      <param description="Datevalue to calculate with, if null the actual value is taken" type="object" variable="$value">
        <type full="string|integer|Zend_Date" namespace="" name="string|integer|Zend_Date"/>
      </param>
      <param description="Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="new date" type="object">
        <type full="integer|Zend_Date" namespace="" name="integer|Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="parameter" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="extract value from object" line="3519"/>
    </inline>
  </method>
  <method name="getYear" start="3541" end="3550" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns only the year from the date object as new object.">For example: 10.May.2000 10:30:00 -&gt; 01.Jan.2000 00:00:00</description>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="setYear" start="3566" end="3569" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new year If the year is between 0 and 69, 2000 will be set (2000-2069) If the year if between 70 and 99, 1999 will be set (1970-1999) 3 or 4 digit years are set as expected. If you need to set year 0-99 use set() instead.">Returned is the new date object</description>
      <param description="Year to set" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="year" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addYear" start="3585" end="3588" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds the year to the existing date object If the year is between 0 and 69, 2000 will be added (2000-2069) If the year if between 70 and 99, 1999 will be added (1970-1999) 3 or 4 digit years are added as expected. If you need to add years from 0-99 use add() instead.">Returned is the new date object</description>
      <param description="Year to add" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="year" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subYear" start="3604" end="3607" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subs the year from the existing date object If the year is between 0 and 69, 2000 will be subtracted (2000-2069) If the year if between 70 and 99, 1999 will be subtracted (1970-1999) 3 or 4 digit years are subtracted as expected. If you need to subtract years from 0-99 use sub() instead.">Returned is the new date object</description>
      <param description="Year to sub" type="object" variable="$date">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="year" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareYear" start="3620" end="3623" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the year with the existing date object, ignoring other date parts.">For example: 10.03.2000 -&gt; 15.02.2000 -&gt; true
Returns if equal, earlier or later</description>
      <param description="Year to compare" type="object" variable="$year">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="year" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getMonth" start="3633" end="3642" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns only the month from the date object as new object.">For example: 10.May.2000 10:30:00 -&gt; 01.May.1970 00:00:00</description>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="_month" start="3654" end="3712" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Returns the calculated month"/>
      <param description="Calculation to make" type="string" variable="$calc"/>
      <param description="Month to calculate with, if null the actual month is taken" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="new time" type="object">
        <type full="integer|Zend_Date" namespace="" name="integer|Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="month" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="extract month from object" line="3666"/>
    </inline>
  </method>
  <method name="setMonth" start="3728" end="3731" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new month The month can be a number or a string. Setting months lower then 0 and greater then 12 will result in adding or subtracting the relevant year. (12 months equal one year) If a localized monthname is given it will be parsed with the default locale or the optional set locale.">Returned is the new date object</description>
      <param description="Month to set" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="month" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addMonth" start="3747" end="3750" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds months to the existing date object.">The month can be a number or a string. Adding months lower then 0 and greater then 12
will result in adding or subtracting the relevant year. (12 months equal one year)
If a localized monthname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object</description>
      <param description="Month to add" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="month" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subMonth" start="3766" end="3769" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts months from the existing date object.">The month can be a number or a string. Subtracting months lower then 0 and greater then 12
will result in adding or subtracting the relevant year. (12 months equal one year)
If a localized monthname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object</description>
      <param description="Month to sub" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="month" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareMonth" start="3782" end="3785" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the month with the existing date object, ignoring other date parts.">For example: 10.03.2000 -&gt; 15.03.1950 -&gt; true
Returns if equal, earlier or later</description>
      <param description="Month to compare" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="month" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getDay" start="3795" end="3798" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the day as new date object Example: 20.May.1986 -&gt; 20.Jan.1970 00:00:00"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="Zend_Locale" namespace="" name="Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="_day" start="3809" end="3855" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Returns the calculated day"/>
      <param description="Type of calculation to make" type="string" variable="$calc"/>
      <param description="Day to calculate, when null the actual day is calculated" type="object" variable="$day">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </param>
      <param description="Locale for parsing input" type="object" variable="$locale">
        <type full="Zend_Locale" namespace="" name="Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date|integer" namespace="" name="Zend_Date|integer"/>
      </return>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
  </method>
  <method name="setDay" start="3872" end="3875" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new day The day can be a number or a string. Setting days lower then 0 or greater than the number of this months days will result in adding or subtracting the relevant month.">If a localized dayname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object
Example: setDay('Montag', 'de_AT'); will set the monday of this week as day.</description>
      <param description="Day to set" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addDay" start="3890" end="3893" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds days to the existing date object.">The day can be a number or a string. Adding days lower then 0 or greater than the number of this months days
will result in adding or subtracting the relevant month.
If a localized dayname is given it will be parsed with the default locale or the optional
set locale.</description>
      <param description="Day to add" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subDay" start="3908" end="3911" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts days from the existing date object.">The day can be a number or a string. Subtracting days lower then 0 or greater than the number of this months days
will result in adding or subtracting the relevant month.
If a localized dayname is given it will be parsed with the default locale or the optional
set locale.</description>
      <param description="Day to sub" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareDay" start="3924" end="3927" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the day with the existing date object, ignoring other date parts.">For example: 'Monday', 'en' -&gt; 08.Jan.2007 -&gt; 0
Returns if equal, earlier or later</description>
      <param description="Day to compare" type="object" variable="$day">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getWeekday" start="3938" end="3947" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the weekday as new date object Weekday is always from 1-7 Example: 09-Jan-2007 -&gt; 2 = Tuesday -&gt; 02-Jan-1970 (when 02.01.1970 is also Tuesday)"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="Zend_Locale" namespace="" name="Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="_weekday" start="3959" end="4005" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Returns the calculated weekday"/>
      <param description="Type of calculation to make" type="string" variable="$calc"/>
      <param description="Weekday to calculate, when null the actual weekday is calculated" type="object" variable="$weekday">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </param>
      <param description="Locale for parsing input" type="object" variable="$locale">
        <type full="Zend_Locale" namespace="" name="Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date|integer" namespace="" name="Zend_Date|integer"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="calc" byreference="false" type="{unknown}"/>
    <parameter name="weekday" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
  </method>
  <method name="setWeekday" start="4020" end="4023" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new weekday The weekday can be a number or a string. If a localized weekday name is given, then it will be parsed as a date in $locale (defaults to the same locale as $this).">Returned is the new date object.
Example: setWeekday(3); will set the wednesday of this week as day.</description>
      <param description="Weekday to set" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="weekday" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addWeekday" start="4040" end="4043" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds weekdays to the existing date object.">The weekday can be a number or a string.
If a localized dayname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object
Example: addWeekday(3); will add the difference of days from the begining of the month until
wednesday.</description>
      <param description="Weekday to add" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="weekday" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subWeekday" start="4060" end="4063" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts weekdays from the existing date object.">The weekday can be a number or a string.
If a localized dayname is given it will be parsed with the default locale or the optional
set locale.
Returned is the new date object
Example: subWeekday(3); will subtract the difference of days from the begining of the month until
wednesday.</description>
      <param description="Weekday to sub" type="object" variable="$month">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="weekday" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareWeekday" start="4076" end="4079" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the weekday with the existing date object, ignoring other date parts.">For example: 'Monday', 'en' -&gt; 08.Jan.2007 -&gt; 0
Returns if equal, earlier or later</description>
      <param description="Weekday to compare" type="object" variable="$weekday">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="weekday" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getDayOfYear" start="4089" end="4098" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the day of year as new date object Example: 02.Feb.1986 10:00:00 -&gt; 02.Feb.1970 00:00:00"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="setDayOfYear" start="4112" end="4115" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new day of year The day of year is always a number.">Returned is the new date object
Example: 04.May.2004 -&gt; setDayOfYear(10) -&gt; 10.Jan.2004</description>
      <param description="Day of Year to set" type="object" variable="$day">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addDayOfYear" start="4129" end="4132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a day of year to the existing date object.">The day of year is always a number.
Returned is the new date object
Example: addDayOfYear(10); will add 10 days to the existing date object.</description>
      <param description="Day of Year to add" type="object" variable="$day">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subDayOfYear" start="4146" end="4149" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts a day of year from the existing date object.">The day of year is always a number.
Returned is the new date object
Example: subDayOfYear(10); will subtract 10 days from the existing date object.</description>
      <param description="Day of Year to sub" type="object" variable="$day">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareDayOfYear" start="4162" end="4165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the day of year with the existing date object.">For example: compareDayOfYear(33) -&gt; 02.Feb.2007 -&gt; 0
Returns if equal, earlier or later</description>
      <param description="Day of Year to compare" type="object" variable="$day">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getHour" start="4175" end="4178" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the hour as new date object Example: 02.Feb.1986 10:30:25 -&gt; 01.Jan.1970 10:00:00"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="Zend_Locale" namespace="" name="Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="setHour" start="4192" end="4195" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new hour The hour is always a number.">Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; setHour(7); -&gt; 04.May.1993 07:07:25</description>
      <param description="Hour to set" type="object" variable="$hour">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="hour" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addHour" start="4209" end="4212" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds hours to the existing date object.">The hour is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; addHour(12); -&gt; 05.May.1993 01:07:25</description>
      <param description="Hour to add" type="object" variable="$hour">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="hour" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subHour" start="4226" end="4229" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts hours from the existing date object.">The hour is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; subHour(6); -&gt; 05.May.1993 07:07:25</description>
      <param description="Hour to sub" type="object" variable="$hour">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="hour" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareHour" start="4242" end="4245" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the hour with the existing date object.">For example: 10:30:25 -&gt; compareHour(10) -&gt; 0
Returns if equal, earlier or later</description>
      <param description="Hour to compare" type="object" variable="$hour">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="hour" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getMinute" start="4255" end="4264" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the minute as new date object Example: 02.Feb.1986 10:30:25 -&gt; 01.Jan.1970 00:30:00"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="setMinute" start="4278" end="4281" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new minute The minute is always a number.">Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; setMinute(29); -&gt; 04.May.1993 13:29:25</description>
      <param description="Minute to set" type="object" variable="$minute">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="minute" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addMinute" start="4295" end="4298" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds minutes to the existing date object.">The minute is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; addMinute(65); -&gt; 04.May.1993 13:12:25</description>
      <param description="Minute to add" type="object" variable="$minute">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="minute" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subMinute" start="4312" end="4315" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts minutes from the existing date object.">The minute is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; subMinute(9); -&gt; 04.May.1993 12:58:25</description>
      <param description="Minute to sub" type="object" variable="$minute">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="minute" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareMinute" start="4328" end="4331" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the minute with the existing date object.">For example: 10:30:25 -&gt; compareMinute(30) -&gt; 0
Returns if equal, earlier or later</description>
      <param description="Hour to compare" type="object" variable="$minute">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="minute" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getSecond" start="4341" end="4350" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the second as new date object Example: 02.Feb.1986 10:30:25 -&gt; 01.Jan.1970 00:00:25"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="setSecond" start="4364" end="4367" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets new seconds to the existing date object.">The second is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; setSecond(100); -&gt; 04.May.1993 13:08:40</description>
      <param description="Second to set" type="object" variable="$second">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="(Optional) Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="second" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addSecond" start="4381" end="4384" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds seconds to the existing date object.">The second is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; addSecond(65); -&gt; 04.May.1993 13:08:30</description>
      <param description="Second to add" type="object" variable="$second">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="(Optional) Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="second" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subSecond" start="4398" end="4401" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts seconds from the existing date object.">The second is always a number.
Returned is the new date object
Example: 04.May.1993 13:07:25 -&gt; subSecond(10); -&gt; 04.May.1993 13:07:15</description>
      <param description="Second to sub" type="object" variable="$second">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="(Optional) Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="second" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareSecond" start="4414" end="4417" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares the second with the existing date object.">For example: 10:30:25 -&gt; compareSecond(25) -&gt; 0
Returns if equal, earlier or later</description>
      <param description="Second to compare" type="object" variable="$second">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="(Optional) Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="second" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getFractionalPrecision" start="4425" end="4428" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the precision for fractional seconds"/>
      <return type="integer"/>
    </docblock>
  </method>
  <method name="setFractionalPrecision" start="4438" end="4453" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new precision for fractional seconds"/>
      <param description="Precision for the fractional datepart 3 = milliseconds" type="integer" variable="$precision"/>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="precision" byreference="false" type="{unknown}"/>
  </method>
  <method name="getMilliSecond" start="4461" end="4464" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the milliseconds of the date object"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="setMilliSecond" start="4475" end="4498" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets new milliseconds for the date object Example: setMilliSecond(550, 2) -&gt; equals +5 Sec +50 MilliSec"/>
      <param description="(Optional) Millisecond to set, when null the actual millisecond is set" type="object" variable="$milli">
        <type full="integer|Zend_Date" namespace="" name="integer|Zend_Date"/>
      </param>
      <param description="(Optional) Fraction precision of the given milliseconds" type="integer" variable="$precision"/>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="milli" byreference="false" type="{unknown}" default="null"/>
    <parameter name="precision" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addMilliSecond" start="4508" end="4554" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds milliseconds to the date object"/>
      <param description="(Optional) Millisecond to add, when null the actual millisecond is added" type="object" variable="$milli">
        <type full="integer|Zend_Date" namespace="" name="integer|Zend_Date"/>
      </param>
      <param description="(Optional) Fractional precision for the given milliseconds" type="integer" variable="$precision"/>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="milli" byreference="false" type="{unknown}" default="null"/>
    <parameter name="precision" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="Add/sub milliseconds + add/sub seconds" line="4532"/>
      <comment value="Milli includes seconds" line="4534"/>
    </inline>
  </method>
  <method name="subMilliSecond" start="4564" end="4568" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts a millisecond"/>
      <param description="(Optional) Millisecond to sub, when null the actual millisecond is subtracted" type="object" variable="$milli">
        <type full="integer|Zend_Date" namespace="" name="integer|Zend_Date"/>
      </param>
      <param description="(Optional) Fractional precision for the given milliseconds" type="integer" variable="$precision"/>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="milli" byreference="false" type="{unknown}" default="null"/>
    <parameter name="precision" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareMilliSecond" start="4578" end="4617" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares only the millisecond part, returning the difference"/>
      <param description="OPTIONAL Millisecond to compare, when null the actual millisecond is compared" type="object" variable="$milli">
        <type full="integer|Zend_Date" namespace="" name="integer|Zend_Date"/>
      </param>
      <param description="OPTIONAL Fractional precision for the given milliseconds" type="integer" variable="$precision"/>
      <throws description="On invalid input" type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
    </docblock>
    <parameter name="milli" byreference="false" type="{unknown}" default="null"/>
    <parameter name="precision" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getWeek" start="4626" end="4635" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the week as new date object using monday as begining of the week Example: 12.Jan.2007 -&gt; 08.Jan.1970 00:00:00"/>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="Zend_Locale" namespace="" name="Zend_Locale"/>
      </param>
      <return type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="setWeek" start="4647" end="4650" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new week. The week is always a number. The day of week is not changed.">Returned is the new date object
Example: 09.Jan.2007 13:07:25 -&gt; setWeek(1); -&gt; 02.Jan.2007 13:07:25</description>
      <param description="Week to set" type="object" variable="$week">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="week" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addWeek" start="4662" end="4665" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a week. The week is always a number. The day of week is not changed.">Returned is the new date object
Example: 09.Jan.2007 13:07:25 -&gt; addWeek(1); -&gt; 16.Jan.2007 13:07:25</description>
      <param description="Week to add" type="object" variable="$week">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="week" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="subWeek" start="4677" end="4680" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Subtracts a week. The week is always a number. The day of week is not changed.">Returned is the new date object
Example: 09.Jan.2007 13:07:25 -&gt; subWeek(1); -&gt; 02.Jan.2007 13:07:25</description>
      <param description="Week to sub" type="object" variable="$week">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="Provides fluid interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="week" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="compareWeek" start="4692" end="4695" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compares only the week part, returning the difference Returned is the new date object Returns if equal, earlier or later Example: 09.Jan.2007 13:07:25 -&gt; compareWeek(2); -&gt; 0"/>
      <param description="Week to compare" type="object" variable="$week">
        <type full="string|integer|array|Zend_Date" namespace="" name="string|integer|array|Zend_Date"/>
      </param>
      <param description="OPTIONAL Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="0 = equal, 1 = later, -1 = earlier" type="integer"/>
    </docblock>
    <parameter name="week" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="setLocale" start="4708" end="4718" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new standard locale for the date object.">This locale will be used for all functions
Returned is the really set locale.
Example: 'de_XX' will be set to 'de' because 'de_XX' does not exist
'xx_YY' will be set to 'root' because 'xx' does not exist</description>
      <param description="(Optional) Locale for parsing input" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <throws description="When the given locale does not exist" type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
      <return description="Provides fluent interface" type="object">
        <type full="Zend_Date" namespace="" name="Zend_Date"/>
      </return>
    </docblock>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getLocale" start="4725" end="4728" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the actual set locale"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="isDate" start="4742" end="4875" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Checks if the given date is a real date or datepart.">Returns false if a expected datepart is missing or a datepart exceeds its possible border.
But the check will only be done for the expected dateparts which are given by format.
If no format is given the standard dateformat for the actual locale is used.
f.e. 30.February.2007 will return false if format is 'dd.MMMM.YYYY'</description>
      <param description="Date to parse for correctness" type="object" variable="$date">
        <type full="string|array|Zend_Date" namespace="" name="string|array|Zend_Date"/>
      </param>
      <param description="(Optional) Format for parsing the date string" type="string" variable="$format"/>
      <param description="(Optional) Locale for parsing date parts" type="object" variable="$locale">
        <type full="string|Zend_Locale" namespace="" name="string|Zend_Locale"/>
      </param>
      <return description="True when all date parts are correct" type="boolean"/>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}"/>
    <parameter name="format" byreference="false" type="{unknown}" default="null"/>
    <parameter name="locale" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="Year expected but not found" line="4779"/>
      <comment value="Month expected but not found" line="4784"/>
      <comment value="Day expected but not found" line="4789"/>
      <comment value="Hour expected but not found" line="4795"/>
      <comment value="Minute expected but not found" line="4800"/>
      <comment value="Second expected  but not found" line="4805"/>
      <comment value="Set not given dateparts" line="4809"/>
      <comment value="Given year differs from parsed year" line="4845"/>
      <comment value="Given month differs from parsed month" line="4850"/>
      <comment value="Given day differs from parsed day" line="4855"/>
      <comment value="Given hour differs from parsed hour" line="4860"/>
      <comment value="Given minute differs from parsed minute" line="4865"/>
      <comment value="Given second differs from parsed second" line="4870"/>
    </inline>
  </method>
  <method name="_getLocalizedToken" start="4884" end="4956" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Returns the ISO Token for all localized constants"/>
      <param description="Token to normalize" type="string" variable="$token"/>
      <param description="Locale to search" type="string" variable="$locale"/>
      <return type="string"/>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
    <parameter name="locale" byreference="false" type="{unknown}"/>
  </method>
  <parent full="Zend_Date_DateObject" namespace="" name="Zend_Date_DateObject">
    <member name="_cache" type="{unknown}" default="null" visibility="protected" line="35"/>
    <member name="_cacheTags" type="{unknown}" default="false" visibility="protected" line="36"/>
    <member name="_defaultOffset" type="integer" default="0" visibility="protected" line="37"/>
    <member name="_dst" type="{unknown}" default="true" visibility="protected" line="47"/>
    <method name="setUnixTimestamp" start="79" end="93" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Set this object to have a new UNIX timestamp."/>
        <param description="OPTIONAL timestamp; defaults to local time using time()" type="object" variable="$timestamp">
          <type full="string|integer" namespace="" name="string|integer"/>
        </param>
        <return description="old timestamp" type="object">
          <type full="string|integer" namespace="" name="string|integer"/>
        </return>
        <throws type="object">
          <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
        </throws>
      </docblock>
      <parameter name="timestamp" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="getUnixTimestamp" start="102" end="109" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Returns this object's UNIX timestamp A timestamp greater then the integer range will be returned as string This function does not return the timestamp as object. Use copy() instead."/>
        <return description="timestamp" type="object">
          <type full="integer|string" namespace="" name="integer|string"/>
        </return>
      </docblock>
    </method>
    <method name="_getTime" start="119" end="125" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Internal function.">Returns time().  This method exists to allow unit tests to work-around methods that might otherwise
be hard-coded to use time().  For example, this makes it possible to test isYesterday() in Date.php.</description>
        <param description="OPTIONAL time syncronisation value" type="integer" variable="$sync"/>
        <return description="timestamp" type="integer"/>
      </docblock>
      <parameter name="sync" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="mktime" start="146" end="266" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Internal mktime function used by Zend_Date.">The timestamp returned by mktime() can exceed the precision of traditional UNIX timestamps,
by allowing PHP to auto-convert to using a float value.

Returns a timestamp relative to 1970/01/01 00:00:00 GMT/UTC.
DST (Summer/Winter) is depriciated since php 5.1.0.
Year has to be 4 digits otherwise it would be recognised as
year 70 AD instead of 1970 AD as expected !!</description>
        <param type="integer" variable="$hour"/>
        <param type="integer" variable="$minute"/>
        <param type="integer" variable="$second"/>
        <param type="integer" variable="$month"/>
        <param type="integer" variable="$day"/>
        <param type="integer" variable="$year"/>
        <param description="OPTIONAL true = other arguments are for UTC time, false = arguments are for local time/date" type="boolean" variable="$gmt"/>
        <return description="timestamp (number of seconds elapsed relative to 1970/01/01 00:00:00 GMT/UTC)" type="object">
          <type full="integer|float" namespace="" name="integer|float"/>
        </return>
      </docblock>
      <parameter name="hour" byreference="false" type="{unknown}"/>
      <parameter name="minute" byreference="false" type="{unknown}"/>
      <parameter name="second" byreference="false" type="{unknown}"/>
      <parameter name="month" byreference="false" type="{unknown}"/>
      <parameter name="day" byreference="false" type="{unknown}"/>
      <parameter name="year" byreference="false" type="{unknown}"/>
      <parameter name="gmt" byreference="false" type="{unknown}" default="false"/>
      <inline>
        <comment value="complete date but in 32bit timestamp - use PHP internal" line="148"/>
        <comment value="Timezone also includes DST settings, therefor substracting the GMT offset is not enough" line="152"/>
        <comment value="We have to set the correct timezone to get the right value" line="153"/>
        <comment value="date to integer" line="175"/>
        <comment value="correct months &gt; 12 and months &lt; 1" line="180"/>
        <comment value="Date is after UNIX epoch" line="194"/>
        <comment value="go through leapyears" line="195"/>
        <comment value="add months from latest given year" line="196"/>
      </inline>
    </method>
    <method name="isYearLeapYear" start="274" end="289" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Returns true, if given $year is a leap year."/>
        <param type="integer" variable="$year"/>
        <return description="true, if year is leap year" type="boolean"/>
      </docblock>
      <parameter name="year" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="all leapyears can be divided through 4" line="276"/>
        <comment value="all leapyears can be divided through 400" line="281"/>
      </inline>
    </method>
    <method name="date" start="301" end="618" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Internal mktime function used by Zend_Date for handling 64bit timestamps.">Returns a formatted date for a given timestamp.</description>
        <param description="format for output" type="string" variable="$format"/>
        <param type="mixed" variable="$timestamp"/>
        <param description="OPTIONAL true = other arguments are for UTC time, false = arguments are for local time/date" type="boolean" variable="$gmt"/>
        <return type="string"/>
      </docblock>
      <parameter name="format" byreference="false" type="{unknown}"/>
      <parameter name="timestamp" byreference="false" type="{unknown}" default="null"/>
      <parameter name="gmt" byreference="false" type="{unknown}" default="false"/>
      <inline>
        <comment value="check on false or null alone fails" line="330"/>
      </inline>
    </method>
    <method name="dayOfWeek" start="629" end="652" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Returns the day of week for a Gregorian calendar date.">0 = sunday, 6 = saturday</description>
        <param type="integer" variable="$year"/>
        <param type="integer" variable="$month"/>
        <param type="integer" variable="$day"/>
        <return description="dayOfWeek" type="integer"/>
      </docblock>
      <parameter name="year" byreference="false" type="{unknown}"/>
      <parameter name="month" byreference="false" type="{unknown}"/>
      <parameter name="day" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="gregorian correction" line="635"/>
      </inline>
    </method>
    <method name="getDateParts" start="667" end="848" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Internal getDateParts function for handling 64bit timestamps, similar to: http://www.php.net/getdate">Returns an array of date parts for $timestamp, relative to 1970/01/01 00:00:00 GMT/UTC.

$fast specifies ALL date parts should be returned (slower)
Default is false, and excludes $dayofweek, weekday, month and timestamp from parts returned.</description>
        <param type="mixed" variable="$timestamp"/>
        <param description="OPTIONAL defaults to fast (false), resulting in fewer date parts" type="boolean" variable="$fast"/>
        <return type="array"/>
      </docblock>
      <parameter name="timestamp" byreference="false" type="{unknown}" default="null"/>
      <parameter name="fast" byreference="false" type="{unknown}" default="null"/>
      <inline>
        <comment value="actual timestamp" line="670"/>
        <comment value="32bit timestamp" line="675"/>
        <comment value="gregorian correction" line="690"/>
        <comment value="timestamp lower 0" line="695"/>
        <comment value="iterate through 10 years table, increasing speed" line="700"/>
        <comment value="iterate the max last 10 years" line="715"/>
        <comment value="iterate through months" line="735"/>
      </inline>
    </method>
    <method name="weekNumber" start="860" end="880" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Internal getWeekNumber function for handling 64bit timestamps">Returns the ISO 8601 week number of a given date</description>
        <param type="integer" variable="$year"/>
        <param type="integer" variable="$month"/>
        <param type="integer" variable="$day"/>
        <return type="integer"/>
      </docblock>
      <parameter name="year" byreference="false" type="{unknown}"/>
      <parameter name="month" byreference="false" type="{unknown}"/>
      <parameter name="day" byreference="false" type="{unknown}"/>
    </method>
    <method name="calcSun" start="906" end="996" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Calculates the sunrise or sunset based on a location"/>
        <param description="Location for calculation MUST include 'latitude', 'longitude', 'horizon'" type="array" variable="$location"/>
        <param description="true: sunrise; false: sunset" type="object" variable="$horizon">
          <type full="bool" namespace="" name="bool"/>
        </param>
        <return description="- false: midnight sun, integer:" type="mixed"/>
      </docblock>
      <parameter name="location" byreference="false" type="{unknown}"/>
      <parameter name="horizon" byreference="false" type="{unknown}"/>
      <parameter name="rise" byreference="false" type="{unknown}" default="false"/>
      <inline>
        <comment value="timestamp within 32bit" line="908"/>
        <comment value="self calculation - timestamp bigger than 32bit" line="918"/>
        <comment value="fix circle values" line="919"/>
        <comment value="radiant conversion for coordinates" line="925"/>
        <comment value="get solar coordinates" line="929"/>
        <comment value="solar anomoly and longitude" line="933"/>
        <comment value="get quadrant" line="938"/>
        <comment value="solar ascension" line="945"/>
        <comment value="adjust quadrant" line="949"/>
        <comment value="solar declination" line="956"/>
        <comment value="midnight sun, always night" line="964"/>
        <comment value="time calculation" line="976"/>
        <comment value="determinate quadrant" line="980"/>
        <comment value="radiant to hours" line="983"/>
        <comment value="convert to time" line="986"/>
      </inline>
    </method>
    <method name="setTimezone" start="1007" end="1036" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets a new timezone for calculation of $this object's gmt offset.">For a list of supported timezones look here: http://php.net/timezones
If no timezone can be detected or the given timezone is wrong UTC will be set.</description>
        <param description="OPTIONAL timezone for date calculation; defaults to date_default_timezone_get()" type="string" variable="$zone"/>
        <return description="Provides fluent interface" type="object">
          <type full="Zend_Date_DateObject" namespace="" name="Zend_Date_DateObject"/>
        </return>
        <throws type="object">
          <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
        </throws>
      </docblock>
      <parameter name="zone" byreference="false" type="{unknown}" default="null"/>
      <inline>
        <comment value="throw an error on false input, but only if the new date extension is available" line="1014"/>
        <comment value="this can generate an error if the date extension is not available and a false timezone is given" line="1021"/>
      </inline>
    </method>
    <method name="getTimezone" start="1044" end="1047" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return the timezone of $this object.">The timezone is initially set when the object is instantiated.</description>
        <return description="actual set timezone string" type="string"/>
      </docblock>
    </method>
    <method name="getGmtOffset" start="1056" end="1070" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return the offset to GMT of $this object's timezone.">The offset to GMT is initially set when the object is instantiated using the currently,
in effect, default timezone for PHP functions.</description>
        <return description="seconds difference between GMT timezone and timezone when object was instantiated" type="integer"/>
      </docblock>
    </method>
    <method name="_getTagSupportForCache" start="1077" end="1088" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Internal method to check if the given cache supports tags"/>
        <param type="object" variable="$cache">
          <type full="Zend_Cache" namespace="" name="Zend_Cache"/>
        </param>
      </docblock>
    </method>
  </parent>
</class>
