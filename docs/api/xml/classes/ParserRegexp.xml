<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="ParserRegexp" namespace="" name="ParserRegexp" abstract="false" final="false" start="11" end="38">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/php-peg" file="Parser.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/php-peg/Parser.php" size="8743" time="2015-03-14T10:41:57+13:00" unixtime="1426282917" sha1="f5eaf9101b2c99ebbe4c652f673c1a0ce0f9b68a" relative="framework/thirdparty/php-peg/Parser.php"/>
  <docblock>
    <description compact="We cache the last regex result. This is a low-cost optimization, because we have to do an un-anchored match + check match position anyway (alternative is to do an anchored match on a string cut with substr, but that is very slow for long strings). We then don't need to recheck for any position between current position and eventual match position - result will be the same">Of course, the next regex might be outside that bracket - after the bracket if other matches have progressed beyond the match position, or before
 the bracket if a failed match + restore has moved the current position backwards - so we have to check that too.</description>
  </docblock>
  <constructor name="__construct" start="12" end="19" abstract="false" final="false" static="false" visibility="public">
    <parameter name="parser" byreference="false" type="{unknown}"/>
    <parameter name="rx" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="NULL is no-match-to-end-of-string, unless check_pos also == NULL, in which case means undefined" line="17"/>
    </inline>
  </constructor>
  <method name="match" start="21" end="37" abstract="false" final="false" static="false" visibility="public"/>
</class>
