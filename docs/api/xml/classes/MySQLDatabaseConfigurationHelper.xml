<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="MySQLDatabaseConfigurationHelper" namespace="" name="MySQLDatabaseConfigurationHelper" abstract="false" final="false" start="11" end="137">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/dev/install" file="MySQLDatabaseConfigurationHelper.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/dev/install/MySQLDatabaseConfigurationHelper.php" size="4300" time="2015-03-14T10:39:31+13:00" unixtime="1426282771" sha1="c645cb4b7c257e1a4cffe4ebd918e899b35b66dd" relative="framework/dev/install/MySQLDatabaseConfigurationHelper.php"/>
  <docblock>
    <description compact="This is a helper class for the SS installer.">It does all the specific checking for MySQLDatabase
to ensure that the configuration is setup correctly.</description>
    <package value="framework"/>
    <subpackage value="model"/>
  </docblock>
  <implements full="DatabaseConfigurationHelper" namespace="" name="DatabaseConfigurationHelper"/>
  <method name="requireDatabaseFunctions" start="20" end="22" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ensure that the database function for connectivity is available.">If it is, we assume the PHP module for this database has been setup correctly.</description>
      <param description="Associative array of db configuration, e.g. &quot;server&quot;, &quot;username&quot; etc" type="array" variable="$databaseConfig"/>
      <return type="boolean"/>
    </docblock>
    <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
  </method>
  <method name="requireDatabaseServer" start="29" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ensure that the database server exists."/>
      <param description="Associative array of db configuration, e.g. &quot;server&quot;, &quot;username&quot; etc" type="array" variable="$databaseConfig"/>
      <return description="Result - e.g. array('success' =&gt; true, 'error' =&gt; 'details of error')" type="array"/>
    </docblock>
    <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDatabaseVersion" start="51" end="64" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the database version for the MySQL connection, given the database parameters."/>
      <return description="string Version number as string | boolean FALSE on failure" type="mixed"/>
    </docblock>
    <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="fallback to trying a query" line="56"/>
    </inline>
  </method>
  <method name="requireDatabaseVersion" start="71" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ensure that the MySQL server version is at least 5.0."/>
      <param description="Associative array of db configuration, e.g. &quot;server&quot;, &quot;username&quot; etc" type="array" variable="$databaseConfig"/>
      <return description="Result - e.g. array('success' =&gt; true, 'error' =&gt; 'details of error')" type="array"/>
    </docblock>
    <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
  </method>
  <method name="requireDatabaseConnection" start="94" end="108" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ensure a database connection is possible using credentials provided."/>
      <param description="Associative array of db configuration, e.g. &quot;server&quot;, &quot;username&quot; etc" type="array" variable="$databaseConfig"/>
      <return description="Result - e.g. array('success' =&gt; true, 'error' =&gt; 'details of error')" type="array"/>
    </docblock>
    <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
  </method>
  <method name="requireDatabaseOrCreatePermissions" start="117" end="135" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ensure that the database connection is able to use an existing database, or be able to create one if it doesn't exist."/>
      <param description="Associative array of db configuration, e.g. &quot;server&quot;, &quot;username&quot; etc" type="array" variable="$databaseConfig"/>
      <return description="Result - e.g. array('success' =&gt; true, 'alreadyExists' =&gt; 'true')" type="array"/>
    </docblock>
    <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
  </method>
  <interface full="DatabaseConfigurationHelper" namespace="" name="DatabaseConfigurationHelper">
    <method name="requireDatabaseFunctions" start="15" end="15" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Ensure that the database function for connectivity is available.">If it is, we assume the PHP module for this database has been setup correctly.</description>
        <param description="Associative array of db configuration, e.g. &quot;server&quot;, &quot;username&quot; etc" type="array" variable="$databaseConfig"/>
        <return type="boolean"/>
      </docblock>
      <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
    </method>
    <method name="requireDatabaseServer" start="22" end="22" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Ensure that the database server exists."/>
        <param description="Associative array of db configuration, e.g. &quot;server&quot;, &quot;username&quot; etc" type="array" variable="$databaseConfig"/>
        <return description="Result - e.g. array('okay' =&gt; true, 'error' =&gt; 'details of error')" type="array"/>
      </docblock>
      <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
    </method>
    <method name="requireDatabaseConnection" start="31" end="31" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Ensure a database connection is possible using credentials provided.">The established connection resource is returned with the results as well.</description>
        <param description="Associative array of db configuration, e.g. &quot;server&quot;, &quot;username&quot; etc" type="array" variable="$databaseConfig"/>
        <return description="Result - e.g. array('okay' =&gt; true, 'connection' =&gt; mysql link, 'error' =&gt; 'details of error')" type="array"/>
      </docblock>
      <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
    </method>
    <method name="requireDatabaseOrCreatePermissions" start="40" end="40" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Ensure that the database connection is able to use an existing database, or be able to create one if it doesn't exist."/>
        <param description="Associative array of db configuration, e.g. &quot;server&quot;, &quot;username&quot; etc" type="array" variable="$databaseConfig"/>
        <return description="Result - e.g. array('okay' =&gt; true, 'existsAlready' =&gt; 'true')" type="array"/>
      </docblock>
      <parameter name="databaseConfig" byreference="false" type="{unknown}"/>
    </method>
  </interface>
</class>
