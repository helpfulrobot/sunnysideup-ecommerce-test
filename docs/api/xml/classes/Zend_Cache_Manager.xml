<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Cache_Manager" namespace="" name="Zend_Cache_Manager" abstract="false" final="false" start="34" end="298">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/Zend/Cache" file="Manager.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/Zend/Cache/Manager.php" size="9591" time="2015-03-14T10:41:13+13:00" unixtime="1426282873" sha1="348dc4e08c00771a950223f53ed7f7ef7c435073" relative="framework/thirdparty/Zend/Cache/Manager.php"/>
  <docblock>
    <description/>
    <category value="Zend"/>
    <package value="Zend_Cache"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <constant name="PAGECACHE" value="'page'">
    <docblock>
      <description compact="Constant holding reserved name for default Page Cache"/>
    </docblock>
  </constant>
  <constant name="PAGETAGCACHE" value="'pagetag'">
    <docblock>
      <description compact="Constant holding reserved name for default Page Tag Cache"/>
    </docblock>
  </constant>
  <member name="_caches" type="array" visibility="protected" line="51">
    <docblock>
      <description compact="Array of caches stored by the Cache Manager instance"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_optionTemplates" type="array" visibility="protected" line="59">
    <docblock>
      <description compact="Array of ready made configuration templates for lazy loading caches."/>
      <var type="array"/>
    </docblock>
  </member>
  <method name="setCache" start="121" end="125" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a new cache for the Cache Manager to contain"/>
      <param type="string" variable="$name"/>
      <param type="object" variable="$cache">
        <type full="Zend_Cache_Core" namespace="" name="Zend_Cache_Core"/>
      </param>
      <return type="object">
        <type full="Zend_Cache_Manager" namespace="" name="Zend_Cache_Manager"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="cache" byreference="false" type="object">
      <type full="\\Zend_Cache_Core" namespace="\" name="Zend_Cache_Core"/>
    </parameter>
  </method>
  <method name="hasCache" start="134" end="142" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if the Cache Manager contains the named cache object, or a named configuration template to lazy load the cache object"/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="getCache" start="151" end="177" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Fetch the named cache object, or instantiate and return a cache object using a named configuration template"/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="Zend_Cache_Core" namespace="" name="Zend_Cache_Core"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="getCaches" start="184" end="193" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Fetch all available caches"/>
      <return description="An array of all available caches with it's names as key" type="array"/>
    </docblock>
  </method>
  <method name="setCacheTemplate" start="203" end="214" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a named configuration template from which a cache object can later be lazy loaded"/>
      <param type="string" variable="$name"/>
      <param type="array" variable="$options"/>
      <return type="object">
        <type full="Zend_Cache_Manager" namespace="" name="Zend_Cache_Manager"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="{unknown}"/>
  </method>
  <method name="hasCacheTemplate" start="222" end="228" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if the named configuration template"/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="getCacheTemplate" start="236" end="241" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the named configuration template"/>
      <param type="string" variable="$name"/>
      <return type="array"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="setTemplateOptions" start="253" end="269" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Pass an array containing changes to be applied to a named configuration template"/>
      <param type="string" variable="$name"/>
      <param type="array" variable="$options"/>
      <return type="object">
        <type full="Zend_Cache_Manager" namespace="" name="Zend_Cache_Manager"/>
      </return>
      <throws description="for invalid options format or if option templates do not have $name" type="object">
        <type full="Zend_Cache_Exception" namespace="" name="Zend_Cache_Exception"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="{unknown}"/>
  </method>
  <method name="_mergeOptions" start="278" end="297" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Simple method to merge two configuration arrays"/>
      <param type="array" variable="$current"/>
      <param type="array" variable="$options"/>
      <return type="array"/>
    </docblock>
    <parameter name="current" byreference="false" type="array"/>
    <parameter name="options" byreference="false" type="array"/>
  </method>
</class>
