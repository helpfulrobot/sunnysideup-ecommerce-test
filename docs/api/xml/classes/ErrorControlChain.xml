<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="ErrorControlChain" namespace="" name="ErrorControlChain" abstract="false" final="false" start="17" end="136">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/core/startup" file="ErrorControlChain.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/core/startup/ErrorControlChain.php" size="4129" time="2015-03-14T10:39:29+13:00" unixtime="1426282769" sha1="855714a3a54edc131dee6413460fb5cf099e1d4d" relative="framework/core/startup/ErrorControlChain.php"/>
  <docblock>
    <description compact="Class ErrorControlChain">Runs a set of steps, optionally suppressing uncaught errors or exceptions which would otherwise be fatal that
occur in each step. If an error does occur, subsequent steps are normally skipped, but can optionally be run anyway.

Usage:

$chain = new ErrorControlChain();
$chain-&gt;then($callback1)-&gt;then($callback2)-&gt;thenIfErrored($callback3)-&gt;execute();

WARNING: This class is experimental and designed specifically for use pre-startup in main.php
It will likely be heavily refactored before the release of 3.2</description>
  </docblock>
  <member name="fatal_errors" type="{unknown}" default="null" visibility="public" line="18"/>
  <member name="error" type="{unknown}" default="false" visibility="protected" line="20"/>
  <member name="steps" type="array" visibility="protected" line="21"/>
  <member name="suppression" type="{unknown}" default="true" visibility="protected" line="23"/>
  <member name="handleFatalErrors" type="{unknown}" default="false" visibility="protected" line="26">
    <docblock>
      <description compact="We can't unregister_shutdown_function, so this acts as a flag to enable handling"/>
    </docblock>
  </member>
  <member name="originalDisplayErrors" type="{unknown}" default="null" visibility="protected" line="29">
    <docblock>
      <description compact="We overload display_errors to hide errors during execution, so we need to remember the original to restore to"/>
    </docblock>
  </member>
  <method name="hasErrored" start="31" end="33" abstract="false" final="false" static="false" visibility="public"/>
  <method name="setErrored" start="35" end="37" abstract="false" final="false" static="false" visibility="public">
    <parameter name="error" byreference="false" type="{unknown}"/>
  </method>
  <method name="setSuppression" start="39" end="42" abstract="false" final="false" static="false" visibility="public">
    <parameter name="suppression" byreference="false" type="{unknown}"/>
  </method>
  <method name="then" start="52" end="58" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add this callback to the chain of callbacks to call along with the state that $error must be in this point in the chain for the callback to be called"/>
      <param description="The callback to call" variable="$callback" type="object">
        <type full="-" namespace="" name="-"/>
      </param>
      <param description="false if only call if no errors yet, true if only call if already errors, null for either" variable="$onErrorState" type="object">
        <type full="-" namespace="" name="-"/>
      </param>
      <return type="object">
        <type full="$this" namespace="" name="$this"/>
      </return>
    </docblock>
    <parameter name="callback" byreference="false" type="{unknown}"/>
    <parameter name="onErrorState" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="thenWhileGood" start="60" end="62" abstract="false" final="false" static="false" visibility="public">
    <parameter name="callback" byreference="false" type="{unknown}"/>
  </method>
  <method name="thenIfErrored" start="64" end="66" abstract="false" final="false" static="false" visibility="public">
    <parameter name="callback" byreference="false" type="{unknown}"/>
  </method>
  <method name="thenAlways" start="68" end="70" abstract="false" final="false" static="false" visibility="public">
    <parameter name="callback" byreference="false" type="{unknown}"/>
  </method>
  <method name="lastErrorWasFatal" start="72" end="75" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="lastErrorWasMemoryExhaustion" start="77" end="81" abstract="false" final="false" static="false" visibility="protected"/>
  <member name="transtable" type="array" visibility="public" line="83"/>
  <method name="translateMemstring" start="89" end="93" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="memString" byreference="false" type="{unknown}"/>
  </method>
  <method name="handleFatalError" start="95" end="108" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="Bump up memory limit by an arbitrary 10% / 10MB (whichever is bigger) since we've run out" line="99"/>
    </inline>
  </method>
  <method name="execute" start="110" end="118" abstract="false" final="false" static="false" visibility="public"/>
  <method name="step" start="120" end="135" abstract="false" final="false" static="false" visibility="protected"/>
  <extender full="ErrorControlChainTest_Chain" namespace="" name="ErrorControlChainTest_Chain"/>
</class>
