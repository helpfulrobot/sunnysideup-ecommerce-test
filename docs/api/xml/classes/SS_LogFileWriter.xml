<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SS_LogFileWriter" namespace="" name="SS_LogFileWriter" abstract="false" final="false" start="17" end="65">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/dev" file="LogFileWriter.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/dev/LogFileWriter.php" size="1666" time="2015-03-14T10:39:31+13:00" unixtime="1426282771" sha1="7912a318e7b46bb621cd49d54917ff6f0ed92364" relative="framework/dev/LogFileWriter.php"/>
  <docblock>
    <description compact="Writes an error message to a file.">Note: You need to make sure your web server is able
to write to the file path that you specify to write
logs to.</description>
    <uses value="error_log() built-in PHP function."/>
    <see value="SS_Log for more information on using writers."/>
    <package value="framework"/>
    <subpackage value="dev"/>
  </docblock>
  <extends full="Zend_Log_Writer_Abstract" namespace="" name="Zend_Log_Writer_Abstract"/>
  <member name="path" type="{unknown}" visibility="protected" line="25">
    <docblock>
      <description compact="The path to the file that errors will be stored in.">For example, "/var/logs/silverstripe/errors.log".</description>
      <var type="string"/>
    </docblock>
  </member>
  <member name="messageType" type="{unknown}" visibility="protected" line="32">
    <docblock>
      <description compact="Message type to pass to error_log()"/>
      <see value="http://us3.php.net/manual/en/function.error-log.php"/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="extraHeaders" type="{unknown}" visibility="protected" line="39">
    <docblock>
      <description compact="Extra headers to pass to error_log()"/>
      <see value="http://us3.php.net/manual/en/function.error-log.php"/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="41" end="45" abstract="false" final="false" static="false" visibility="public">
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="messageType" byreference="false" type="integer" default="3"/>
    <parameter name="extraHeaders" byreference="false" type="string" default="''"/>
  </constructor>
  <method name="factory" start="47" end="49" abstract="false" final="false" static="true" visibility="public">
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="messageType" byreference="false" type="integer" default="3"/>
    <parameter name="extraHeaders" byreference="false" type="string" default="''"/>
  </method>
  <method name="_write" start="55" end="63" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Write the log message to the file path set in this writer."/>
    </docblock>
    <parameter name="event" byreference="false" type="{unknown}"/>
  </method>
  <parent full="Zend_Log_Writer_Abstract" namespace="" name="Zend_Log_Writer_Abstract">
    <member name="_filters" type="array" visibility="protected" line="39">
      <docblock>
        <description/>
        <var description="of Zend_Log_Filter_Interface" type="array"/>
      </docblock>
    </member>
    <member name="_formatter" type="{unknown}" visibility="protected" line="46">
      <docblock>
        <description compact="Formats the log message before writing."/>
        <var type="object">
          <type full="Zend_Log_Formatter_Interface" namespace="" name="Zend_Log_Formatter_Interface"/>
        </var>
      </docblock>
    </member>
    <method name="addFilter" start="54" end="68" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Add a filter specific to this writer."/>
        <param type="object" variable="$filter">
          <type full="Zend_Log_Filter_Interface" namespace="" name="Zend_Log_Filter_Interface"/>
        </param>
        <return type="object">
          <type full="Zend_Log_Writer_Abstract" namespace="" name="Zend_Log_Writer_Abstract"/>
        </return>
      </docblock>
      <parameter name="filter" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="@see Zend_Log_Exception" line="61"/>
      </inline>
    </method>
    <method name="write" start="76" end="86" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Log a message to this writer."/>
        <param description="log data event" type="array" variable="$event"/>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
      <parameter name="event" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="exception occurs on error" line="84"/>
      </inline>
    </method>
    <method name="setFormatter" start="94" end="98" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a new formatter for this writer"/>
        <param type="object" variable="$formatter">
          <type full="Zend_Log_Formatter_Interface" namespace="" name="Zend_Log_Formatter_Interface"/>
        </param>
        <return type="object">
          <type full="Zend_Log_Writer_Abstract" namespace="" name="Zend_Log_Writer_Abstract"/>
        </return>
      </docblock>
      <parameter name="formatter" byreference="false" type="object">
        <type full="\\Zend_Log_Formatter_Interface" namespace="\" name="Zend_Log_Formatter_Interface"/>
      </parameter>
    </method>
    <method name="shutdown" start="105" end="106" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Perform shutdown activites such as closing open resources"/>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
    </method>
    <method name="_write" start="114" end="114" abstract="true" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Write a message to the log."/>
        <param description="log data event" type="array" variable="$event"/>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
      <parameter name="event" byreference="false" type="{unknown}"/>
    </method>
    <method name="_parseConfig" start="123" end="137" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Validate and optionally convert the config to array"/>
        <param description="Zend_Config or Array" type="object" variable="$config">
          <type full="array|Zend_Config" namespace="" name="array|Zend_Config"/>
        </param>
        <return type="array"/>
        <throws type="object">
          <type full="Zend_Log_Exception" namespace="" name="Zend_Log_Exception"/>
        </throws>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
  </parent>
  <interface full="Zend_Log_FactoryInterface" namespace="" name="Zend_Log_FactoryInterface">
    <method name="factory" start="37" end="37" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Construct a Zend_Log driver"/>
        <param type="object" variable="$config">
          <type full="array|Zend_Config" namespace="" name="array|Zend_Config"/>
        </param>
        <return type="object">
          <type full="Zend_Log_FactoryInterface" namespace="" name="Zend_Log_FactoryInterface"/>
        </return>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
  </interface>
</class>
