<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="TinyMCE_Compressor" namespace="" name="TinyMCE_Compressor" abstract="false" final="false" start="46" end="326">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/tinymce" file="tiny_mce_gzip.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/tinymce/tiny_mce_gzip.php" size="10644" time="2015-03-14T10:42:28+13:00" unixtime="1426282948" sha1="081e2dd7c225bebf7d9b5526e87d1db3cec85f64" relative="framework/thirdparty/tinymce/tiny_mce_gzip.php"/>
  <docblock>
    <description compact="This class combines and compresses the TinyMCE core, plugins, themes and language packs into one disk cached gzipped request. It improves the loading speed of TinyMCE dramatically but still provides dynamic initialization.">Example of direct usage:
require_once("../jscripts/tiny_mce/tiny_mce_gzip.php");

// Renders script tag with compressed scripts
TinyMCE_Compressor::renderTag(array(
   "url" =&gt; "../jscripts/tiny_mce/tiny_mce_gzip.php",
   "plugins" =&gt; "pagebreak,style",
   "themes" =&gt; "advanced",
   "languages" =&gt; "en"
));</description>
  </docblock>
  <member name="files" type="{unknown}" visibility="private" line="47"/>
  <member name="defaultSettings" type="array" visibility="private" line="48"/>
  <constructor name="__construct" start="66" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs a new compressor instance."/>
      <param description="Name/value array with non-default settings for the compressor instance." type="object" variable="$settings">
        <type full="Array" namespace="" name="Array"/>
      </param>
    </docblock>
    <parameter name="settings" byreference="false" type="array"/>
  </constructor>
  <method name="addFile" start="78" end="82" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a file to the concatenation/compression process."/>
      <param description="Path to the file to include in the compressed package/output." type="object" variable="$path">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="file" byreference="false" type="{unknown}"/>
  </method>
  <method name="handleRequest" start="87" end="216" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Handles the incoming HTTP request and sends back a compressed script depending on settings and client support."/>
    </docblock>
    <inline>
      <comment value="Override settings with querystring params" line="93"/>
      <comment value="Add core" line="121"/>
      <comment value="Add plugins" line="126"/>
      <comment value="Add themes" line="134"/>
      <comment value="Add any specified files." line="142"/>
      <comment value="Process source files" line="145"/>
      <comment value="Generate hash for all files, and script path so multiple projects don't share the same cache" line="160"/>
      <comment value="Check if it supports gzip" line="163"/>
      <comment value="Is northon antivirus header" line="168"/>
      <comment value="Set cache file name" line="174"/>
      <comment value="Set headers" line="176"/>
      <comment value="Handle proxies" line="178"/>
      <comment value="Use cached file" line="185"/>
      <comment value="Set base URL for where tinymce is loaded from" line="191"/>
      <comment value="Load all tinymce script files into buffer" line="194"/>
      <comment value="$buffer .= &quot;\n//-FILE-$tinymceDir/$file (&quot;. strlen($fileContents) . &quot; bytes)\n&quot;;" line="198"/>
      <comment value="Mark all themes, plugins and languages as done" line="203"/>
      <comment value="Compress data" line="206"/>
      <comment value="Write cached file" line="210"/>
      <comment value="Stream contents to client" line="214"/>
    </inline>
  </method>
  <method name="renderTag" start="225" end="270" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Renders a script tag that loads the TinyMCE script."/>
      <param description="Name/value array with settings for the script tag." type="object" variable="$settings">
        <type full="Array" namespace="" name="Array"/>
      </param>
      <param description="The script tag is return instead of being output if true" type="object" variable="$return">
        <type full="Bool" namespace="" name="Bool"/>
      </param>
      <return description="the tag is returned if $return is true" type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
    <parameter name="tagSettings" byreference="false" type="{unknown}"/>
    <parameter name="return" byreference="false" type="{unknown}" default="false"/>
    <inline>
      <comment value="Add plugins" line="233"/>
      <comment value="Add themes" line="237"/>
      <comment value="Add languages" line="241"/>
      <comment value="Add disk_cache" line="245"/>
      <comment value="Add any explicitly specified files if the default settings have been overriden by the tag ones" line="249"/>
      <comment value="Specifying tag files will override (rather than merge with) any site-specific ones set in the" line="250"/>
      <comment xmlns="http://xml.phpdox.net/src" value="TinyMCE_Compressor object creation.  Note that since the parameter parser limits content to alphanumeric" line="251"/>
      <comment xmlns="http://xml.phpdox.net/src" value="only base filenames can be specified.  The file extension is assumed to be &quot;.js&quot; and the directory is" line="252"/>
      <comment xmlns="http://xml.phpdox.net/src" value="the TinyMCE root directory.  A typical use of this is to include a script which initiates the TinyMCE object." line="253"/>
      <comment value="Add src flag" line="259"/>
    </inline>
  </method>
  <method name="getParam" start="279" end="284" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns a sanitized query string parameter."/>
      <param description="Name of the query string param to get." type="object" variable="$name">
        <type full="String" namespace="" name="String"/>
      </param>
      <param description="Default value if the query string item shouldn't exist." type="object" variable="$default">
        <type full="String" namespace="" name="String"/>
      </param>
      <return description="Sanitized query string parameter value." type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="string" default="&quot;&quot;"/>
  </method>
  <method name="parseTime" start="292" end="309" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Parses the specified time format into seconds. Supports formats like 10h, 10d, 10m."/>
      <param description="Time format to convert into seconds." type="object" variable="$time">
        <type full="String" namespace="" name="String"/>
      </param>
      <return description="Number of seconds for the specified format." type="object">
        <type full="Int" namespace="" name="Int"/>
      </return>
    </docblock>
    <parameter name="time" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Hours" line="295"/>
      <comment value="Days" line="299"/>
      <comment value="Months" line="303"/>
      <comment value="Trim string" line="307"/>
    </inline>
  </method>
  <method name="getFileContents" start="317" end="325" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Returns the contents of the script file if it exists and removes the UTF-8 BOM header if it exists."/>
      <param description="File to load." type="object" variable="$file">
        <type full="String" namespace="" name="String"/>
      </param>
      <return description="File contents or empty string if it doesn't exist." type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
    <parameter name="file" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Remove UTF-8 BOM" line="320"/>
    </inline>
  </method>
</class>
