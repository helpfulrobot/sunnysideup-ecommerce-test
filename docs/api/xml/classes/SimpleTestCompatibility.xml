<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SimpleTestCompatibility" namespace="" name="SimpleTestCompatibility" abstract="false" final="false" start="13" end="172">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/simpletest" file="compatibility.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/simpletest/compatibility.php" size="5474" time="2015-03-14T10:41:58+13:00" unixtime="1426282918" sha1="774f90523de166f5b7636da33369a518239c01ad" relative="framework/thirdparty/simpletest/compatibility.php"/>
  <docblock>
    <description compact="Static methods for compatibility between different  PHP versions.">@package    SimpleTest</description>
  </docblock>
  <method name="copy" start="22" end="28" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Creates a copy whether in PHP5 or PHP4.">@param object $object     Thing to copy.
   @return object            A copy.
   @access public
   @static</description>
    </docblock>
    <parameter name="object" byreference="false" type="{unknown}"/>
  </method>
  <method name="isIdentical" start="40" end="48" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Identity test. Drops back to equality + types for PHP5    objects as the === operator counts as the    stronger reference constraint.">@param mixed $first    Test subject.
   @param mixed $second   Comparison object.
   @return boolean        True if identical.
   @access public
   @static</description>
    </docblock>
    <parameter name="first" byreference="false" type="{unknown}"/>
    <parameter name="second" byreference="false" type="{unknown}"/>
  </method>
  <method name="_isIdenticalType" start="58" end="77" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Recursive type test.">@param mixed $first    Test subject.
   @param mixed $second   Comparison object.
   @return boolean        True if same type.
   @access private
   @static</description>
    </docblock>
    <parameter name="first" byreference="false" type="{unknown}"/>
    <parameter name="second" byreference="false" type="{unknown}"/>
  </method>
  <method name="_isArrayOfIdenticalTypes" start="87" end="100" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Recursive type test for each element of an array.">@param mixed $first    Test subject.
   @param mixed $second   Comparison object.
   @return boolean        True if identical.
   @access private
   @static</description>
    </docblock>
    <parameter name="first" byreference="false" type="{unknown}"/>
    <parameter name="second" byreference="false" type="{unknown}"/>
  </method>
  <method name="isReference" start="110" end="126" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Test for two variables being aliases.">@param mixed $first    Test subject.
   @param mixed $second   Comparison object.
   @return boolean        True if same.
   @access public
   @static</description>
    </docblock>
    <parameter name="first" byreference="true" type="{unknown}"/>
    <parameter name="second" byreference="true" type="{unknown}"/>
  </method>
  <method name="isA" start="137" end="154" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Test to see if an object is a member of a    class hiearchy.">@param object $object    Object to test.
   @param string $class     Root name of hiearchy.
   @return boolean         True if class in hiearchy.
   @access public
   @static</description>
    </docblock>
    <parameter name="object" byreference="false" type="{unknown}"/>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <method name="setTimeout" start="163" end="171" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a socket timeout for each chunk.">@param resource $handle    Socket handle.
   @param integer $timeout    Limit in seconds.
   @access public
   @static</description>
    </docblock>
    <parameter name="handle" byreference="false" type="{unknown}"/>
    <parameter name="timeout" byreference="false" type="{unknown}"/>
  </method>
</class>
