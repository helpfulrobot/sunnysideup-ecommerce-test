<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Locale_Math" namespace="" name="Zend_Locale_Math" abstract="false" final="false" start="35" end="348">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/Zend/Locale" file="Math.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/Zend/Locale/Math.php" size="10988" time="2015-03-14T10:41:29+13:00" unixtime="1426282889" sha1="1689a6f81dc167db1aa36472b50243c76e4a523d" relative="framework/thirdparty/Zend/Locale/Math.php"/>
  <docblock>
    <description compact="Utility class for proxying math function to bcmath functions, if present, otherwise to PHP builtin math operators, with limited detection of overflow conditions.">Sampling of PHP environments and platforms suggests that at least 80% to 90% support bcmath.
Thus, this file should be as light as possible.</description>
    <category value="Zend"/>
    <package value="Zend_Locale"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <member name="_bcmathDisabled" type="{unknown}" default="false" visibility="public" line="38"/>
  <member name="add" type="array" visibility="public" line="40"/>
  <member name="sub" type="array" visibility="public" line="41"/>
  <member name="pow" type="array" visibility="public" line="42"/>
  <member name="mul" type="array" visibility="public" line="43"/>
  <member name="div" type="array" visibility="public" line="44"/>
  <member name="comp" type="array" visibility="public" line="45"/>
  <member name="sqrt" type="array" visibility="public" line="46"/>
  <member name="mod" type="array" visibility="public" line="47"/>
  <member name="scale" type="string" default="'bcscale'" visibility="public" line="48"/>
  <method name="isBcmathDisabled" start="50" end="53" abstract="false" final="false" static="true" visibility="public"/>
  <method name="round" start="65" end="136" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Surprisingly, the results of this implementation of round() prove better than the native PHP round(). For example, try:   round(639.795, 2);   round(267.835, 2);   round(0.302515, 5);   round(0.36665, 4); then try:   Zend_Locale_Math::round('639.795', 2);"/>
    </docblock>
    <parameter name="op1" byreference="false" type="{unknown}"/>
    <parameter name="precision" byreference="false" type="integer" default="0"/>
    <inline>
      <comment value="zero fill digits to the left of the decimal place" line="107"/>
    </inline>
  </method>
  <method name="floatalize" start="144" end="165" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Convert a scientific notation to float Additionally fixed a problem with PHP &lt;= 5.2.x with big integers"/>
      <param type="string" variable="$value"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="normalize" start="174" end="186" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Normalizes an input to standard english notation Fixes a problem of BCMath with setLocale which is PHP related"/>
      <param description="Value to normalize" type="integer" variable="$value"/>
      <return description="Normalized string without BCMath problems" type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="localize" start="195" end="203" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Localizes an input from standard english notation Fixes a problem of BCMath with setLocale which is PHP related"/>
      <param description="Value to normalize" type="integer" variable="$value"/>
      <return description="Normalized string without BCMath problems" type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="exponent" start="213" end="229" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Changes exponential numbers to plain string numbers Fixes a problem of BCMath with numbers containing exponents"/>
      <param description="Value to erase the exponent" type="integer" variable="$value"/>
      <param description="(Optional) Scale to use" type="integer" variable="$scale"/>
      <return type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="scale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="Add" start="239" end="245" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="BCAdd - fixes a problem of BCMath and exponential numbers"/>
      <param type="string" variable="$op1"/>
      <param type="string" variable="$op2"/>
      <param type="integer" variable="$scale"/>
      <return type="string"/>
    </docblock>
    <parameter name="op1" byreference="false" type="{unknown}"/>
    <parameter name="op2" byreference="false" type="{unknown}"/>
    <parameter name="scale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="Sub" start="255" end="260" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="BCSub - fixes a problem of BCMath and exponential numbers"/>
      <param type="string" variable="$op1"/>
      <param type="string" variable="$op2"/>
      <param type="integer" variable="$scale"/>
      <return type="string"/>
    </docblock>
    <parameter name="op1" byreference="false" type="{unknown}"/>
    <parameter name="op2" byreference="false" type="{unknown}"/>
    <parameter name="scale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="Pow" start="270" end="275" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="BCPow - fixes a problem of BCMath and exponential numbers"/>
      <param type="string" variable="$op1"/>
      <param type="string" variable="$op2"/>
      <param type="integer" variable="$scale"/>
      <return type="string"/>
    </docblock>
    <parameter name="op1" byreference="false" type="{unknown}"/>
    <parameter name="op2" byreference="false" type="{unknown}"/>
    <parameter name="scale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="Mul" start="285" end="290" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="BCMul - fixes a problem of BCMath and exponential numbers"/>
      <param type="string" variable="$op1"/>
      <param type="string" variable="$op2"/>
      <param type="integer" variable="$scale"/>
      <return type="string"/>
    </docblock>
    <parameter name="op1" byreference="false" type="{unknown}"/>
    <parameter name="op2" byreference="false" type="{unknown}"/>
    <parameter name="scale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="Div" start="300" end="305" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="BCDiv - fixes a problem of BCMath and exponential numbers"/>
      <param type="string" variable="$op1"/>
      <param type="string" variable="$op2"/>
      <param type="integer" variable="$scale"/>
      <return type="string"/>
    </docblock>
    <parameter name="op1" byreference="false" type="{unknown}"/>
    <parameter name="op2" byreference="false" type="{unknown}"/>
    <parameter name="scale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="Sqrt" start="314" end="318" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="BCSqrt - fixes a problem of BCMath and exponential numbers"/>
      <param type="string" variable="$op1"/>
      <param type="integer" variable="$scale"/>
      <return type="string"/>
    </docblock>
    <parameter name="op1" byreference="false" type="{unknown}"/>
    <parameter name="scale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="Mod" start="327" end="332" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="BCMod - fixes a problem of BCMath and exponential numbers"/>
      <param type="string" variable="$op1"/>
      <param type="string" variable="$op2"/>
      <return type="string"/>
    </docblock>
    <parameter name="op1" byreference="false" type="{unknown}"/>
    <parameter name="op2" byreference="false" type="{unknown}"/>
  </method>
  <method name="Comp" start="342" end="347" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="BCComp - fixes a problem of BCMath and exponential numbers"/>
      <param type="string" variable="$op1"/>
      <param type="string" variable="$op2"/>
      <param type="integer" variable="$scale"/>
      <return type="string"/>
    </docblock>
    <parameter name="op1" byreference="false" type="{unknown}"/>
    <parameter name="op2" byreference="false" type="{unknown}"/>
    <parameter name="scale" byreference="false" type="{unknown}" default="null"/>
  </method>
  <extender full="Zend_Locale_Math_PhpMath" namespace="" name="Zend_Locale_Math_PhpMath"/>
</class>
