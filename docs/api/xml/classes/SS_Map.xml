<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SS_Map" namespace="" name="SS_Map" abstract="false" final="false" start="9" end="263">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/model" file="Map.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/model/Map.php" size="9268" time="2015-03-14T10:40:57+13:00" unixtime="1426282857" sha1="7bd61f70989b178a7a618b5bc5ec522d2a33ab3e" relative="framework/model/Map.php"/>
  <docblock>
    <description compact="Creates a map from an SS_List by defining a key column and a value column."/>
    <package value="framework"/>
    <subpackage value="model"/>
  </docblock>
  <implements full="ArrayAccess" namespace="" name="ArrayAccess"/>
  <implements full="Countable" namespace="" name="Countable"/>
  <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <member name="list" type="{unknown}" visibility="protected" line="11"/>
  <member name="firstItems" type="array" visibility="protected" line="18">
    <docblock>
      <description/>
      <see value="SS_Map::unshift()"/>
      <var description="$firstItems" type="array"/>
    </docblock>
  </member>
  <member name="lastItems" type="array" visibility="protected" line="25">
    <docblock>
      <description/>
      <see value="SS_Map::push()"/>
      <var description="$lastItems" type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="34" end="38" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Construct a new map around an SS_list."/>
      <param description="list to build a map from" variable="$list" type="object">
        <type full="The" namespace="" name="The"/>
      </param>
      <param description="field to use as the key of each map entry" variable="$keyField" type="object">
        <type full="The" namespace="" name="The"/>
      </param>
      <param description="field to use as the value of each map entry" variable="$valueField" type="object">
        <type full="The" namespace="" name="The"/>
      </param>
    </docblock>
    <parameter name="list" byreference="false" type="object">
      <type full="\\SS_List" namespace="\" name="SS_List"/>
    </parameter>
    <parameter name="keyField" byreference="false" type="string" default="&quot;ID&quot;"/>
    <parameter name="valueField" byreference="false" type="string" default="&quot;Title&quot;"/>
  </constructor>
  <method name="setKeyField" start="45" end="47" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the key field for this map."/>
      <var description="$keyField" type="string"/>
    </docblock>
    <parameter name="keyField" byreference="false" type="{unknown}"/>
  </method>
  <method name="setValueField" start="54" end="56" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the value field for this map."/>
      <var description="$valueField" type="string"/>
    </docblock>
    <parameter name="valueField" byreference="false" type="{unknown}"/>
  </method>
  <method name="toArray" start="63" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return an array equivalent to this map."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="keys" start="78" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return all the keys of this map."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="values" start="87" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return all the values of this map."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="unshift" start="99" end="110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Unshift an item onto the start of the map.">Stores the value in addition to the <link xmlns="http://xml.phpdox.net/src" value="DataQuery"/> for the map.
</description>
      <var description="$key" type="string"/>
      <var description="$value" type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="push" start="118" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Pushes an item onto the end of the map."/>
      <var description="$key" type="string"/>
      <var description="$value" type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetExists" start="139" end="151" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <var description="$key" type="string"/>
      <return type="boolean"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetGet" start="158" end="176" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <var description="$key" type="string"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetSet" start="189" end="202" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a value in the map by a given key that has been set via {@link SS_Map::push()} or {@link SS_Map::unshift()}">Keys in the map cannot be set since these values are derived from a
<link xmlns="http://xml.phpdox.net/src" value="DataQuery"/> instance. In this case, use <link xmlns="http://xml.phpdox.net/src" value="SS_Map::toArray()"/>and manipulate the resulting array.
</description>
      <var description="$key" type="string"/>
      <var description="$value" type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetUnset" start="215" end="232" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes a value in the map by a given key which has been added to the map via {@link SS_Map::push()} or {@link SS_Map::unshift()}">Keys in the map cannot be unset since these values are derived from a
<link xmlns="http://xml.phpdox.net/src" value="DataQuery"/> instance. In this case, use <link xmlns="http://xml.phpdox.net/src" value="SS_Map::toArray()"/>and manipulate the resulting array.
</description>
      <var description="$key" type="string"/>
      <var description="$value" type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="getIterator" start="242" end="250" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an SS_Map_Iterator instance for iterating over the complete set of items in the map.">Satisfies the IteratorAggreagte interface.</description>
      <return type="object">
        <type full="SS_Map_Iterator" namespace="" name="SS_Map_Iterator"/>
      </return>
    </docblock>
  </method>
  <method name="count" start="258" end="262" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the count of items in the list including the additional items set through {@link SS_Map::push()} and {@link SS_Map::unshift}."/>
      <return type="int"/>
    </docblock>
  </method>
  <interface full="ArrayAccess" namespace="" name="ArrayAccess">
    <method name="offsetExists" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Whether a offset exists">Whether or not an offset exists.</description>
      <return type="boolean"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetGet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Offset to retrieve">Returns the value at specified offset.</description>
      <return type="mixed"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetSet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Offset to set"/>
      <return type="void"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetUnset" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Offset to unset">Unsets an offset.</description>
      <return type="void"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  </interface>
  <interface full="Countable" namespace="" name="Countable">
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Count elements of an object"/>
      <return type="int"/>
    </docblock>
  </method>
  </interface>
  <interface full="IteratorAggregate" namespace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </interface>
</class>
