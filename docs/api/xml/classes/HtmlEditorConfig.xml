<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="HtmlEditorConfig" namespace="" name="HtmlEditorConfig" abstract="false" final="false" start="14" end="328">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/forms" file="HtmlEditorConfig.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/forms/HtmlEditorConfig.php" size="10344" time="2015-03-14T10:40:46+13:00" unixtime="1426282846" sha1="5308b046100d63ffba0b9f13805791cd9bb9eef1" relative="framework/forms/HtmlEditorConfig.php"/>
  <docblock>
    <description compact="A PHP version of TinyMCE's configuration, to allow various parameters to be configured on a site or section basis">There can be multiple HtmlEditorConfig's, which should always be created / accessed using HtmlEditorConfig::get.
You can then set the currently active config using set_active. Whichever config is active when
HtmlEditorField#Field is called wins.</description>
    <author value="&quot;Hamish Friedlander&quot; &lt;hamish@silverstripe.com&gt;"/>
    <package value="forms"/>
    <subpackage value="fields-formattedinput"/>
  </docblock>
  <member name="configs" type="array" visibility="private" line="16"/>
  <member name="current" type="{unknown}" default="null" visibility="private" line="18"/>
  <method name="get" start="28" end="31" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get the HtmlEditorConfig object for the given identifier. This is a correct way to get an HtmlEditorConfig instance - do not call 'new'"/>
      <param description="- the identifier for the config set" variable="$identifier" type="string"/>
      <return description="- the configuration object. This will be created if it does not yet exist for that" type="object">identifier<type full="HtmlEditorConfig" namespace="" name="HtmlEditorConfig"/></return>
    </docblock>
    <parameter name="identifier" byreference="false" type="string" default="'default'"/>
  </method>
  <method name="set_active" start="38" end="40" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Set the currently active configuration object"/>
      <param description="- the identifier for the config set" variable="$identifier" type="string"/>
      <return type="object">
        <type full="null" namespace="" name="null"/>
      </return>
    </docblock>
    <parameter name="identifier" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="get_active" start="46" end="49" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get the currently active configuration object"/>
      <return description="- the active configuration object" type="object">
        <type full="HtmlEditorConfig" namespace="" name="HtmlEditorConfig"/>
      </return>
    </docblock>
  </method>
  <method name="get_available_configs_map" start="56" end="64" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get the available configurations as a map of friendly_name to configuration name."/>
      <return type="array"/>
    </docblock>
  </method>
  <member name="settings" type="array" visibility="protected" line="69">
    <docblock>
      <description compact="Holder for all TinyMCE settings _except_ plugins and buttons"/>
    </docblock>
  </member>
  <member name="plugins" type="array" visibility="protected" line="96">
    <docblock>
      <description compact="Holder list of enabled plugins"/>
    </docblock>
  </member>
  <member name="buttons" type="array" visibility="protected" line="106">
    <docblock>
      <description compact="Holder list of buttons, organised by line"/>
    </docblock>
  </member>
  <method name="getOption" start="120" end="122" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the current value of an option"/>
      <param description="- The key of the option to get" variable="$k" type="string"/>
      <return description="- The value of the specified option" type="mixed"/>
    </docblock>
    <parameter name="k" byreference="false" type="{unknown}"/>
  </method>
  <method name="setOption" start="130" end="133" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the value of one option"/>
      <param description="- The key of the option to set" variable="$k" type="string"/>
      <param description="- The value of the option to set" variable="$v" type="mixed"/>
      <return type="object">
        <type full="HtmlEditorConfig" namespace="" name="HtmlEditorConfig"/>
      </return>
    </docblock>
    <parameter name="k" byreference="false" type="{unknown}"/>
    <parameter name="v" byreference="false" type="{unknown}"/>
  </method>
  <method name="setOptions" start="140" end="145" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set multiple options"/>
      <param description="- The options to set, as keys and values of the array" variable="$a" type="array"/>
      <return type="object">
        <type full="HtmlEditorConfig" namespace="" name="HtmlEditorConfig"/>
      </return>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
  </method>
  <method name="enablePlugins" start="158" end="170" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Enable one or several plugins. Will maintain unique list if already enabled plugin is re-passed. If passed in as a map of plugin-name to path, the plugin will be loaded by tinymce.PluginManager.load() instead of through tinyMCE.init().">Keep in mind that these externals plugins require a dash-prefix in their name.</description>
      <see value="http://wiki.moxiecode.com/index.php/TinyMCE:API/tinymce.PluginManager/load"/>
      <param description="[0..] a string, or several strings, or a single array of strings - The plugins to enable" type="object">
        <type full="String" namespace="" name="String"/>
      </param>
      <return type="object">
        <type full="HtmlEditorConfig" namespace="" name="HtmlEditorConfig"/>
      </return>
    </docblock>
    <inline>
      <comment value="if plugins are passed without a path" line="162"/>
    </inline>
  </method>
  <method name="disablePlugins" start="177" end="187" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Enable one or several plugins. Will properly handle being passed a plugin that is already disabled"/>
      <param description="[0..] a string, or several strings, or a single array of strings - The plugins to disable" type="object">
        <type full="String" namespace="" name="String"/>
      </param>
      <return type="object">
        <type full="HtmlEditorConfig" namespace="" name="HtmlEditorConfig"/>
      </return>
    </docblock>
  </method>
  <method name="getPlugins" start="192" end="194" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Array" namespace="" name="Array"/>
      </return>
    </docblock>
  </method>
  <method name="setButtonsForLine" start="204" end="214" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Totally re-set the buttons on a given line"/>
      <param description="from 1..3 - The line number to redefine" type="integer"/>
      <param description="a string or several strings, or a single array of strings - The button names to make this line" type="string">contain</param>
      <return type="object">
        <type full="HtmlEditorConfig" namespace="" name="HtmlEditorConfig"/>
      </return>
    </docblock>
  </method>
  <method name="addButtonsToLine" start="223" end="232" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add buttons to the end of a line"/>
      <param description="from 1..3" type="integer"/>
      <param description="a string, or several strings, or a single array of strings - The button names to add to the end" type="string">of this line</param>
      <return type="object">
        <type full="HtmlEditorConfig" namespace="" name="HtmlEditorConfig"/>
      </return>
    </docblock>
  </method>
  <method name="modifyButtons" start="244" end="253" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Internal function for adding and removing buttons related to another button"/>
      <param description="- the name of the button to modify" variable="$name" type="string"/>
      <param description="- the offset relative to that button to perform an array_splice at - 0 for before $name," variable="$offset" type="integer">1 for after</param>
      <param description="- the number of buttons to remove at the position given by index(string) + offset" variable="$del" type="integer"/>
      <param description="- an array or single item to insert at the position given by index(string) + offset," variable="$add" type="mixed">or null for no insertion</param>
      <return description="- true if $name matched a button, false otherwise" type="boolean"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="offset" byreference="false" type="{unknown}"/>
    <parameter name="del" byreference="false" type="integer" default="0"/>
    <parameter name="add" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="insertButtonsBefore" start="262" end="266" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Insert buttons before the first occurance of another button"/>
      <param description="- the name of the button to insert other buttons before" type="string"/>
      <param description="a string, or several strings, or a single array of strings - the button names to insert before" type="string">that button</param>
      <return description="- true if insertion occured, false if it did not (because the given button name was not found)" type="boolean"/>
    </docblock>
  </method>
  <method name="insertButtonsAfter" start="275" end="279" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Insert buttons after the first occurance of another button"/>
      <param description="- the name of the button to insert other buttons after" type="string"/>
      <param description="a string, or several strings, or a single array of strings - the button names to insert after" type="string">that button</param>
      <return description="- true if insertion occured, false if it did not (because the given button name was not found)" type="boolean"/>
    </docblock>
  </method>
  <method name="removeButtons" start="286" end="291" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove the first occurance of buttons"/>
      <param description="one or more strings - the name of the buttons to remove" type="string"/>
      <return type="object">
        <type full="null" namespace="" name="null"/>
      </return>
    </docblock>
  </method>
  <method name="generateJS" start="297" end="327" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Generate the javascript that will set tinyMCE's configuration to that of the current settings of this object"/>
      <return description="- the javascript" type="string"/>
    </docblock>
    <inline>
      <comment value="plugins" line="300"/>
    </inline>
  </method>
</class>
