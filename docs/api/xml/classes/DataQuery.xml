<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="DataQuery" namespace="" name="DataQuery" abstract="false" final="false" start="14" end="786">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/model" file="DataQuery.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/model/DataQuery.php" size="25273" time="2015-03-14T10:40:57+13:00" unixtime="1426282857" sha1="c02acf93be83de90bb00b277244c3808661316a6" relative="framework/model/DataQuery.php"/>
  <docblock>
    <description compact="An object representing a query of data from the DataObject's supporting database.">Acts as a wrapper over <link xmlns="http://xml.phpdox.net/src" value="SQLQuery"/> and performs all of the query generation.
Used extensively by <link xmlns="http://xml.phpdox.net/src" value="DataList"/>.
Unlike DataList, modifiers on DataQuery modify the object rather than returning a clone.
DataList is immutable, DataQuery is mutable.
</description>
    <subpackage value="model"/>
    <package value="framework"/>
  </docblock>
  <member name="dataClass" type="{unknown}" visibility="protected" line="19">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="query" type="{unknown}" visibility="protected" line="24">
    <docblock>
      <description/>
      <var type="object">
        <type full="SQLQuery" namespace="" name="SQLQuery"/>
      </var>
    </docblock>
  </member>
  <member name="collidingFields" type="array" visibility="protected" line="29">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="queriedColumns" type="{unknown}" default="null" visibility="private" line="31"/>
  <member name="queryFinalised" type="{unknown}" default="false" visibility="private" line="36">
    <docblock>
      <description/>
      <var type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </var>
    </docblock>
  </member>
  <member name="querySubclasses" type="{unknown}" default="true" visibility="protected" line="39"/>
  <member name="filterByClassName" type="{unknown}" default="true" visibility="protected" line="41"/>
  <constructor name="__construct" start="48" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new DataQuery."/>
      <param description="The name of the DataObject class that you wish to query" type="object">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="dataClass" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="__clone" start="56" end="58" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clone this object"/>
    </docblock>
  </method>
  <method name="dataClass" start="63" end="65" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the {@link DataObject} class that is being queried."/>
    </docblock>
  </method>
  <method name="query" start="71" end="73" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the {@link SQLQuery} object that represents the current query; note that it will be a clone of the object."/>
    </docblock>
  </method>
  <method name="removeFilterOn" start="79" end="98" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove a filter from the query"/>
    </docblock>
    <parameter name="fieldExpression" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="set the entire where clause back, but clear the original one first" line="90"/>
    </inline>
  </method>
  <method name="initialiseQuery" start="103" end="134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set up the simplest initial query"/>
    </docblock>
    <inline>
      <comment value="Get the tables to join to." line="104"/>
      <comment value="Don't get any subclass tables - let lazy loading do that." line="105"/>
      <comment value="Error checking" line="108"/>
      <comment value="Build our intial query" line="122"/>
    </inline>
  </method>
  <method name="setQueriedColumns" start="136" end="138" abstract="false" final="false" static="false" visibility="public">
    <parameter name="queriedColumns" byreference="false" type="{unknown}"/>
  </method>
  <method name="getFinalisedQuery" start="145" end="245" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ensure that the query is ready to execute."/>
      <return type="object">
        <type full="SQLQuery" namespace="" name="SQLQuery"/>
      </return>
    </docblock>
    <parameter name="queriedColumns" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="Generate the list of tables to iterate over and the list of columns required" line="154"/>
      <comment value="by any existing where clauses. This second step is skipped if we're fetching" line="155"/>
      <comment value="the whole dataobject as any required columns will get selected regardless." line="156"/>
      <comment value="Specifying certain columns allows joining of child tables" line="158"/>
      <comment value="Check for just the column, in the form '&quot;Column&quot; = ?' and the form '&quot;Table&quot;.&quot;Column&quot;' = ?" line="162"/>
      <comment value="Iterate over the tables and check what we need to select from them. If any selects are made (or the table is" line="175"/>
      <comment value="required for a select)" line="176"/>
      <comment value="Determine explicit columns to select" line="179"/>
      <comment value="Restrict queried columns to that on the selected table" line="182"/>
      <comment value="If this is a subclass without any explicitly requested columns, omit this from the query" line="187"/>
      <comment value="Select necessary columns (unless an explicitly empty array)" line="190"/>
      <comment value="Join if not the base table" line="195"/>
      <comment value="Resolve colliding fields" line="201"/>
      <comment value="If querying the base class, don't bother filtering on class name" line="222"/>
      <comment value="Get the ClassName values to filter to" line="224"/>
      <todo value="Versioned, Translatable, SiteTreeSubsites, etc, could probably be better implemented as subclasses" line="236"/>
      <comment value="of DataQuery" line="237"/>
    </inline>
  </method>
  <method name="ensureSelectContainsOrderbyColumns" start="253" end="321" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Ensure that if a query has an order by clause, those columns are present in the select."/>
      <param type="object" variable="$query">
        <type full="SQLQuery" namespace="" name="SQLQuery"/>
      </param>
      <return type="object">
        <type full="null" namespace="" name="null"/>
      </return>
    </docblock>
    <parameter name="query" byreference="false" type="{unknown}"/>
    <parameter name="originalSelect" byreference="false" type="array"/>
    <inline>
      <comment value="don't touch functions in the ORDER BY or public function calls" line="263"/>
      <comment value="selected as fields" line="264"/>
      <comment value="Pull through SortColumn references from the originalSelect variables" line="270"/>
      <comment value="database_fields() doesn't return ID, so we need to" line="282"/>
      <comment value="manually add it here" line="283"/>
      <comment value="remove original sort" line="292"/>
      <comment value="add new columns sort" line="295"/>
      <comment value="To-do: Remove this if block once SQLQuery::$select has been refactored to store getSelect()" line="298"/>
      <comment value="format internally; then this check can be part of selectField()" line="299"/>
    </inline>
  </method>
  <method name="execute" start="326" end="328" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Execute the query and return the result as {@link Query} object."/>
    </docblock>
  </method>
  <method name="sql" start="333" end="335" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return this query's SQL"/>
    </docblock>
  </method>
  <method name="count" start="341" end="344" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the number of records in this query.">Note that this will issue a separate SELECT COUNT() query.</description>
    </docblock>
  </method>
  <method name="max" start="351" end="353" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the maximum value of the given field in this DataList"/>
      <param description="Unquoted database column name (will be escaped automatically)" type="object" variable="$field">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="field" byreference="false" type="{unknown}"/>
  </method>
  <method name="min" start="360" end="362" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the minimum value of the given field in this DataList"/>
      <param description="Unquoted database column name (will be escaped automatically)" type="object" variable="$field">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="field" byreference="false" type="{unknown}"/>
  </method>
  <method name="avg" start="369" end="371" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the average value of the given field in this DataList"/>
      <param description="Unquoted database column name (will be escaped automatically)" type="object" variable="$field">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="field" byreference="false" type="{unknown}"/>
  </method>
  <method name="sum" start="378" end="380" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the sum of the values of the given field in this DataList"/>
      <param description="Unquoted database column name (will be escaped automatically)" type="object" variable="$field">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="field" byreference="false" type="{unknown}"/>
  </method>
  <method name="aggregate" start="385" end="387" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Runs a raw aggregate expression.  Please handle escaping yourself"/>
    </docblock>
    <parameter name="expression" byreference="false" type="{unknown}"/>
  </method>
  <method name="firstRow" start="393" end="395" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the first row that would be returned by this full DataQuery Note that this will issue a separate SELECT ... LIMIT 1 query."/>
    </docblock>
  </method>
  <method name="lastRow" start="401" end="403" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the last row that would be returned by this full DataQuery Note that this will issue a separate SELECT ... LIMIT query."/>
    </docblock>
  </method>
  <method name="selectColumnsFromTable" start="408" end="430" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Update the SELECT clause of the query with the columns from the given table"/>
    </docblock>
    <parameter name="query" byreference="true" type="object">
      <type full="\\SQLQuery" namespace="\" name="SQLQuery"/>
    </parameter>
    <parameter name="tableClass" byreference="false" type="{unknown}"/>
    <parameter name="columns" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="Add SQL for multi-value fields" line="409"/>
      <comment value="Update $collidingFields if necessary" line="414"/>
    </inline>
  </method>
  <method name="groupby" start="437" end="440" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Append a GROUP BY clause to this query."/>
      <param description="Escaped SQL statement" type="object" variable="$groupby">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="groupby" byreference="false" type="{unknown}"/>
  </method>
  <method name="having" start="447" end="450" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Append a HAVING clause to this query."/>
      <param description="Escaped SQL statement" type="object" variable="$having">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="having" byreference="false" type="{unknown}"/>
  </method>
  <method name="disjunctiveGroup" start="459" end="461" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a disjunctive subgroup.">That is a subgroup joined by OR</description>
      <return type="object">
        <type full="DataQuery_SubGroup" namespace="" name="DataQuery_SubGroup"/>
      </return>
    </docblock>
  </method>
  <method name="conjunctiveGroup" start="470" end="472" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a conjunctive subgroup">That is a subgroup joined by AND</description>
      <return type="object">
        <type full="DataQuery_SubGroup" namespace="" name="DataQuery_SubGroup"/>
      </return>
    </docblock>
  </method>
  <method name="where" start="488" end="493" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Append a WHERE clause to this query.">There are two different ways of doing this:

&lt;code&gt;
 // the entire predicate as a single string
 $query-&gt;where("\"Column\" = 'Value'");

 // multiple predicates as an array
 $query-&gt;where(array("\"Column\" = 'Value'", "\"Column\" != 'Value'"));
&lt;/code&gt;</description>
      <param description="Predicate(s) to set, as escaped SQL statements." type="object" variable="$where">
        <type full="string|array" namespace="" name="string|array"/>
      </param>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
  </method>
  <method name="whereAny" start="504" end="509" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Append a WHERE with OR."/>
      <example value="$dataQuery-&gt;whereAny(array(&quot;\&quot;Monkey\&quot; = 'Chimp'&quot;, &quot;\&quot;Color\&quot; = 'Brown'&quot;));"/>
      <see value="where()"/>
      <param description="Escaped SQL statement." type="array" variable="$filter"/>
      <return type="object">
        <type full="DataQuery" namespace="" name="DataQuery"/>
      </return>
    </docblock>
    <parameter name="filter" byreference="false" type="{unknown}"/>
  </method>
  <method name="sort" start="521" end="529" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the ORDER BY clause of this query"/>
      <see value="SQLQuery::orderby()"/>
      <param description="Column to sort on (escaped SQL statement)" type="object" variable="$sort">
        <type full="String" namespace="" name="String"/>
      </param>
      <param description="Direction (&quot;ASC&quot; or &quot;DESC&quot;, escaped SQL statement)" type="object" variable="$direction">
        <type full="String" namespace="" name="String"/>
      </param>
      <param description="Clear existing values" type="object" variable="$clear">
        <type full="Boolean" namespace="" name="Boolean"/>
      </param>
      <return type="object">
        <type full="DataQuery" namespace="" name="DataQuery"/>
      </return>
    </docblock>
    <parameter name="sort" byreference="false" type="{unknown}" default="null"/>
    <parameter name="direction" byreference="false" type="{unknown}" default="null"/>
    <parameter name="clear" byreference="false" type="{unknown}" default="true"/>
  </method>
  <method name="reverseSort" start="536" end="539" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Reverse order by clause"/>
      <return type="object">
        <type full="DataQuery" namespace="" name="DataQuery"/>
      </return>
    </docblock>
  </method>
  <method name="limit" start="547" end="550" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the limit of this query."/>
      <param type="int" variable="$limit"/>
      <param type="int" variable="$offset"/>
    </docblock>
    <parameter name="limit" byreference="false" type="{unknown}"/>
    <parameter name="offset" byreference="false" type="integer" default="0"/>
  </method>
  <method name="distinct" start="558" end="561" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set whether this query should be distinct or not."/>
      <param type="object" variable="$value">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="object">
        <type full="DataQuery" namespace="" name="DataQuery"/>
      </return>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="innerJoin" start="570" end="575" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add an INNER JOIN clause to this query."/>
      <param description="The unquoted table name to join to." type="object" variable="$table">
        <type full="String" namespace="" name="String"/>
      </param>
      <param description="The filter for the join (escaped SQL statement)" type="object" variable="$onClause">
        <type full="String" namespace="" name="String"/>
      </param>
      <param description="An optional alias name (unquoted)" type="object" variable="$alias">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="onClause" byreference="false" type="{unknown}"/>
    <parameter name="alias" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="leftJoin" start="584" end="589" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add a LEFT JOIN clause to this query."/>
      <param description="The unquoted table to join to." type="object" variable="$table">
        <type full="String" namespace="" name="String"/>
      </param>
      <param description="The filter for the join (escaped SQL statement)." type="object" variable="$onClause">
        <type full="String" namespace="" name="String"/>
      </param>
      <param description="An optional alias name (unquoted)" type="object" variable="$alias">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="onClause" byreference="false" type="{unknown}"/>
    <parameter name="alias" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="applyRelation" start="599" end="672" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Traverse the relationship fields, and add the table mappings to the query object state. This has to be called in any overloaded {@link SearchFilter-&gt;apply()} methods manually."/>
      <param description="The array/dot-syntax relation to follow" type="object" variable="$relation">
        <type full="String|array" namespace="" name="String|array"/>
      </param>
      <return description="model class of the related item" type="object">
        <type full="The" namespace="" name="The"/>
      </return>
    </docblock>
    <parameter name="relation" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="NO-OP" line="600"/>
      <comment value="add join clause to the component's ancestry classes so that the search filter could search on" line="616"/>
      <comment xmlns="http://xml.phpdox.net/src" value="its ancestor fields." line="617"/>
    </inline>
  </method>
  <method name="subtract" start="680" end="689" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes the result of query from this query."/>
      <param type="object" variable="$subtractQuery">
        <type full="DataQuery" namespace="" name="DataQuery"/>
      </param>
      <param type="string" variable="$field"/>
    </docblock>
    <parameter name="subtractQuery" byreference="false" type="object">
      <type full="\\DataQuery" namespace="\" name="DataQuery"/>
    </parameter>
    <parameter name="field" byreference="false" type="string" default="'ID'"/>
  </method>
  <method name="selectFromTable" start="697" end="705" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Select the given fields from the given table."/>
      <param description="Unquoted table name (will be escaped automatically)" type="object" variable="$table">
        <type full="String" namespace="" name="String"/>
      </param>
      <param description="Database column names (will be escaped automatically)" type="object" variable="$fields">
        <type full="Array" namespace="" name="Array"/>
      </param>
    </docblock>
    <parameter name="table" byreference="false" type="{unknown}"/>
    <parameter name="fields" byreference="false" type="{unknown}"/>
  </method>
  <method name="column" start="713" end="722" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Query the given field column from the database and return as an array."/>
      <param description="See {@link expressionForField()}." type="string" variable="$field"/>
      <return description="List of column values for the specified column" type="array"/>
    </docblock>
    <parameter name="field" byreference="false" type="string" default="'ID'"/>
  </method>
  <method name="expressionForField" start="729" end="743" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <param description="Select statement identifier, either the unquoted column name," type="object" variable="$field">the full composite SQL statement, or the alias set through <link xmlns="http://xml.phpdox.net/src" value="SQLQuery-&gt;selectField()"/>.
<type full="String" namespace="" name="String"/></param>
      <return description="The expression used to query this field via this DataQuery" type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
    <parameter name="field" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Prepare query object for selecting this field" line="731"/>
      <comment value="Allow query to define the expression for this field" line="734"/>
      <comment value="Special case for ID, if not provided" line="738"/>
    </inline>
  </method>
  <method name="selectField" start="751" end="753" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Select the given field expressions."/>
      <param description="The field to select (escaped SQL statement)" variable="$fieldExpression" type="object">
        <type full="String" namespace="" name="String"/>
      </param>
      <param description="The alias of that field (escaped SQL statement)" variable="$alias" type="object">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="fieldExpression" byreference="false" type="{unknown}"/>
    <parameter name="alias" byreference="false" type="{unknown}" default="null"/>
  </method>
  <member name="queryParams" type="{unknown}" visibility="private" line="761">
    <docblock>
      <description compact="An arbitrary store of query parameters that can be used by decorators."/>
      <todo value="This will probably be made obsolete if we have subclasses of DataList and/or DataQuery."/>
    </docblock>
  </member>
  <method name="setQueryParam" start="767" end="769" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set an arbitrary query parameter, that can be used by decorators to add additional meta-data to the query.">It's expected that the $key will be namespaced, e.g, 'Versioned.stage' instead of just 'stage'.</description>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="getQueryParam" start="774" end="777" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set an arbitrary query parameter, that can be used by decorators to add additional meta-data to the query."/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="getQueryParams" start="783" end="785" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns all query parameters"/>
      <return description="query parameters array" type="array"/>
    </docblock>
  </method>
  <extender full="DataQuery_SubGroup" namespace="" name="DataQuery_SubGroup"/>
</class>
