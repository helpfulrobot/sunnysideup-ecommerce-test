<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SS_ClassManifest" namespace="" name="SS_ClassManifest" abstract="false" final="false" start="15" end="474">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/core/manifest" file="ClassManifest.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/core/manifest/ClassManifest.php" size="12810" time="2015-03-14T10:39:29+13:00" unixtime="1426282769" sha1="6837e6bc0ed8827d767d76af613f222aeca46745" relative="framework/core/manifest/ClassManifest.php"/>
  <docblock>
    <description compact="A utility class which builds a manifest of all classes, interfaces and some additional items present in a directory, and caches it.">It finds the following information:
  - Class and interface names and paths.
  - All direct and indirect descendants of a class.
  - All implementors of an interface.
  - All module configuration files.</description>
    <package value="framework"/>
    <subpackage value="manifest"/>
  </docblock>
  <constant name="CONF_FILE" value="'_config.php'"/>
  <constant name="CONF_DIR" value="'_config'"/>
  <member name="base" type="{unknown}" visibility="protected" line="20"/>
  <member name="tests" type="{unknown}" visibility="protected" line="21"/>
  <member name="cache" type="{unknown}" visibility="protected" line="22"/>
  <member name="cacheKey" type="{unknown}" visibility="protected" line="23"/>
  <member name="classes" type="array" visibility="protected" line="25"/>
  <member name="roots" type="array" visibility="protected" line="26"/>
  <member name="children" type="array" visibility="protected" line="27"/>
  <member name="descendants" type="array" visibility="protected" line="28"/>
  <member name="interfaces" type="array" visibility="protected" line="29"/>
  <member name="implementors" type="array" visibility="protected" line="30"/>
  <member name="configs" type="array" visibility="protected" line="31"/>
  <member name="configDirs" type="array" visibility="protected" line="32"/>
  <method name="get_class_parser" start="37" end="56" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="TokenisedRegularExpression" namespace="" name="TokenisedRegularExpression"/>
      </return>
    </docblock>
  </method>
  <method name="get_namespaced_class_parser" start="61" end="82" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="TokenisedRegularExpression" namespace="" name="TokenisedRegularExpression"/>
      </return>
    </docblock>
  </method>
  <method name="get_namespace_parser" start="87" end="96" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="TokenisedRegularExpression" namespace="" name="TokenisedRegularExpression"/>
      </return>
    </docblock>
  </method>
  <method name="get_interface_parser" start="101" end="107" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="TokenisedRegularExpression" namespace="" name="TokenisedRegularExpression"/>
      </return>
    </docblock>
  </method>
  <constructor name="__construct" start="118" end="137" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs and initialises a new class manifest, either loading the data from the cache or re-scanning for classes."/>
      <param description="The manifest base path." type="string" variable="$base"/>
      <param description="Include the contents of &quot;tests&quot; directories." type="object" variable="$includeTests">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param description="Force the manifest to be regenerated." type="object" variable="$forceRegen">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param description="If the manifest is regenerated, cache it." type="object" variable="$cache">
        <type full="bool" namespace="" name="bool"/>
      </param>
    </docblock>
    <parameter name="base" byreference="false" type="{unknown}"/>
    <parameter name="includeTests" byreference="false" type="{unknown}" default="false"/>
    <parameter name="forceRegen" byreference="false" type="{unknown}" default="false"/>
    <parameter name="cache" byreference="false" type="{unknown}" default="true"/>
  </constructor>
  <method name="getItemPath" start="146" end="154" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the file path to a class or interface if it exists in the manifest."/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="getClasses" start="161" end="163" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a map of lowercased class names to file paths."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getClassNames" start="170" end="172" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a lowercase array of all the class names in the manifest."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getDescendants" start="179" end="181" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of all the descendant data."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getDescendantsOf" start="190" end="202" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array containing all the descendants (direct and indirect) of a class."/>
      <param type="object" variable="$class">
        <type full="string|object" namespace="" name="string|object"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <method name="getInterfaces" start="209" end="211" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a map of lowercased interface names to file locations."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getImplementors" start="219" end="221" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a map of lowercased interface names to the classes the implement them."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getImplementorsOf" start="230" end="238" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array containing the class names that implement a certain interface."/>
      <param type="string" variable="$interface"/>
      <return type="array"/>
    </docblock>
    <parameter name="interface" byreference="false" type="{unknown}"/>
  </method>
  <method name="getConfigs" start="245" end="247" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of paths to module config files."/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getModules" start="257" end="274" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array of module names mapped to their paths.">"Modules" in SilverStripe are simply directories with a _config.php
file.</description>
      <return type="array"/>
    </docblock>
  </method>
  <method name="setDefaults" start="279" end="283" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Used to set up files that we want to exclude from parsing for performance reasons."/>
    </docblock>
  </method>
  <method name="regenerate" start="290" end="328" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Completely regenerates the manifest file."/>
      <param description="Cache the result." type="object" variable="$cache">
        <type full="bool" namespace="" name="bool"/>
      </param>
    </docblock>
    <parameter name="cache" byreference="false" type="{unknown}" default="true"/>
    <inline>
      <comment value="Reset the manifest so stale info doesn't cause errors." line="296"/>
    </inline>
  </method>
  <method name="handleDir" start="330" end="334" abstract="false" final="false" static="false" visibility="public">
    <parameter name="basename" byreference="false" type="{unknown}"/>
    <parameter name="pathname" byreference="false" type="{unknown}"/>
    <parameter name="depth" byreference="false" type="{unknown}"/>
  </method>
  <method name="handleFile" start="336" end="444" abstract="false" final="false" static="false" visibility="public">
    <parameter name="basename" byreference="false" type="{unknown}"/>
    <parameter name="pathname" byreference="false" type="{unknown}"/>
    <parameter name="depth" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="The results of individual file parses are cached, since only a few" line="346"/>
      <comment value="files will have changed and TokenisedRegularExpression is quite" line="347"/>
      <comment value="slow. A combination of the file name and file contents hash are used," line="348"/>
      <comment value="since just using the datetime lead to problems with upgrading." line="349"/>
    </inline>
  </method>
  <method name="coalesceDescendants" start="453" end="472" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Recursively coalesces direct child information into full descendant information."/>
      <param type="string" variable="$class"/>
      <return type="array"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
</class>
