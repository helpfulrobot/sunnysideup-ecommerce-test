<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="ClassInfo" namespace="" name="ClassInfo" abstract="false" final="false" start="13" end="289">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/core" file="ClassInfo.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/core/ClassInfo.php" size="8100" time="2015-03-14T10:39:29+13:00" unixtime="1426282769" sha1="204ea48da32daf670e6a45e05f99e02dd25edd50" relative="framework/core/ClassInfo.php"/>
  <docblock>
    <description compact="Provides introspection information about the class tree.">It's a cached wrapper around the built-in class functions.  SilverStripe uses
class introspection heavily and without the caching it creates an unfortunate
performance hit.</description>
    <package value="framework"/>
    <subpackage value="core"/>
  </docblock>
  <method name="allClasses" start="18" end="20" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Wrapper for classes getter."/>
    </docblock>
  </method>
  <method name="exists" start="25" end="27" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <todo value="Improve documentation"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <member name="_cache_all_tables" type="{unknown}" default="null" visibility="private" line="32">
    <docblock>
      <description compact="Cache for {@link hasTable()}"/>
    </docblock>
  </member>
  <member name="_cache_ancestry" type="array" visibility="private" line="37">
    <docblock>
      <description/>
      <var description="Cache for {@link ancestry()}." type="object">
        <type full="Array" namespace="" name="Array"/>
      </var>
    </docblock>
  </member>
  <method name="hasTable" start="42" end="54" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <todo value="Move this to SS_Database or DB"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Cache the list of all table names to reduce on DB traffic" line="44"/>
    </inline>
  </method>
  <method name="reset_db_cache" start="56" end="59" abstract="false" final="false" static="true" visibility="public"/>
  <method name="getValidSubClasses" start="65" end="69" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the manifest of all classes which are present in the database."/>
      <param description="Class name to check enum values for ClassName field" type="string" variable="$class"/>
    </docblock>
    <parameter name="class" byreference="false" type="string" default="'SiteTree'"/>
    <parameter name="includeUnbacked" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="dataClassesFor" start="79" end="95" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns an array of the current class and all its ancestors and children which have a DB table."/>
      <param type="object" variable="$class">
        <type full="string|object" namespace="" name="string|object"/>
      </param>
      <todo value="Move this into data object"/>
      <return type="array"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <method name="baseDataClass" start="104" end="118" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the root class (the first to extend from DataObject) for the passed class."/>
      <param type="object" variable="$class">
        <type full="string|object" namespace="" name="string|object"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <method name="subclassesFor" start="138" end="147" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns a list of classes that inherit from the given class.">The resulting array includes the base class passed
through the $class parameter as the first array value.

Example usage:
&lt;code&gt;
ClassInfo::subclassesFor('BaseClass');
	array(
	0 =&gt; 'BaseClass',
	'ChildClass' =&gt; 'ChildClass',
	'GrandChildClass' =&gt; 'GrandChildClass'
)
&lt;/code&gt;</description>
      <param description="string of the classname or instance of the class" type="mixed" variable="$class"/>
      <return description="Names of all subclasses as an associative array." type="array"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <method name="ancestry" start="157" end="173" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the passed class name along with all its parent class names in an array, sorted with the root class first."/>
      <param type="string" variable="$class"/>
      <param description="Only return classes that have a table in the db." type="object" variable="$tablesOnly">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="array"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <parameter name="tablesOnly" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="implementorsOf" start="179" end="181" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return description="A self-keyed array of class names. Note that this is only available with Silverstripe" type="array">classes and not built-in PHP classes.</return>
    </docblock>
    <parameter name="interfaceName" byreference="false" type="{unknown}"/>
  </method>
  <method name="classImplements" start="186" end="188" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns true if the given class implements the given interface"/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
    <parameter name="interfaceName" byreference="false" type="{unknown}"/>
  </method>
  <method name="classes_for_file" start="200" end="210" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get all classes contained in a file."/>
      <uses value="ManifestBuilder"/>
      <todo value="Doesn't return additional classes that only begin">with the filename, and have additional naming separated through underscores.</todo>
      <param description="Path to a PHP file (absolute or relative to webroot)" type="string" variable="$filePath"/>
      <return type="array"/>
    </docblock>
    <parameter name="filePath" byreference="false" type="{unknown}"/>
  </method>
  <method name="classes_for_folder" start="221" end="231" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns all classes contained in a certain folder."/>
      <todo value="Doesn't return additional classes that only begin">with the filename, and have additional naming separated through underscores.</todo>
      <param description="Relative or absolute folder path" type="string" variable="$folderPath"/>
      <return description="Array of class names" type="array"/>
    </docblock>
    <parameter name="folderPath" byreference="false" type="{unknown}"/>
  </method>
  <member name="method_from_cache" type="array" visibility="private" line="233"/>
  <method name="has_method_from" start="235" end="250" abstract="false" final="false" static="true" visibility="public">
    <parameter name="class" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
    <parameter name="compclass" byreference="false" type="{unknown}"/>
  </method>
  <method name="table_for_object_field" start="263" end="288" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the table name in the class hierarchy which contains a given field column for a {@link DataObject}. If the field does not exist, this will return null."/>
      <param type="string" variable="$candidateClass"/>
      <param type="string" variable="$fieldName"/>
      <return type="string"/>
    </docblock>
    <parameter name="candidateClass" byreference="false" type="{unknown}"/>
    <parameter name="fieldName" byreference="false" type="{unknown}"/>
  </method>
</class>
