<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Loader_PluginLoader" namespace="" name="Zend_Loader_PluginLoader" abstract="false" final="false" start="38" end="484">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/Zend/Loader" file="PluginLoader.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/Zend/Loader/PluginLoader.php" size="14749" time="2015-03-14T10:41:14+13:00" unixtime="1426282874" sha1="58ae3bd1ade87a8ae15b007754887081dc72390b" relative="framework/thirdparty/Zend/Loader/PluginLoader.php"/>
  <docblock>
    <description compact="Generic plugin class loader"/>
    <category value="Zend"/>
    <package value="Zend_Loader"/>
    <subpackage value="PluginLoader"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <implements full="Zend_Loader_PluginLoader_Interface" namespace="" name="Zend_Loader_PluginLoader_Interface"/>
  <member name="_includeFileCache" type="{unknown}" visibility="protected" line="44">
    <docblock>
      <description compact="Class map cache file"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="_loadedPluginPaths" type="array" visibility="protected" line="51">
    <docblock>
      <description compact="Instance loaded plugin paths"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_loadedPlugins" type="array" visibility="protected" line="58">
    <docblock>
      <description compact="Instance loaded plugins"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_prefixToPaths" type="array" visibility="protected" line="65">
    <docblock>
      <description compact="Instance registry property"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_staticLoadedPluginPaths" type="array" visibility="protected" line="72">
    <docblock>
      <description compact="Statically loaded plugin path mappings"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_staticLoadedPlugins" type="array" visibility="protected" line="79">
    <docblock>
      <description compact="Statically loaded plugins"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_staticPrefixToPaths" type="array" visibility="protected" line="86">
    <docblock>
      <description compact="Static registry property"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_useStaticRegistry" type="{unknown}" default="null" visibility="protected" line="93">
    <docblock>
      <description compact="Whether to use a statically named registry for loading plugins"/>
      <var type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="101" end="116" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor"/>
      <param type="array" variable="$prefixToPaths"/>
      <param description="OPTIONAL" type="string" variable="$staticRegistryName"/>
    </docblock>
    <parameter name="prefixToPaths" byreference="false" type="array"/>
    <parameter name="staticRegistryName" byreference="false" type="{unknown}" default="null"/>
  </constructor>
  <method name="_formatPrefix" start="124" end="136" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Format prefix for internal use"/>
      <param type="string" variable="$prefix"/>
      <return type="string"/>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
  </method>
  <method name="addPrefixPath" start="145" end="166" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add prefixed paths to the registry of paths"/>
      <param type="string" variable="$prefix"/>
      <param type="string" variable="$path"/>
      <return type="object">
        <type full="Zend_Loader_PluginLoader" namespace="" name="Zend_Loader_PluginLoader"/>
      </return>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="getPaths" start="174" end="198" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get path stack"/>
      <param type="string" variable="$prefix"/>
      <return description="False if prefix does not exist, array otherwise" type="object">
        <type full="false|array" namespace="" name="false|array"/>
      </return>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="clearPaths" start="206" end="234" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clear path stack"/>
      <param type="string" variable="$prefix"/>
      <return description="False only if $prefix does not exist" type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="removePrefixPath" start="243" end="269" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove a prefix (or prefixed-path) from the registry"/>
      <param type="string" variable="$prefix"/>
      <param description="OPTIONAL" type="string" variable="$path"/>
      <return type="object">
        <type full="Zend_Loader_PluginLoader" namespace="" name="Zend_Loader_PluginLoader"/>
      </return>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="_formatName" start="277" end="280" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Normalize plugin name"/>
      <param type="string" variable="$name"/>
      <return type="string"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="isLoaded" start="288" end="296" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Whether or not a Plugin by a specific name is loaded"/>
      <param type="string" variable="$name"/>
      <return type="object">
        <type full="Zend_Loader_PluginLoader" namespace="" name="Zend_Loader_PluginLoader"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="getClassName" start="304" end="316" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return full class name for a named plugin"/>
      <param type="string" variable="$name"/>
      <return description="False if class not found, class name otherwise" type="object">
        <type full="string|false" namespace="" name="string|false"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="getClassPath" start="324" end="348" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get path to plugin class"/>
      <param type="mixed" variable="$name"/>
      <return description="False if not found" type="object">
        <type full="string|false" namespace="" name="string|false"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="load" start="360" end="421" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Load a plugin via the name provided"/>
      <param type="string" variable="$name"/>
      <param description="Whether or not to throw exceptions if the" type="object" variable="$throwExceptions">class is not resolved<type full="bool" namespace="" name="bool"/></param>
      <return description="Class name of loaded class; false if $throwExceptions" type="object">if false and no class found<type full="string|false" namespace="" name="string|false"/></return>
      <throws description="if class not found" type="object">
        <type full="Zend_Loader_Exception" namespace="" name="Zend_Loader_Exception"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="throwExceptions" byreference="false" type="{unknown}" default="true"/>
  </method>
  <method name="setIncludeFileCache" start="433" end="454" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Set path to class file cache">Specify a path to a file that will add include_once statements for each
plugin class loaded. This is an opt-in feature for performance purposes.</description>
      <param type="string" variable="$file"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
      <throws description="if file is not writeable or path does not exist" type="object">
        <type full="Zend_Loader_PluginLoader_Exception" namespace="" name="Zend_Loader_PluginLoader_Exception"/>
      </throws>
    </docblock>
    <parameter name="file" byreference="false" type="{unknown}"/>
  </method>
  <method name="getIncludeFileCache" start="461" end="464" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Retrieve class file cache path"/>
      <return type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
  </method>
  <method name="_appendIncFile" start="472" end="483" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Append an include_once statement to the class file cache"/>
      <param type="string" variable="$incFile"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="incFile" byreference="false" type="{unknown}"/>
  </method>
  <interface full="Zend_Loader_PluginLoader_Interface" namespace="" name="Zend_Loader_PluginLoader_Interface">
    <method name="addPrefixPath" start="41" end="41" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Add prefixed paths to the registry of paths"/>
        <param type="string" variable="$prefix"/>
        <param type="string" variable="$path"/>
        <return type="object">
          <type full="Zend_Loader_PluginLoader" namespace="" name="Zend_Loader_PluginLoader"/>
        </return>
      </docblock>
      <parameter name="prefix" byreference="false" type="{unknown}"/>
      <parameter name="path" byreference="false" type="{unknown}"/>
    </method>
    <method name="removePrefixPath" start="50" end="50" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Remove a prefix (or prefixed-path) from the registry"/>
        <param type="string" variable="$prefix"/>
        <param description="OPTIONAL" type="string" variable="$path"/>
        <return type="object">
          <type full="Zend_Loader_PluginLoader" namespace="" name="Zend_Loader_PluginLoader"/>
        </return>
      </docblock>
      <parameter name="prefix" byreference="false" type="{unknown}"/>
      <parameter name="path" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="isLoaded" start="58" end="58" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Whether or not a Helper by a specific name"/>
        <param type="string" variable="$name"/>
        <return type="object">
          <type full="Zend_Loader_PluginLoader" namespace="" name="Zend_Loader_PluginLoader"/>
        </return>
      </docblock>
      <parameter name="name" byreference="false" type="{unknown}"/>
    </method>
    <method name="getClassName" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return full class name for a named helper"/>
        <param type="string" variable="$name"/>
        <return type="string"/>
      </docblock>
      <parameter name="name" byreference="false" type="{unknown}"/>
    </method>
    <method name="load" start="74" end="74" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Load a helper via the name provided"/>
        <param type="string" variable="$name"/>
        <return type="string"/>
      </docblock>
      <parameter name="name" byreference="false" type="{unknown}"/>
    </method>
  </interface>
</class>
