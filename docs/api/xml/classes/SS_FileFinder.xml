<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SS_FileFinder" namespace="" name="SS_FileFinder" abstract="false" final="false" start="30" end="229">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/filesystem" file="FileFinder.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/filesystem/FileFinder.php" size="6334" time="2015-03-14T10:40:44+13:00" unixtime="1426282844" sha1="3bfd0a0bb46f698b38c32e637d20edc814478055" relative="framework/filesystem/FileFinder.php"/>
  <docblock>
    <description compact="A utility class that finds any files matching a set of rules that are present within a directory tree.">Each file finder instance can have several options set on it:
  - name_regex (string): A regular expression that file basenames must match.
  - accept_callback (callback): A callback that is called to accept a file.
    If it returns false the item will be skipped. The callback is passed the
    basename, pathname and depth.
  - accept_dir_callback (callback): The same as accept_callback, but only
    called for directories.
  - accept_file_callback (callback): The same as accept_callback, but only
    called for files.
  - file_callback (callback): A callback that is called when a file i
    succesfully matched. It is passed the basename, pathname and depth.
  - dir_callback (callback): The same as file_callback, but called for
    directories.
  - ignore_files (array): An array of file names to skip.
  - ignore_dirs (array): An array of directory names to skip.
  - ignore_vcs (bool): Skip over commonly used VCS dirs (svn, git, hg, bzr).
    This is enabled by default. The names of VCS directories to skip over
    are defined in <link xmlns="http://xml.phpdox.net/src" value="SS_FileFInder::$vcs_dirs"/>.
  - max_depth (int): The maxmium depth to traverse down the folder tree,
    default to unlimited.
</description>
    <package value="framework"/>
    <subpackage value="filesystem"/>
  </docblock>
  <member name="vcs_dirs" type="array" visibility="protected" line="35">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="default_options" type="array" visibility="protected" line="48">
    <docblock>
      <description compact="The default options that are set on a new finder instance. Options not present in this array cannot be set.">Any default_option statics defined on child classes are also taken into
account.</description>
      <var type="array"/>
    </docblock>
  </member>
  <member name="options" type="{unknown}" visibility="protected" line="65">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="67" end="76" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="We build our options array ourselves, because possibly no class or config manifest exists at this point" line="71"/>
    </inline>
  </constructor>
  <method name="getOption" start="84" end="90" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an option value set on this instance."/>
      <param type="string" variable="$name"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="setOption" start="99" end="105" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set an option on this finder instance. See {@link SS_FileFinder} for the list of options available."/>
      <param type="string" variable="$name"/>
      <param type="mixed" variable="$value"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="setOptions" start="112" end="114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets several options at once."/>
      <param type="array" variable="$options"/>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
  </method>
  <method name="find" start="123" end="167" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds all files matching the options within a directory. The search is performed depth first."/>
      <param type="string" variable="$base"/>
      <return type="array"/>
    </docblock>
    <parameter name="base" byreference="false" type="{unknown}"/>
  </method>
  <method name="acceptDir" start="175" end="197" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns TRUE if the directory should be traversed. This can be overloaded to customise functionality, or extended with callbacks."/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="basename" byreference="false" type="{unknown}"/>
    <parameter name="pathname" byreference="false" type="{unknown}"/>
    <parameter name="depth" byreference="false" type="{unknown}"/>
  </method>
  <method name="acceptFile" start="205" end="227" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns TRUE if the file should be included in the results. This can be overloaded to customise functionality, or extended via callbacks."/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="basename" byreference="false" type="{unknown}"/>
    <parameter name="pathname" byreference="false" type="{unknown}"/>
    <parameter name="depth" byreference="false" type="{unknown}"/>
  </method>
  <extender full="ManifestFileFinder" namespace="" name="ManifestFileFinder"/>
</class>
