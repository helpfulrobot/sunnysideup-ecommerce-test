<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SS_HTTPResponse_Exception" namespace="" name="SS_HTTPResponse_Exception" abstract="false" final="false" start="307" end="350">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/control" file="HTTPResponse.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/control/HTTPResponse.php" size="9384" time="2015-03-14T10:39:29+13:00" unixtime="1426282769" sha1="7e5e4d46eefb9d0585ef9d77f2d8a58e664c821b" relative="framework/control/HTTPResponse.php"/>
  <docblock>
    <description compact="A {@link SS_HTTPResponse} encapsulated in an exception, which can interrupt the processing flow and be caught by the {@link RequestHandler} and returned to the user.">Example Usage:
&lt;code&gt;
throw new SS_HTTPResponse_Exception('This request was invalid.', 400);
throw new SS_HTTPResponse_Exception(new SS_HTTPResponse('There was an internal server error.', 500));
&lt;/code&gt;</description>
    <package value="framework"/>
    <subpackage value="control"/>
  </docblock>
  <extends full="Exception" namespace="" name="Exception"/>
  <member name="response" type="{unknown}" visibility="protected" line="309"/>
  <constructor name="__construct" start="317" end="334" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="body Either the plaintext content of the error message, or an SS_HTTPResponse" type="object">object representing it.  In either case, the $statusCode and
                                    $statusDescription will be the HTTP status of the resulting response.<type full="string|SS_HTTPResponse" namespace="" name="string|SS_HTTPResponse"/></param>
      <see value="SS_HTTPResponse::__construct();"/>
    </docblock>
    <parameter name="body" byreference="false" type="{unknown}" default="null"/>
    <parameter name="statusCode" byreference="false" type="{unknown}" default="null"/>
    <parameter name="statusDescription" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="statusCode and statusDescription should override whatever is passed in the body" line="319"/>
    </inline>
  </constructor>
  <method name="getResponse" start="339" end="341" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="SS_HTTPResponse" namespace="" name="SS_HTTPResponse"/>
      </return>
    </docblock>
  </method>
  <method name="setResponse" start="346" end="348" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$response">
        <type full="SS_HTTPResponse" namespace="" name="SS_HTTPResponse"/>
      </param>
    </docblock>
    <parameter name="response" byreference="false" type="object">
      <type full="\\SS_HTTPResponse" namespace="\" name="SS_HTTPResponse"/>
    </parameter>
  </method>
  <parent full="Exception" namespace="" name="Exception">
    <member name="message" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception message"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="code" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception code"/>
      <var type="int"/>
    </docblock>
  </member>
    <member name="file" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The filename where the exception was created"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="line" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The line where the exception was created"/>
      <var type="int"/>
    </docblock>
  </member>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct the exception"/>
      <return type="void"/>
    </docblock>
    <parameter name="message" optional="true" byreference="false" type="string"/>
    <parameter name="code" optional="true" byreference="false" type="int"/>
    <parameter name="previous" optional="true" byreference="false" type="object" class="Exception"/>
  </constructor>
    <method name="getMessage" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception message"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getPrevious" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Returns previous Exception"/>
      <return type="Exception"/>
    </docblock>
  </method>
    <method name="getCode" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception code"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getFile" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the file in which the exception occurred"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getLine" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the line in which the exception occurred"/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="getTrace" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace"/>
      <return type="array"/>
    </docblock>
  </method>
    <method name="getTraceAsString" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace as a string"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="__toString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="String representation of the exception"/>
      <return type="string"/>
    </docblock>
  </method>
  </parent>
</class>
