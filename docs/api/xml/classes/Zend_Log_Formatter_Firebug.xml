<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Log_Formatter_Firebug" namespace="" name="Zend_Log_Formatter_Firebug" abstract="false" final="false" start="33" end="61">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/Zend/Log/Formatter" file="Firebug.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/Zend/Log/Formatter/Firebug.php" size="1924" time="2015-03-14T10:41:29+13:00" unixtime="1426282889" sha1="77e1a03bd9f4b6605e21ae7eb94326e53ac34ec1" relative="framework/thirdparty/Zend/Log/Formatter/Firebug.php"/>
  <docblock>
    <description/>
    <category value="Zend"/>
    <package value="Zend_Log"/>
    <subpackage value="Formatter"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <extends full="Zend_Log_Formatter_Abstract" namespace="" name="Zend_Log_Formatter_Abstract"/>
  <method name="factory" start="41" end="44" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Factory for Zend_Log_Formatter_Firebug classe"/>
      <param description="useless" type="object" variable="$options">
        <type full="array|Zend_Config" namespace="" name="array|Zend_Config"/>
      </param>
      <return type="object">
        <type full="Zend_Log_Formatter_Firebug" namespace="" name="Zend_Log_Formatter_Firebug"/>
      </return>
    </docblock>
    <parameter name="options" byreference="false" type="{unknown}"/>
  </method>
  <method name="format" start="57" end="60" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This method formats the event for the firebug writer.">The default is to just send the message parameter, but through
extension of this class and calling the
{@see Zend_Log_Writer_Firebug::setFormatter()} method you can
pass as much of the event data as you are interested in.</description>
      <param description="event data" type="array" variable="$event"/>
      <return description="event message" type="mixed"/>
    </docblock>
    <parameter name="event" byreference="false" type="{unknown}"/>
  </method>
  <parent full="Zend_Log_Formatter_Abstract" namespace="" name="Zend_Log_Formatter_Abstract"/>
  <interface full="Zend_Log_Formatter_Interface" namespace="" name="Zend_Log_Formatter_Interface">
    <method name="format" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Formats data into a single line to be written by the writer."/>
        <param description="event data" type="array" variable="$event"/>
        <return description="formatted line to write to the log" type="string"/>
      </docblock>
      <parameter name="event" byreference="false" type="{unknown}"/>
    </method>
  </interface>
  <interface full="Zend_Log_FactoryInterface" namespace="" name="Zend_Log_FactoryInterface">
    <method name="factory" start="37" end="37" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Construct a Zend_Log driver"/>
        <param type="object" variable="$config">
          <type full="array|Zend_Config" namespace="" name="array|Zend_Config"/>
        </param>
        <return type="object">
          <type full="Zend_Log_FactoryInterface" namespace="" name="Zend_Log_FactoryInterface"/>
        </return>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
  </interface>
</class>
