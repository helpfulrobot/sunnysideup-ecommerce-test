<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Date_DateObject" namespace="" name="Zend_Date_DateObject" abstract="true" final="false" start="29" end="1089">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/Zend/Date" file="DateObject.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/Zend/Date/DateObject.php" size="40051" time="2015-03-14T10:41:14+13:00" unixtime="1426282874" sha1="46d50a93588d20badf11401e4bfe8508f52f2021" relative="framework/thirdparty/Zend/Date/DateObject.php"/>
  <docblock>
    <description/>
    <category value="Zend"/>
    <package value="Zend_Date"/>
    <subpackage value="Zend_Date_DateObject"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <member name="_unixTimestamp" type="{unknown}" visibility="private" line="34">
    <docblock>
      <description compact="UNIX Timestamp"/>
    </docblock>
  </member>
  <member name="_cache" type="{unknown}" default="null" visibility="protected" line="35"/>
  <member name="_cacheTags" type="{unknown}" default="false" visibility="protected" line="36"/>
  <member name="_defaultOffset" type="integer" default="0" visibility="protected" line="37"/>
  <member name="_timezone" type="string" default="'UTC'" visibility="private" line="42">
    <docblock>
      <description compact="active timezone"/>
    </docblock>
  </member>
  <member name="_offset" type="integer" default="0" visibility="private" line="43"/>
  <member name="_syncronised" type="integer" default="0" visibility="private" line="44"/>
  <member name="_dst" type="{unknown}" default="true" visibility="protected" line="47"/>
  <member name="_monthTable" type="array" visibility="private" line="52">
    <docblock>
      <description compact="Table of Monthdays"/>
    </docblock>
  </member>
  <member name="_yearTable" type="array" visibility="private" line="57">
    <docblock>
      <description compact="Table of Years"/>
    </docblock>
  </member>
  <method name="setUnixTimestamp" start="79" end="93" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Set this object to have a new UNIX timestamp."/>
      <param description="OPTIONAL timestamp; defaults to local time using time()" type="object" variable="$timestamp">
        <type full="string|integer" namespace="" name="string|integer"/>
      </param>
      <return description="old timestamp" type="object">
        <type full="string|integer" namespace="" name="string|integer"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="timestamp" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getUnixTimestamp" start="102" end="109" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns this object's UNIX timestamp A timestamp greater then the integer range will be returned as string This function does not return the timestamp as object. Use copy() instead."/>
      <return description="timestamp" type="object">
        <type full="integer|string" namespace="" name="integer|string"/>
      </return>
    </docblock>
  </method>
  <method name="_getTime" start="119" end="125" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Internal function.">Returns time().  This method exists to allow unit tests to work-around methods that might otherwise
be hard-coded to use time().  For example, this makes it possible to test isYesterday() in Date.php.</description>
      <param description="OPTIONAL time syncronisation value" type="integer" variable="$sync"/>
      <return description="timestamp" type="integer"/>
    </docblock>
    <parameter name="sync" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="mktime" start="146" end="266" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Internal mktime function used by Zend_Date.">The timestamp returned by mktime() can exceed the precision of traditional UNIX timestamps,
by allowing PHP to auto-convert to using a float value.

Returns a timestamp relative to 1970/01/01 00:00:00 GMT/UTC.
DST (Summer/Winter) is depriciated since php 5.1.0.
Year has to be 4 digits otherwise it would be recognised as
year 70 AD instead of 1970 AD as expected !!</description>
      <param type="integer" variable="$hour"/>
      <param type="integer" variable="$minute"/>
      <param type="integer" variable="$second"/>
      <param type="integer" variable="$month"/>
      <param type="integer" variable="$day"/>
      <param type="integer" variable="$year"/>
      <param description="OPTIONAL true = other arguments are for UTC time, false = arguments are for local time/date" type="boolean" variable="$gmt"/>
      <return description="timestamp (number of seconds elapsed relative to 1970/01/01 00:00:00 GMT/UTC)" type="object">
        <type full="integer|float" namespace="" name="integer|float"/>
      </return>
    </docblock>
    <parameter name="hour" byreference="false" type="{unknown}"/>
    <parameter name="minute" byreference="false" type="{unknown}"/>
    <parameter name="second" byreference="false" type="{unknown}"/>
    <parameter name="month" byreference="false" type="{unknown}"/>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <parameter name="year" byreference="false" type="{unknown}"/>
    <parameter name="gmt" byreference="false" type="{unknown}" default="false"/>
    <inline>
      <comment value="complete date but in 32bit timestamp - use PHP internal" line="148"/>
      <comment value="Timezone also includes DST settings, therefor substracting the GMT offset is not enough" line="152"/>
      <comment value="We have to set the correct timezone to get the right value" line="153"/>
      <comment value="date to integer" line="175"/>
      <comment value="correct months &gt; 12 and months &lt; 1" line="180"/>
      <comment value="Date is after UNIX epoch" line="194"/>
      <comment value="go through leapyears" line="195"/>
      <comment value="add months from latest given year" line="196"/>
    </inline>
  </method>
  <method name="isYearLeapYear" start="274" end="289" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Returns true, if given $year is a leap year."/>
      <param type="integer" variable="$year"/>
      <return description="true, if year is leap year" type="boolean"/>
    </docblock>
    <parameter name="year" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="all leapyears can be divided through 4" line="276"/>
      <comment value="all leapyears can be divided through 400" line="281"/>
    </inline>
  </method>
  <method name="date" start="301" end="618" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Internal mktime function used by Zend_Date for handling 64bit timestamps.">Returns a formatted date for a given timestamp.</description>
      <param description="format for output" type="string" variable="$format"/>
      <param type="mixed" variable="$timestamp"/>
      <param description="OPTIONAL true = other arguments are for UTC time, false = arguments are for local time/date" type="boolean" variable="$gmt"/>
      <return type="string"/>
    </docblock>
    <parameter name="format" byreference="false" type="{unknown}"/>
    <parameter name="timestamp" byreference="false" type="{unknown}" default="null"/>
    <parameter name="gmt" byreference="false" type="{unknown}" default="false"/>
    <inline>
      <comment value="check on false or null alone fails" line="330"/>
    </inline>
  </method>
  <method name="dayOfWeek" start="629" end="652" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Returns the day of week for a Gregorian calendar date.">0 = sunday, 6 = saturday</description>
      <param type="integer" variable="$year"/>
      <param type="integer" variable="$month"/>
      <param type="integer" variable="$day"/>
      <return description="dayOfWeek" type="integer"/>
    </docblock>
    <parameter name="year" byreference="false" type="{unknown}"/>
    <parameter name="month" byreference="false" type="{unknown}"/>
    <parameter name="day" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="gregorian correction" line="635"/>
    </inline>
  </method>
  <method name="getDateParts" start="667" end="848" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Internal getDateParts function for handling 64bit timestamps, similar to: http://www.php.net/getdate">Returns an array of date parts for $timestamp, relative to 1970/01/01 00:00:00 GMT/UTC.

$fast specifies ALL date parts should be returned (slower)
Default is false, and excludes $dayofweek, weekday, month and timestamp from parts returned.</description>
      <param type="mixed" variable="$timestamp"/>
      <param description="OPTIONAL defaults to fast (false), resulting in fewer date parts" type="boolean" variable="$fast"/>
      <return type="array"/>
    </docblock>
    <parameter name="timestamp" byreference="false" type="{unknown}" default="null"/>
    <parameter name="fast" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="actual timestamp" line="670"/>
      <comment value="32bit timestamp" line="675"/>
      <comment value="gregorian correction" line="690"/>
      <comment value="timestamp lower 0" line="695"/>
      <comment value="iterate through 10 years table, increasing speed" line="700"/>
      <comment value="iterate the max last 10 years" line="715"/>
      <comment value="iterate through months" line="735"/>
    </inline>
  </method>
  <method name="weekNumber" start="860" end="880" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Internal getWeekNumber function for handling 64bit timestamps">Returns the ISO 8601 week number of a given date</description>
      <param type="integer" variable="$year"/>
      <param type="integer" variable="$month"/>
      <param type="integer" variable="$day"/>
      <return type="integer"/>
    </docblock>
    <parameter name="year" byreference="false" type="{unknown}"/>
    <parameter name="month" byreference="false" type="{unknown}"/>
    <parameter name="day" byreference="false" type="{unknown}"/>
  </method>
  <method name="_range" start="889" end="897" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Internal _range function Sets the value $a to be in the range of [0, $b]"/>
      <param description="- value to correct" type="float" variable="$a"/>
      <param description="- maximum range to set" type="float" variable="$b"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
  </method>
  <method name="calcSun" start="906" end="996" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Calculates the sunrise or sunset based on a location"/>
      <param description="Location for calculation MUST include 'latitude', 'longitude', 'horizon'" type="array" variable="$location"/>
      <param description="true: sunrise; false: sunset" type="object" variable="$horizon">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return description="- false: midnight sun, integer:" type="mixed"/>
    </docblock>
    <parameter name="location" byreference="false" type="{unknown}"/>
    <parameter name="horizon" byreference="false" type="{unknown}"/>
    <parameter name="rise" byreference="false" type="{unknown}" default="false"/>
    <inline>
      <comment value="timestamp within 32bit" line="908"/>
      <comment value="self calculation - timestamp bigger than 32bit" line="918"/>
      <comment value="fix circle values" line="919"/>
      <comment value="radiant conversion for coordinates" line="925"/>
      <comment value="get solar coordinates" line="929"/>
      <comment value="solar anomoly and longitude" line="933"/>
      <comment value="get quadrant" line="938"/>
      <comment value="solar ascension" line="945"/>
      <comment value="adjust quadrant" line="949"/>
      <comment value="solar declination" line="956"/>
      <comment value="midnight sun, always night" line="964"/>
      <comment value="time calculation" line="976"/>
      <comment value="determinate quadrant" line="980"/>
      <comment value="radiant to hours" line="983"/>
      <comment value="convert to time" line="986"/>
    </inline>
  </method>
  <method name="setTimezone" start="1007" end="1036" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets a new timezone for calculation of $this object's gmt offset.">For a list of supported timezones look here: http://php.net/timezones
If no timezone can be detected or the given timezone is wrong UTC will be set.</description>
      <param description="OPTIONAL timezone for date calculation; defaults to date_default_timezone_get()" type="string" variable="$zone"/>
      <return description="Provides fluent interface" type="object">
        <type full="Zend_Date_DateObject" namespace="" name="Zend_Date_DateObject"/>
      </return>
      <throws type="object">
        <type full="Zend_Date_Exception" namespace="" name="Zend_Date_Exception"/>
      </throws>
    </docblock>
    <parameter name="zone" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="throw an error on false input, but only if the new date extension is available" line="1014"/>
      <comment value="this can generate an error if the date extension is not available and a false timezone is given" line="1021"/>
    </inline>
  </method>
  <method name="getTimezone" start="1044" end="1047" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the timezone of $this object.">The timezone is initially set when the object is instantiated.</description>
      <return description="actual set timezone string" type="string"/>
    </docblock>
  </method>
  <method name="getGmtOffset" start="1056" end="1070" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the offset to GMT of $this object's timezone.">The offset to GMT is initially set when the object is instantiated using the currently,
in effect, default timezone for PHP functions.</description>
      <return description="seconds difference between GMT timezone and timezone when object was instantiated" type="integer"/>
    </docblock>
  </method>
  <method name="_getTagSupportForCache" start="1077" end="1088" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Internal method to check if the given cache supports tags"/>
      <param type="object" variable="$cache">
        <type full="Zend_Cache" namespace="" name="Zend_Cache"/>
      </param>
    </docblock>
  </method>
  <extender full="Zend_Date" namespace="" name="Zend_Date"/>
</class>
