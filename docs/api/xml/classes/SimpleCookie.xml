<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SimpleCookie" namespace="" name="SimpleCookie" abstract="false" final="false" start="23" end="220">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/simpletest" file="cookies.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/simpletest/cookies.php" size="11826" time="2015-03-14T10:41:58+13:00" unixtime="1426282918" sha1="513f7a8b2ff449d0ab3a17dd0e4ff43c5ca9dbc7" relative="framework/thirdparty/simpletest/cookies.php"/>
  <docblock>
    <description compact="Cookie data holder. Cookie rules are full of pretty    arbitary stuff. I have used...">http://wp.netscape.com/newsref/std/cookie_spec.html
   http://www.cookiecentral.com/faq/
   @package SimpleTest
   @subpackage WebTester</description>
  </docblock>
  <member name="_host" type="{unknown}" visibility="public" line="24"/>
  <member name="_name" type="{unknown}" visibility="public" line="25"/>
  <member name="_value" type="{unknown}" visibility="public" line="26"/>
  <member name="_path" type="{unknown}" visibility="public" line="27"/>
  <member name="_expiry" type="{unknown}" visibility="public" line="28"/>
  <member name="_is_secure" type="{unknown}" visibility="public" line="29"/>
  <method name="SimpleCookie" start="39" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor. Sets the stored values.">@param string $name            Cookie key.
   @param string $value           Value of cookie.
   @param string $path            Cookie path if not host wide.
   @param string $expiry          Expiry date as string.
   @param boolean $is_secure      Currently ignored.</description>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}" default="false"/>
    <parameter name="path" byreference="false" type="{unknown}" default="false"/>
    <parameter name="expiry" byreference="false" type="{unknown}" default="false"/>
    <parameter name="is_secure" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="setHost" start="63" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the host. The cookie rules determine    that the first two parts are taken for    certain TLDs and three for others. If the    new host does not match these rules then the    call will fail.">@param string $host       New hostname.
   @return boolean           True if hostname is valid.
   @access public</description>
    </docblock>
    <parameter name="host" byreference="false" type="{unknown}"/>
  </method>
  <method name="getHost" start="77" end="79" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Accessor for the truncated host to which this    cookie applies.">@return string       Truncated hostname.
   @access public</description>
    </docblock>
  </method>
  <method name="isValidHost" start="87" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Test for a cookie being valid for a host name.">@param string $host    Host to test against.
   @return boolean        True if the cookie would be valid
                          here.</description>
    </docblock>
    <parameter name="host" byreference="false" type="{unknown}"/>
  </method>
  <method name="_truncateHost" start="98" end="106" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Extracts just the domain part that determines a    cookie's host validity.">@param string $host    Host name to truncate.
   @return string        Domain or false on a bad host.
   @access private</description>
    </docblock>
    <parameter name="host" byreference="false" type="{unknown}"/>
  </method>
  <method name="getName" start="113" end="115" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Accessor for name.">@return string       Cookie key.
   @access public</description>
    </docblock>
  </method>
  <method name="getValue" start="123" end="125" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Accessor for value. A deleted cookie will    have an empty string for this.">@return string       Cookie value.
   @access public</description>
    </docblock>
  </method>
  <method name="getPath" start="132" end="134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Accessor for path.">@return string       Valid cookie path.
   @access public</description>
    </docblock>
  </method>
  <method name="isValidPath" start="144" end="149" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Tests a path to see if the cookie applies    there. The test path must be longer or    equal to the cookie path.">@param string $path       Path to test against.
   @return boolean           True if cookie valid here.
   @access public</description>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="getExpiry" start="156" end="161" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Accessor for expiry.">@return string       Expiry string.
   @access public</description>
    </docblock>
  </method>
  <method name="isExpired" start="174" end="182" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Test to see if cookie is expired against    the cookie format time or timestamp.">Will give true for a session cookie.
   @param integer/string $now  Time to test against. Result
                               will be false if this time
                               is later than the cookie expiry.
                               Can be either a timestamp integer
                               or a cookie format date.
   @access public</description>
    </docblock>
    <parameter name="now" byreference="false" type="{unknown}"/>
  </method>
  <method name="agePrematurely" start="190" end="194" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ages the cookie by the specified number of    seconds.">@param integer $interval   In seconds.
   @public</description>
    </docblock>
    <parameter name="interval" byreference="false" type="{unknown}"/>
  </method>
  <method name="isSecure" start="201" end="203" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Accessor for the secure flag.">@return boolean       True if cookie needs SSL.
   @access public</description>
    </docblock>
  </method>
  <method name="_fixPath" start="211" end="219" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds a trailing and leading slash to the path    if missing.">@param string $path            Path to fix.
   @access private</description>
    </docblock>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
</class>
