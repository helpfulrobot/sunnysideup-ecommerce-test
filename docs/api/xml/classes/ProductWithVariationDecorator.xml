<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="ProductWithVariationDecorator" namespace="" name="ProductWithVariationDecorator" abstract="false" final="false" start="9" end="591">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../ecommerce_product_variation/code/dod" file="ProductWithVariationDecorator.php" realpath="/var/www/_modules/ecommerce_test/trunk/ecommerce_product_variation/code/dod/ProductWithVariationDecorator.php" size="26406" time="2015-03-14T10:43:42+13:00" unixtime="1426283022" sha1="b6dc71dfd6aec512d8262e353e4bf11564ea4a87" relative="ecommerce_product_variation/code/dod/ProductWithVariationDecorator.php"/>
  <docblock>
    <description/>
  </docblock>
  <extends full="DataExtension" namespace="" name="DataExtension"/>
  <member name="has_many" type="array" visibility="private" line="14">
    <docblock>
      <description compact="standard SS Var"/>
    </docblock>
  </member>
  <member name="many_many" type="array" visibility="private" line="21">
    <docblock>
      <description compact="standard SS Var"/>
    </docblock>
  </member>
  <member name="many_many_extraFields" type="array" visibility="private" line="28">
    <docblock>
      <description compact="standard SS Var"/>
    </docblock>
  </member>
  <member name="casting" type="array" visibility="private" line="37">
    <docblock>
      <description compact="standard SS Var"/>
    </docblock>
  </member>
  <member name="classNameOfVariations" type="string" default="&quot;ProductVariation&quot;" visibility="protected" line="48">
    <docblock>
      <description compact="what class do we use for Variations.">This class has to extend ProductVariation.</description>
      <var type="object">
        <type full="String" namespace="" name="String"/>
      </var>
    </docblock>
  </member>
  <method name="getClassNameOfVariations" start="55" end="57" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns what class do we use for Variations.">In general, that is ProductVariation, but you can change it to something else!</description>
      <return type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
  </method>
  <method name="canDelete" start="64" end="66" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="standard SS method"/>
      <param type="object" variable="$member">
        <type full="Member" namespace="" name="Member"/>
      </param>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <parameter name="member" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="NumberOfVariations" start="72" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="tells you the number of variations this product has"/>
      <return type="object">
        <type full="Int" namespace="" name="Int"/>
      </return>
    </docblock>
  </method>
  <method name="HasVariations" start="80" end="82" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="tells you whether the product has any variations"/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
  </method>
  <method name="Product" start="91" end="93" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="this method is really useful when you mix Products and Product Variations That is, in a template, you might have something like $Buyable.Product With the method below, this will work BOTH if the Buyable is a Product and a product Varation"/>
      <return description="(Product)" type="object">
        <type full="DataObject" namespace="" name="DataObject"/>
      </return>
    </docblock>
  </method>
  <method name="IsProduct" start="102" end="104" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="tells you whether the current object is a product seems a bit silly, but it can be useful as other buyables can return false from this method."/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
  </method>
  <method name="updateCMSFields" start="110" end="185" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="standard SS method"/>
    </docblock>
    <parameter name="fields" byreference="false" type="object">
      <type full="\\FieldList" namespace="\" name="FieldList"/>
    </parameter>
  </method>
  <method name="getVariationsTable" start="191" end="223" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Field to add and edit product variations"/>
      <return type="object">
        <type full="GridField" namespace="" name="GridField"/>
      </return>
    </docblock>
    <inline>
      <comment value="add the editable columns." line="204"/>
    </inline>
  </method>
  <method name="VariationIsInCart" start="230" end="240" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="tells us if any of the variations, related to this product, are currently in the cart."/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
  </method>
  <method name="VariationOrProductIsInCart" start="248" end="250" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="tells us if any of the variations, related to this product, OR the product itself, is currently in the cart."/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
  </method>
  <method name="LowestVariationPrice" start="257" end="273" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns lowest cost variation price for use in FROM XXX."/>
      <return type="object">
        <type full="Float" namespace="" name="Float"/>
      </return>
    </docblock>
  </method>
  <method name="LowestVariationPriceAsMoney" start="280" end="282" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <see value="self::LowestVariationPrice"/>
      <return type="object">
        <type full="Money" namespace="" name="Money"/>
      </return>
    </docblock>
  </method>
  <method name="generateVariationsFromAttributeValues" start="304" end="358" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The array provided needs to be     TypeID =&gt; arrayOfValueIDs     TypeID =&gt; arrayOfValueIDs     TypeID =&gt; arrayOfValueIDs you can also make it:     NameOfAttritbuteType =&gt; arrayOfValueIDs OR:     NameOfAttritbuteType =&gt; arrayOfValueNames e.g.">Colour =&gt; array(Red, Orange, Blue )

TypeID is the ID of the ProductAttributeType.  You can also make
it a string in which case it will be found / created
arrayOfValueIDs is an array of IDs of the already created ProductAttributeValue.
You can also make it an array of strings in which case they will be found / created...</description>
      <param type="array" variable="$values"/>
      <return type="object">
        <type full="Int" namespace="" name="Int"/>
      </return>
    </docblock>
    <parameter name="values" byreference="false" type="array"/>
    <inline>
      <comment value="we use the copy variations to merge all of them together..." line="310"/>
    </inline>
  </method>
  <method name="getVariationByAttributes" start="366" end="395" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns the matching variation if any"/>
      <param description="formatted as (TypeID =&gt; ValueID, TypeID =&gt; ValueID)" type="array" variable="$attributes"/>
      <return description="| NULL" type="object">
        <type full="ProductVariation" namespace="" name="ProductVariation"/>
      </return>
    </docblock>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="addAttributeValue" start="398" end="402" abstract="false" final="false" static="false" visibility="public">
    <parameter name="attributeValue" byreference="false" type="{unknown}"/>
  </method>
  <method name="removeAttributeValue" start="404" end="408" abstract="false" final="false" static="false" visibility="public">
    <parameter name="attributeValue" byreference="false" type="{unknown}"/>
  </method>
  <method name="addAttributeType" start="417" end="432" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="add an attribute type to the product"/>
      <param description="| Int | ProductAttributeType $attributeTypeObject" type="object">
        <type full="String" namespace="" name="String"/>
      </param>
      <return type="object">
        <type full="ProductAttributeType" namespace="" name="ProductAttributeType"/>
      </return>
    </docblock>
    <parameter name="attributeTypeObject" byreference="false" type="{unknown}"/>
  </method>
  <method name="canRemoveAttributeType" start="439" end="446" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$attributeTypeObject">
        <type full="ProductAttributeType" namespace="" name="ProductAttributeType"/>
      </param>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <parameter name="attributeTypeObject" byreference="false" type="{unknown}"/>
  </method>
  <method name="removeAttributeType" start="452" end="455" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$attributeTypeObject">
        <type full="ProductAttributeType" namespace="" name="ProductAttributeType"/>
      </param>
    </docblock>
    <parameter name="attributeTypeObject" byreference="false" type="{unknown}"/>
  </method>
  <method name="getArrayOfLinkedProductAttributeTypeIDs" start="461" end="471" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="return an array of IDs of the Attribute Types linked to this product."/>
      <return type="object">
        <type full="Array" namespace="" name="Array"/>
      </return>
    </docblock>
    <inline>
      <comment value="old way..." line="463"/>
    </inline>
  </method>
  <method name="getArrayOfLinkedProductAttributeValueIDs" start="477" end="487" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="return an array of IDs of the Attribute Types linked to this product."/>
      <return type="object">
        <type full="Array" namespace="" name="Array"/>
      </return>
    </docblock>
  </method>
  <method name="onAfterWrite" start="491" end="495" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="check for the attributes used so that they can be added to VariationAttributes" line="492"/>
    </inline>
  </method>
  <method name="onAfterDelete" start="497" end="500" abstract="false" final="false" static="false" visibility="public"/>
  <method name="cleaningUpVariationData" start="508" end="590" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="based on the ProductVariations for the products removing non-existing Product_VariationAttributes adding existing Product_VariationAttributes"/>
      <param description="- output outcome" type="object" variable="$verbose">
        <type full="Boolean" namespace="" name="Boolean"/>
      </param>
    </docblock>
    <parameter name="verbose" byreference="false" type="{unknown}" default="false"/>
  </method>
  <parent full="DataExtension" namespace="" name="DataExtension">
    <extends full="Extension" namespace="" name="Extension"/>
    <method name="get_extra_config" start="10" end="25" abstract="false" final="false" static="true" visibility="public">
      <parameter name="class" byreference="false" type="{unknown}"/>
      <parameter name="extension" byreference="false" type="{unknown}"/>
      <parameter name="args" byreference="false" type="{unknown}"/>
    </method>
    <method name="unload_extra_statics" start="27" end="29" abstract="false" final="false" static="true" visibility="public">
      <parameter name="class" byreference="false" type="{unknown}"/>
      <parameter name="extension" byreference="false" type="{unknown}"/>
    </method>
    <method name="validate" start="37" end="38" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Hook for extension-specific validation."/>
        <param description="validation result" variable="$validationResult" type="object">
          <type full="Local" namespace="" name="Local"/>
        </param>
        <throws type="object">
          <type full="ValidationException" namespace="" name="ValidationException"/>
        </throws>
      </docblock>
      <parameter name="validationResult" byreference="false" type="object">
        <type full="\\ValidationResult" namespace="\" name="ValidationResult"/>
      </parameter>
    </method>
    <method name="augmentSQL" start="45" end="46" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Edit the given query object to support queries for this extension"/>
        <param description="Query to augment." type="object" variable="$query">
          <type full="SQLQuery" namespace="" name="SQLQuery"/>
        </param>
      </docblock>
      <parameter name="query" byreference="true" type="object">
        <type full="\\SQLQuery" namespace="\" name="SQLQuery"/>
      </parameter>
    </method>
    <method name="augmentDatabase" start="54" end="55" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Update the database schema as required by this extension.">When duplicating a table's structure, remember to duplicate the create options
as well. See <link xmlns="http://xml.phpdox.net/src" value="Versioned-&gt;augmentDatabase"/> for an example.
</description>
      </docblock>
    </method>
    <method name="augmentWrite" start="62" end="63" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Augment a write-record request."/>
        <param description="Query to augment." type="object" variable="$manipulation">
          <type full="SQLQuery" namespace="" name="SQLQuery"/>
        </param>
      </docblock>
      <parameter name="manipulation" byreference="true" type="{unknown}"/>
    </method>
    <method name="onBeforeWrite" start="65" end="66" abstract="false" final="false" static="false" visibility="public"/>
    <method name="onAfterWrite" start="68" end="69" abstract="false" final="false" static="false" visibility="public"/>
    <method name="onBeforeDelete" start="71" end="72" abstract="false" final="false" static="false" visibility="public"/>
    <method name="onAfterDelete" start="74" end="75" abstract="false" final="false" static="false" visibility="public"/>
    <method name="requireDefaultRecords" start="77" end="78" abstract="false" final="false" static="false" visibility="public"/>
    <method name="populateDefaults" start="80" end="81" abstract="false" final="false" static="false" visibility="public"/>
    <method name="can" start="83" end="84" abstract="false" final="false" static="false" visibility="public">
      <parameter name="member" byreference="false" type="{unknown}"/>
    </method>
    <method name="canEdit" start="86" end="87" abstract="false" final="false" static="false" visibility="public">
      <parameter name="member" byreference="false" type="{unknown}"/>
    </method>
    <method name="canDelete" start="89" end="90" abstract="false" final="false" static="false" visibility="public">
      <parameter name="member" byreference="false" type="{unknown}"/>
    </method>
    <method name="canCreate" start="92" end="93" abstract="false" final="false" static="false" visibility="public">
      <parameter name="member" byreference="false" type="{unknown}"/>
    </method>
    <method name="extraStatics" start="107" end="109" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Define extra database fields">Return a map where the keys are db, has_one, etc, and the values are
additional fields/relations to be defined.</description>
        <param description="this method might be called on the class directly" variable="$class" type="object">
          <type full="since" namespace="" name="since"/>
        </param>
        <param description="this can help to extract parameters to help set indexes" variable="$extension" type="object">
          <type full="since" namespace="" name="since"/>
        </param>
        <return description="Returns a map where the keys are db, has_one, etc, and" type="array">the values are additional fields/relations to be defined.</return>
      </docblock>
      <parameter name="class" byreference="false" type="{unknown}" default="null"/>
      <parameter name="extension" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="updateCMSFields" start="124" end="125" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This function is used to provide modifications to the form in the CMS by the extension. By default, no changes are made. {@link DataObject-&gt;getCMSFields()}.">Please consider using <link xmlns="http://xml.phpdox.net/src" value="updateFormFields()"/> to globally add
formfields to the record. The method <link xmlns="http://xml.phpdox.net/src" value="updateCMSFields()"/>should just be used to add or modify tabs, or fields which
are specific to the CMS-context.
Caution: Use <link xmlns="http://xml.phpdox.net/src" value="FieldList-&gt;addFieldToTab()"/> to add fields.
</description>
        <param description="FieldList with a contained TabSet" type="object" variable="$fields">
          <type full="FieldList" namespace="" name="FieldList"/>
        </param>
      </docblock>
      <parameter name="fields" byreference="false" type="object">
        <type full="\\FieldList" namespace="\" name="FieldList"/>
      </parameter>
    </method>
    <method name="updateFrontEndFields" start="135" end="136" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This function is used to provide modifications to the form used for front end forms. {@link DataObject-&gt;getFrontEndFields()}">Caution: Use <link xmlns="http://xml.phpdox.net/src" value="FieldList-&gt;push()"/> to add fields.
</description>
        <param description="FieldList without TabSet nesting" type="object" variable="$fields">
          <type full="FieldList" namespace="" name="FieldList"/>
        </param>
      </docblock>
      <parameter name="fields" byreference="false" type="object">
        <type full="\\FieldList" namespace="\" name="FieldList"/>
      </parameter>
    </method>
    <method name="updateCMSActions" start="144" end="145" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This is used to provide modifications to the form actions used in the CMS. {@link DataObject-&gt;getCMSActions()}."/>
        <param description="FieldList" type="object" variable="$actions">
          <type full="FieldList" namespace="" name="FieldList"/>
        </param>
      </docblock>
      <parameter name="actions" byreference="false" type="object">
        <type full="\\FieldList" namespace="\" name="FieldList"/>
      </parameter>
    </method>
    <method name="updateSummaryFields" start="155" end="165" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="this function is used to provide modifications to the summary fields in CMS by the extension By default, the summaryField() of its owner will merge more fields defined in the extension's $extra_fields['summary_fields']"/>
        <param description="Array of field names" type="array" variable="$fields"/>
      </docblock>
      <parameter name="fields" byreference="true" type="{unknown}"/>
      <inline>
        <comment value="if summary_fields were passed in numeric array," line="158"/>
        <comment value="convert to an associative array" line="159"/>
      </inline>
    </method>
    <method name="updateFieldLabels" start="175" end="180" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="this function is used to provide modifications to the fields labels in CMS by the extension By default, the fieldLabels() of its owner will merge more fields defined in the extension's $extra_fields['field_labels']"/>
        <param description="Array of field labels" type="array" variable="$labels"/>
      </docblock>
      <parameter name="labels" byreference="true" type="{unknown}"/>
    </method>
  </parent>
  <parent full="Extension" namespace="" name="Extension">
    <member name="owner" type="{unknown}" visibility="protected" line="26">
      <docblock>
        <description compact="The object this extension is applied to."/>
        <var type="object">
          <type full="Object" namespace="" name="Object"/>
        </var>
      </docblock>
    </member>
    <member name="ownerBaseClass" type="{unknown}" visibility="protected" line="32">
      <docblock>
        <description compact="The base class that this extension was applied to; $this-&gt;owner must be one of these"/>
        <var type="object">
          <type full="DataObject" namespace="" name="DataObject"/>
        </var>
      </docblock>
    </member>
    <member name="class" type="{unknown}" visibility="public" line="40"/>
    <constructor name="__construct" start="42" end="44" abstract="false" final="false" static="false" visibility="public"/>
    <method name="add_to_class" start="52" end="54" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Called when this extension is added to a particular class"/>
        <static/>
        <param variable="$class"/>
      </docblock>
      <parameter name="class" byreference="false" type="{unknown}"/>
      <parameter name="extensionClass" byreference="false" type="{unknown}"/>
      <parameter name="args" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="setOwner" start="64" end="70" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the owner of this extension."/>
        <param description="The owner object," type="object" variable="$owner">
          <type full="Object" namespace="" name="Object"/>
        </param>
        <param description="The base class that the extension is applied to; this may be" type="string" variable="$ownerBaseClass">the class of owner, or it may be a parent.  For example, if Versioned was applied to SiteTree,
and then a Page object was instantiated, $owner would be a Page object, but $ownerBaseClass
would be 'SiteTree'.</param>
      </docblock>
      <parameter name="owner" byreference="false" type="{unknown}"/>
      <parameter name="ownerBaseClass" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="clearOwner" start="72" end="76" abstract="false" final="false" static="false" visibility="public"/>
    <method name="getOwner" start="83" end="85" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the owner of this extension."/>
        <return type="object">
          <type full="Object" namespace="" name="Object"/>
        </return>
      </docblock>
    </method>
    <method name="get_classname_without_arguments" start="95" end="97" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Helper method to strip eval'ed arguments from a string thats passed to {@link DataObject::$extensions} or {@link Object::add_extension()}."/>
        <param description="E.g. &quot;Versioned('Stage','Live')&quot;" type="string" variable="$extensionStr"/>
        <return description="Extension classname, e.g. &quot;Versioned&quot;" type="string"/>
      </docblock>
      <parameter name="extensionStr" byreference="false" type="{unknown}"/>
    </method>
  </parent>
</class>
