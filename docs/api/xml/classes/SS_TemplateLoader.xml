<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SS_TemplateLoader" namespace="" name="SS_TemplateLoader" abstract="false" final="false" start="8" end="90">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/core/manifest" file="TemplateLoader.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/core/manifest/TemplateLoader.php" size="1945" time="2015-03-14T10:39:29+13:00" unixtime="1426282769" sha1="28f0d227cc2972d3322e7ae377d80d371a9010a0" relative="framework/core/manifest/TemplateLoader.php"/>
  <docblock>
    <description compact="Handles finding templates from a stack of template manifest objects."/>
    <package value="framework"/>
    <subpackage value="manifest"/>
  </docblock>
  <member name="instance" type="{unknown}" visibility="private" line="13">
    <docblock>
      <description/>
      <var type="object">
        <type full="SS_TemplateLoader" namespace="" name="SS_TemplateLoader"/>
      </var>
    </docblock>
  </member>
  <member name="manifests" type="array" visibility="protected" line="18">
    <docblock>
      <description/>
      <var type="array" of="object">
        <type full="SS_TemplateManifest" namespace="" name="SS_TemplateManifest"/>
      </var>
    </docblock>
  </member>
  <method name="instance" start="23" end="25" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="SS_TemplateLoader" namespace="" name="SS_TemplateLoader"/>
      </return>
    </docblock>
  </method>
  <method name="getManifest" start="32" end="34" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the currently active template manifest instance."/>
      <return type="object">
        <type full="SS_TemplateManifest" namespace="" name="SS_TemplateManifest"/>
      </return>
    </docblock>
  </method>
  <method name="pushManifest" start="39" end="41" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$manifest">
        <type full="SS_TemplateManifest" namespace="" name="SS_TemplateManifest"/>
      </param>
    </docblock>
    <parameter name="manifest" byreference="false" type="object">
      <type full="\\SS_TemplateManifest" namespace="\" name="SS_TemplateManifest"/>
    </parameter>
  </method>
  <method name="popManifest" start="46" end="48" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="SS_TemplateManifest" namespace="" name="SS_TemplateManifest"/>
      </return>
    </docblock>
  </method>
  <method name="findTemplates" start="64" end="88" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Attempts to find possible candidate templates from a set of template names from modules, current theme directory and finally the application folder.">The template names can be passed in as plain strings, or be in the
format "type/name", where type is the type of template to search for
(e.g. Includes, Layout).</description>
      <param type="object" variable="$templates">
        <type full="string|array" namespace="" name="string|array"/>
      </param>
      <param type="string" variable="$theme"/>
      <return type="array"/>
    </docblock>
    <parameter name="templates" byreference="false" type="{unknown}"/>
    <parameter name="theme" byreference="false" type="{unknown}" default="null"/>
  </method>
</class>
