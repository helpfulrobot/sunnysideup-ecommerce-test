<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Log_Filter_Message" namespace="" name="Zend_Log_Filter_Message" abstract="false" final="false" start="34" end="85">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/Zend/Log/Filter" file="Message.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/Zend/Log/Filter/Message.php" size="2474" time="2015-03-14T10:41:29+13:00" unixtime="1426282889" sha1="8a0cb16646bcfeabb2b0b6ef7332053d51257053" relative="framework/thirdparty/Zend/Log/Filter/Message.php"/>
  <docblock>
    <description/>
    <category value="Zend"/>
    <package value="Zend_Log"/>
    <subpackage value="Filter"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
    <version value="$Id: Message.php 23775 2011-03-01 17:25:24Z ralph $"/>
  </docblock>
  <extends full="Zend_Log_Filter_Abstract" namespace="" name="Zend_Log_Filter_Abstract"/>
  <member name="_regexp" type="{unknown}" visibility="protected" line="39">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="48" end="55" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Filter out any log messages not matching $regexp."/>
      <param description="Regular expression to test the log message" type="string" variable="$regexp"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
      <throws type="object">
        <type full="Zend_Log_Exception" namespace="" name="Zend_Log_Exception"/>
      </throws>
    </docblock>
    <parameter name="regexp" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="factory" start="63" end="73" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Create a new instance of Zend_Log_Filter_Message"/>
      <param type="object" variable="$config">
        <type full="array|Zend_Config" namespace="" name="array|Zend_Config"/>
      </param>
      <return type="object">
        <type full="Zend_Log_Filter_Message" namespace="" name="Zend_Log_Filter_Message"/>
      </return>
    </docblock>
    <parameter name="config" byreference="false" type="{unknown}"/>
  </method>
  <method name="accept" start="81" end="84" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns TRUE to accept the message, FALSE to block it."/>
      <param description="event data" type="array" variable="$event"/>
      <return description="accepted?" type="boolean"/>
    </docblock>
    <parameter name="event" byreference="false" type="{unknown}"/>
  </method>
  <parent full="Zend_Log_Filter_Abstract" namespace="" name="Zend_Log_Filter_Abstract">
    <method name="_parseConfig" start="47" end="59" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Validate and optionally convert the config to array"/>
        <param description="Zend_Config or Array" type="object" variable="$config">
          <type full="array|Zend_Config" namespace="" name="array|Zend_Config"/>
        </param>
        <return type="array"/>
        <throws type="object">
          <type full="Zend_Log_Exception" namespace="" name="Zend_Log_Exception"/>
        </throws>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
  </parent>
  <interface full="Zend_Log_Filter_Interface" namespace="" name="Zend_Log_Filter_Interface">
    <method name="accept" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns TRUE to accept the message, FALSE to block it."/>
        <param description="event data" type="array" variable="$event"/>
        <return description="accepted?" type="boolean"/>
      </docblock>
      <parameter name="event" byreference="false" type="{unknown}"/>
    </method>
  </interface>
  <interface full="Zend_Log_FactoryInterface" namespace="" name="Zend_Log_FactoryInterface">
    <method name="factory" start="37" end="37" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Construct a Zend_Log driver"/>
        <param type="object" variable="$config">
          <type full="array|Zend_Config" namespace="" name="array|Zend_Config"/>
        </param>
        <return type="object">
          <type full="Zend_Log_FactoryInterface" namespace="" name="Zend_Log_FactoryInterface"/>
        </return>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
  </interface>
</class>
