<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SimpleCookieJar" namespace="" name="SimpleCookieJar" abstract="false" final="false" start="228" end="379">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/simpletest" file="cookies.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/simpletest/cookies.php" size="11826" time="2015-03-14T10:41:58+13:00" unixtime="1426282918" sha1="513f7a8b2ff449d0ab3a17dd0e4ff43c5ca9dbc7" relative="framework/thirdparty/simpletest/cookies.php"/>
  <docblock>
    <description compact="Repository for cookies. This stuff is a    tiny bit browser dependent.">@package SimpleTest
   @subpackage WebTester</description>
  </docblock>
  <member name="_cookies" type="{unknown}" visibility="public" line="229"/>
  <method name="SimpleCookieJar" start="235" end="237" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor. Jar starts empty.">@access public</description>
    </docblock>
  </method>
  <method name="restartSession" start="245" end="260" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes expired and temporary cookies as if    the browser was closed and re-opened.">@param string/integer $now   Time to test expiry against.
   @access public</description>
    </docblock>
    <parameter name="date" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="agePrematurely" start="270" end="274" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ages all cookies in the cookie jar.">@param integer $interval     The old session is moved
                                into the past by this number
                                of seconds. Cookies now over
                                age will be removed.
   @access public</description>
    </docblock>
    <parameter name="interval" byreference="false" type="{unknown}"/>
  </method>
  <method name="setCookie" start="286" end="292" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets an additional cookie. If a cookie has    the same name and path it is replaced.">@param string $name       Cookie key.
   @param string $value      Value of cookie.
   @param string $host       Host upon which the cookie is valid.
   @param string $path       Cookie path if not host wide.
   @param string $expiry     Expiry date.
   @access public</description>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="host" byreference="false" type="{unknown}" default="false"/>
    <parameter name="path" byreference="false" type="string" default="'/'"/>
    <parameter name="expiry" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="_findFirstMatch" start="301" end="313" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds a matching cookie to write over or the    first empty slot if none.">@param SimpleCookie $cookie    Cookie to write into jar.
   @return integer                Available slot.
   @access private</description>
    </docblock>
    <parameter name="cookie" byreference="false" type="{unknown}"/>
  </method>
  <method name="getCookieValue" start="326" end="337" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Reads the most specific cookie value from the    browser cookies. Looks for the longest path that    matches.">@param string $host        Host to search.
   @param string $path        Applicable path.
   @param string $name        Name of cookie to read.
   @return string             False if not present, else the
                              value as a string.
   @access public</description>
    </docblock>
    <parameter name="host" byreference="false" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="_isMatch" start="350" end="361" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Tests cookie for matching against search    criteria.">@param SimpleTest $cookie    Cookie to test.
   @param string $host          Host must match.
   @param string $path          Cookie path must be shorter than
                                this path.
   @param string $name          Name must match.
   @return boolean              True if matched.
   @access private</description>
    </docblock>
    <parameter name="cookie" byreference="false" type="{unknown}"/>
    <parameter name="host" byreference="false" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="selectAsPairs" start="370" end="378" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Uses a URL to sift relevant cookies by host and    path. Results are list of strings of form &quot;name=value&quot;.">@param SimpleUrl $url       Url to select by.
   @return array               Valid name and value pairs.
   @access public</description>
    </docblock>
    <parameter name="url" byreference="false" type="{unknown}"/>
  </method>
</class>
