<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="sfYaml" namespace="" name="sfYaml" abstract="false" final="false" start="19" end="125">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/thirdparty/zend_translate_railsyaml/library/Translate/Adapter/thirdparty/sfYaml/lib" file="sfYaml.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/thirdparty/zend_translate_railsyaml/library/Translate/Adapter/thirdparty/sfYaml/lib/sfYaml.php" size="3318" time="2015-03-14T10:42:29+13:00" unixtime="1426282949" sha1="e14b25a2f6e17937388c4669fa3793390863a6a3" relative="framework/thirdparty/zend_translate_railsyaml/library/Translate/Adapter/thirdparty/sfYaml/lib/sfYaml.php"/>
  <docblock>
    <description compact="sfYaml offers convenience methods to load and dump YAML."/>
    <package value="symfony"/>
    <subpackage value="yaml"/>
    <author value="Fabien Potencier &lt;fabien.potencier@symfony-project.com&gt;"/>
    <version value="SVN: $Id: sfYaml.class.php 8988 2008-05-15 20:24:26Z fabien $"/>
  </docblock>
  <member name="spec" type="string" default="'1.2'" visibility="protected" line="21"/>
  <method name="setSpecVersion" start="29" end="37" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Sets the YAML specification version to use."/>
      <param description="The YAML specification version" type="string" variable="$version"/>
    </docblock>
    <parameter name="version" byreference="false" type="{unknown}"/>
  </method>
  <method name="getSpecVersion" start="44" end="47" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Gets the YAML specification version to use."/>
      <return description="The YAML specification version" type="string"/>
    </docblock>
  </method>
  <method name="load" start="67" end="104" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Loads YAML into a PHP array.">The load method, when supplied with a YAML stream (string or file),
will do its best to convert YAML in a file into a PHP array.

 Usage:
 &lt;code&gt;
  $array = sfYaml::load('config.yml');
  print_r($array);
 &lt;/code&gt;</description>
      <param description="Path of YAML file or string containing YAML" type="string" variable="$input"/>
      <return description="The YAML converted to a PHP array" type="array"/>
      <throws description="If the YAML is not valid" type="object">
        <type full="InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="input" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="if input is a file, process it" line="71"/>
      <comment value="if an array is returned by the config file assume it's in plain php form else in YAML" line="80"/>
      <comment value="if an array is returned by the config file assume it's in plain php form else in YAML" line="84"/>
    </inline>
  </method>
  <method name="dump" start="117" end="124" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Dumps a PHP array to a YAML string.">The dump method, when supplied with an array, will do its best
to convert the array into friendly YAML.</description>
      <param description="PHP array" type="array" variable="$array"/>
      <param description="The level where you switch to inline YAML" type="integer" variable="$inline"/>
      <return description="A YAML string representing the original PHP array" type="string"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="inline" byreference="false" type="integer" default="2"/>
  </method>
</class>
