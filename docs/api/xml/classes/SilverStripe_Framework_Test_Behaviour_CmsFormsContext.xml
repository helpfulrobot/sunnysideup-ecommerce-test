<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SilverStripe\Framework\Test\Behaviour\CmsFormsContext" namespace="SilverStripe\Framework\Test\Behaviour" name="CmsFormsContext" abstract="false" final="false" start="26" end="269">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/tests/behat/features/bootstrap/SilverStripe/Framework/Test/Behaviour" file="CmsFormsContext.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/tests/behat/features/bootstrap/SilverStripe/Framework/Test/Behaviour/CmsFormsContext.php" size="8152" time="2015-03-14T10:41:01+13:00" unixtime="1426282861" sha1="de59daca07868b307c543eeacdc5960c6ca4db07" relative="framework/tests/behat/features/bootstrap/SilverStripe/Framework/Test/Behaviour/CmsFormsContext.php"/>
  <docblock>
    <description compact="CmsFormsContext">Context used to define steps related to forms inside CMS.</description>
  </docblock>
  <extends full="Behat\Behat\Context\BehatContext" namespace="Behat\Behat\Context" name="BehatContext"/>
  <member name="context" type="{unknown}" visibility="protected" line="27"/>
  <constructor name="__construct" start="35" end="38" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Initializes context.">Every scenario gets it's own context object.</description>
      <param description="context parameters (set them up through behat.yml)" type="array" variable="$parameters"/>
    </docblock>
    <parameter name="parameters" byreference="false" type="array"/>
    <inline>
      <comment value="Initialize your context here" line="36"/>
    </inline>
  </constructor>
  <method name="getSession" start="43" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get Mink session from MinkContext"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="fixStepArgument" start="54" end="56" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns fixed step argument (with \\&quot; replaced back to &quot;).">Copied from <see xmlns="http://xml.phpdox.net/src" value="MinkContext"/></description>
      <param type="string" variable="$argument"/>
      <return type="string"/>
    </docblock>
    <parameter name="argument" byreference="false" type="{unknown}"/>
  </method>
  <method name="stepIShouldSeeAnEditPageForm" start="61" end="70" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <then value="/^I should( not? |\s*)see an edit page form$/"/>
    </docblock>
    <parameter name="negative" byreference="false" type="{unknown}"/>
  </method>
  <method name="stepIFillInTheHtmlFieldWith" start="76" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <when value="/^I fill in the &quot;(?P&lt;field&gt;(?:[^&quot;]|\\&quot;)*)&quot; HTML field with &quot;(?P&lt;value&gt;(?:[^&quot;]|\\&quot;)*)&quot;$/"/>
      <when value="/^I fill in &quot;(?P&lt;value&gt;(?:[^&quot;]|\\&quot;)*)&quot; for the &quot;(?P&lt;field&gt;(?:[^&quot;]|\\&quot;)*)&quot; HTML field$/"/>
    </docblock>
    <parameter name="field" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="stepIAppendTotheHtmlField" start="94" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <when value="/^I append &quot;(?P&lt;value&gt;(?:[^&quot;]|\\&quot;)*)&quot; to the &quot;(?P&lt;field&gt;(?:[^&quot;]|\\&quot;)*)&quot; HTML field$/"/>
    </docblock>
    <parameter name="field" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="theHtmlFieldShouldContain" start="112" end="142" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <then value="/^the &quot;(?P&lt;locator&gt;(?:[^&quot;]|\\&quot;)*)&quot; HTML field should(?P&lt;negative&gt; not? |\s*)contain &quot;(?P&lt;html&gt;.*)&quot;$/"/>
    </docblock>
    <parameter name="locator" byreference="false" type="{unknown}"/>
    <parameter name="negative" byreference="false" type="{unknown}"/>
    <parameter name="html" byreference="false" type="{unknown}"/>
  </method>
  <method name="stepContentInHtmlFieldShouldHaveFormatting" start="156" end="185" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks formatting in the HTML field, by analyzing the HTML node surrounding the text for certain properties.">Example: Given "my text" in the "Content" HTML field should be right aligned
Example: Given "my text" in the "Content" HTML field should not be bold</description>
      <todo value="Use an actual DOM parser for more accurate assertions"/>
      <given value="/^&quot;(?P&lt;text&gt;([^&quot;]*))&quot; in the &quot;(?P&lt;field&gt;(?:[^&quot;]|\\&quot;)*)&quot; HTML field should(?P&lt;negate&gt;(?: not)?) be (?P&lt;formatting&gt;(.*))$/"/>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
    <parameter name="field" byreference="false" type="{unknown}"/>
    <parameter name="negate" byreference="false" type="{unknown}"/>
    <parameter name="formatting" byreference="false" type="{unknown}"/>
  </method>
  <method name="stepIHighlightTextInHtmlField" start="194" end="228" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Selects the first textual match in the HTML editor. Does not support selection across DOM node boundaries."/>
      <when value="/^I select &quot;(?P&lt;text&gt;([^&quot;]*))&quot; in the &quot;(?P&lt;field&gt;(?:[^&quot;]|\\&quot;)*)&quot; HTML field$/"/>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
    <parameter name="field" byreference="false" type="{unknown}"/>
  </method>
  <method name="iShouldSeeAButton" start="236" end="249" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Example: I should see a &quot;Submit&quot; button Example: I should not see a &quot;Delete&quot; button"/>
      <given value="/^I should( not? |\s*)see a &quot;([^&quot;]*)&quot; button$/"/>
    </docblock>
    <parameter name="negative" byreference="false" type="{unknown}"/>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="iShouldSeeAField" start="254" end="267" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <given value="/^I should( not? |\s*)see a &quot;([^&quot;]*)&quot; field$/"/>
    </docblock>
    <parameter name="negative" byreference="false" type="{unknown}"/>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
</class>
