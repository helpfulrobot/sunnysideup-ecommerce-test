<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="UploadTest_Validator" namespace="" name="UploadTest_Validator" abstract="false" final="false" start="628" end="667">
  <file path="/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/tests/filesystem" file="UploadTest.php" realpath="/var/www/_modules/ecommerce_test/trunk/framework/tests/filesystem/UploadTest.php" size="17636" time="2015-03-14T10:41:08+13:00" unixtime="1426282868" sha1="ee0e6a955b76aa4f8876c015d3ba2df370890321" relative="framework/tests/filesystem/UploadTest.php"/>
  <extends full="Upload_Validator" namespace="" name="Upload_Validator"/>
  <implements full="TestOnly" namespace="" name="TestOnly"/>
  <method name="validate" start="637" end="665" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Looser check validation that doesn't do is_upload_file() checks as we're faking a POST request that PHP didn't generate itself."/>
      <return type="boolean"/>
    </docblock>
    <inline>
      <comment value="filesize validation" line="639"/>
      <comment value="extension validation" line="653"/>
    </inline>
  </method>
  <parent full="Upload_Validator" namespace="" name="Upload_Validator">
    <member name="tmpFile" type="{unknown}" visibility="protected" line="314">
      <docblock>
        <description compact="Information about the temporary file produced by the PHP-runtime."/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="errors" type="array" visibility="protected" line="316"/>
    <member name="allowedMaxFileSize" type="array" visibility="public" line="325">
      <docblock>
        <description compact="Restrict filesize for either all filetypes or a specific extension, with extension-name as array-key and the size-restriction in bytes as array-value."/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="allowedExtensions" type="array" visibility="public" line="336">
      <docblock>
        <description/>
        <var description="Collection of extensions." type="array">Extension-names are treated case-insensitive.

Example:
&lt;code&gt;
	array("jpg","GIF")
&lt;/code&gt;</var>
      </docblock>
    </member>
    <method name="getErrors" start="344" end="346" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return all errors that occurred while validating the temporary file."/>
        <return type="array"/>
      </docblock>
    </method>
    <method name="setTmpFile" start="352" end="354" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set information about temporary file produced by PHP."/>
        <param type="array" variable="$tmpFile"/>
      </docblock>
      <parameter name="tmpFile" byreference="false" type="{unknown}"/>
    </method>
    <method name="getAllowedMaxFileSize" start="362" end="369" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get maximum file size for all or specified file extension."/>
        <param type="string" variable="$ext"/>
        <return description="Filesize in bytes" type="int"/>
      </docblock>
      <parameter name="ext" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="setAllowedMaxFileSize" start="383" end="391" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set filesize maximums (in bytes).">Automatically converts extensions to lowercase
for easier matching.

Example:
&lt;code&gt;
array('*' =&gt; 200, 'jpg' =&gt; 1000)
&lt;/code&gt;</description>
        <param type="object" variable="$rules">
          <type full="array|int" namespace="" name="array|int"/>
        </param>
      </docblock>
      <parameter name="rules" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="make sure all extensions are lowercase" line="385"/>
      </inline>
    </method>
    <method name="getAllowedExtensions" start="396" end="398" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="array"/>
      </docblock>
    </method>
    <method name="setAllowedExtensions" start="409" end="416" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Limit allowed file extensions. Empty by default, allowing all extensions.">To allow files without an extension, use an empty string.
See <link xmlns="http://xml.phpdox.net/src" value="File::$allowed_extensions"/> to get a good standard set of
extensions that are typically not harmful in a webserver context.
See <link xmlns="http://xml.phpdox.net/src" value="setAllowedMaxFileSize()"/> to limit file size by extension.
</description>
        <param description="List of extensions" type="array" variable="$rules"/>
      </docblock>
      <parameter name="rules" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="make sure all rules are lowercase" line="412"/>
      </inline>
    </method>
    <method name="isValidSize" start="425" end="430" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Determines if the bytesize of an uploaded file is valid - can be defined on an extension-by-extension basis in {@link $allowedMaxFileSize}"/>
        <return type="boolean"/>
      </docblock>
    </method>
    <method name="isValidExtension" start="437" end="447" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Determines if the temporary file has a valid extension An empty string in the validation map indicates files without an extension."/>
        <return type="boolean"/>
      </docblock>
      <inline>
        <comment value="Special case for filenames without an extension" line="440"/>
      </inline>
    </method>
    <method name="validate" start="456" end="492" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Run through the rules for this validator checking against the temporary file set by {@link setTmpFile()} to see if the file is deemed valid or not."/>
        <return type="boolean"/>
      </docblock>
      <inline>
        <comment value="we don't validate for empty upload fields yet" line="457"/>
        <comment value="filesize validation" line="467"/>
        <comment value="extension validation" line="480"/>
      </inline>
    </method>
  </parent>
  <interface full="TestOnly" namespace="" name="TestOnly"/>
</class>
