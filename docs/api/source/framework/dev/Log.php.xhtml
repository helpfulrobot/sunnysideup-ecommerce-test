<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of Log.php</title><link rel="stylesheet" type="text/css" href="../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file Log.php</h1><p>
                        Size: 5,809 Bytes - Last Modified: 2015-03-14T10:39:31+13:00</p><section><h2><small>/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/dev/</small>Log.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_REQUIRE_ONCE">require_once</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Zend/Log.php'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3"><br/></div><div id="line4"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * Wrapper class for a logging handler like {@link Zend_Log}</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * which takes a message (or a map of context variables) and</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> * sends it to one or more {@link Zend_Log_Writer_Abstract}</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * subclasses for output.</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * These priorities are currently supported:</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> *  - SS_Log::ERR</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> *  - SS_Log::WARN</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> *  - SS_Log::NOTICE</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * You can add an error writer by calling {@link SS_Log::add_writer()}</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * Example usage of logging errors by email notification:</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> * &lt;code&gt;</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> * SS_Log::add_writer(new SS_LogEmailWriter('my@email.com'), SS_Log::ERR);</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> * &lt;/code&gt;</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> * Example usage of logging errors by file:</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> * &lt;code&gt;</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> *	SS_Log::add_writer(new SS_LogFileWriter('/var/log/silverstripe/errors.log'), SS_Log::ERR);</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> * &lt;/code&gt;</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> * Example usage of logging at warnings and errors by setting the priority to '&lt;=':</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT"> * &lt;code&gt;</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT"> * SS_Log::add_writer(new SS_LogEmailWriter('my@email.com'), SS_Log::WARN, '&lt;=');</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT"> * &lt;/code&gt;</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT"> *	</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT"> * Each writer object can be assigned a formatter. The formatter is</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT"> * responsible for formatting the message before giving it to the writer.</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT"> * {@link SS_LogErrorEmailFormatter} is such an example that formats errors</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT"> * into HTML for human readability in an email client.</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT"> * Formatters are added to writers like this:</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT"> * &lt;code&gt;</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT"> * $logEmailWriter = new SS_LogEmailWriter('my@email.com');</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT"> * $myEmailFormatter = new MyLogEmailFormatter();</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT"> * $logEmailWriter-&gt;setFormatter($myEmailFormatter);</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT"> * &lt;/code&gt;</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT"> * @package framework</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT"> * @subpackage dev</span></pre></div><div id="line46"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line47"><pre><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">SS_Log</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line48"><br/></div><div id="line49"><pre><span class="token T_WHITESPACE">	</span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ERR</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Zend_Log</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">ERR</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line50"><pre><span class="token T_WHITESPACE">	</span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">WARN</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Zend_Log</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">WARN</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line51"><pre><span class="token T_WHITESPACE">	</span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">NOTICE</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Zend_Log</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">NOTICE</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line52"><pre><span class="token T_WHITESPACE">	</span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">INFO</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Zend_Log</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">INFO</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line53"><pre><span class="token T_WHITESPACE">	</span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">DEBUG</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Zend_Log</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">DEBUG</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line54"><br/></div><div id="line55"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT">	 * Logger class to use.</span></pre></div><div id="line57"><pre><span class="token T_DOC_COMMENT">	 * @see SS_Log::get_logger()</span></pre></div><div id="line58"><pre><span class="token T_DOC_COMMENT">	 * @var string</span></pre></div><div id="line59"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line60"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$logger_class</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'SS_ZendLog'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line61"><br/></div><div id="line62"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">	 * @see SS_Log::get_logger()</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">	 * @var object</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line66"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$logger</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line67"><br/></div><div id="line68"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line69"><pre><span class="token T_DOC_COMMENT">	 * @var array Logs additional context from PHP's superglobals.</span></pre></div><div id="line70"><pre><span class="token T_DOC_COMMENT">	 * Caution: Depends on logger implementation (mainly targeted at {@link SS_LogEmailWriter}).</span></pre></div><div id="line71"><pre><span class="token T_DOC_COMMENT">	 * @see http://framework.zend.com/manual/en/zend.log.overview.html#zend.log.overview.understanding-fields</span></pre></div><div id="line72"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line73"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$log_globals</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line74"><pre><span class="token T_WHITESPACE">		</span><span class="token T_CONSTANT_ENCAPSED_STRING">'_SERVER'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line75"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_ACCEPT'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line76"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_ACCEPT_CHARSET'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span></pre></div><div id="line77"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_ACCEPT_ENCODING'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span></pre></div><div id="line78"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_ACCEPT_LANGUAGE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span></pre></div><div id="line79"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_REFERRER'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line80"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_USER_AGENT'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line81"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTPS'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line82"><pre><span class="token T_WHITESPACE">			</span><span class="token T_CONSTANT_ENCAPSED_STRING">'REMOTE_ADDR'</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line83"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line84"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line85"><br/></div><div id="line86"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line87"><pre><span class="token T_DOC_COMMENT">	 * Get the logger currently in use, or create a new one if it doesn't exist.</span></pre></div><div id="line88"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line89"><pre><span class="token T_DOC_COMMENT">	 * @return object</span></pre></div><div id="line90"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line91"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">get_logger</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line92"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$logger</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line93"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// Create default logger</span></pre></div><div id="line94"><pre><span class="token T_WHITESPACE">			</span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$logger</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$logger_class</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line95"><br/></div><div id="line96"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// Add default context (shouldn't change until the actual log event happens)</span></pre></div><div id="line97"><pre><span class="token T_WHITESPACE">			</span><span class="token T_FOREACH">foreach</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$log_globals</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$globalName</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$keys</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line98"><pre><span class="token T_WHITESPACE">				</span><span class="token T_FOREACH">foreach</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$keys</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line99"><pre><span class="token T_WHITESPACE">					</span><span class="token T_VARIABLE">$val</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$GLOBALS</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$globalName</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$GLOBALS</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$globalName</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line100"><pre><span class="token T_WHITESPACE">					</span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$logger</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setEventItem</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">sprintf</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'$%s[\'%s\']'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$globalName</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$val</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line101"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line102"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line103"><br/></div><div id="line104"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line105"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$logger</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line106"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line107"><br/></div><div id="line108"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line109"><pre><span class="token T_DOC_COMMENT">	 * Get all writers in use by the logger.</span></pre></div><div id="line110"><pre><span class="token T_DOC_COMMENT">	 * @return array Collection of Zend_Log_Writer_Abstract instances</span></pre></div><div id="line111"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line112"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">get_writers</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line113"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">get_logger</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getWriters</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line114"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line115"><br/></div><div id="line116"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line117"><pre><span class="token T_DOC_COMMENT">	 * Remove all writers currently in use.</span></pre></div><div id="line118"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line119"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">clear_writers</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line120"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">get_logger</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">clearWriters</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line121"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line122"><br/></div><div id="line123"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line124"><pre><span class="token T_DOC_COMMENT">	 * Remove a writer instance from the logger.</span></pre></div><div id="line125"><pre><span class="token T_DOC_COMMENT">	 * @param object $writer Zend_Log_Writer_Abstract instance</span></pre></div><div id="line126"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line127"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">remove_writer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$writer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line128"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">get_logger</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">removeWriter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$writer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line129"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line130"><br/></div><div id="line131"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line132"><pre><span class="token T_DOC_COMMENT">	 * Add a writer instance to the logger.</span></pre></div><div id="line133"><pre><span class="token T_DOC_COMMENT">	 * @param object $writer Zend_Log_Writer_Abstract instance</span></pre></div><div id="line134"><pre><span class="token T_DOC_COMMENT">	 * @param const $priority Priority. Possible values: SS_Log::ERR, SS_Log::WARN or SS_Log::NOTICE</span></pre></div><div id="line135"><pre><span class="token T_DOC_COMMENT">	 * @param $comparison Priority comparison operator.  Acts on the integer values of the error</span></pre></div><div id="line136"><pre><span class="token T_DOC_COMMENT">	 * levels, where more serious errors are lower numbers.  By default this is "=", which means only</span></pre></div><div id="line137"><pre><span class="token T_DOC_COMMENT">	 * the given priority will be logged.  Set to "&lt;=" if you want to track errors of *at least* </span></pre></div><div id="line138"><pre><span class="token T_DOC_COMMENT">	 * the given priority.</span></pre></div><div id="line139"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line140"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">add_writer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$writer</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$priority</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comparison</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'='</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line141"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$priority</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$writer</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addFilter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Zend_Log_Filter_Priority</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$priority</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$comparison</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line142"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">get_logger</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">addWriter</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$writer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line143"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line144"><br/></div><div id="line145"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line146"><pre><span class="token T_DOC_COMMENT">	 * Dispatch a message by priority level.</span></pre></div><div id="line147"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line148"><pre><span class="token T_DOC_COMMENT">	 * The message parameter can be either a string (a simple error</span></pre></div><div id="line149"><pre><span class="token T_DOC_COMMENT">	 * message), or an array of variables. The latter is useful for passing</span></pre></div><div id="line150"><pre><span class="token T_DOC_COMMENT">	 * along a list of debug information for the writer to handle, such as</span></pre></div><div id="line151"><pre><span class="token T_DOC_COMMENT">	 * error code, error line, error context (backtrace).</span></pre></div><div id="line152"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line153"><pre><span class="token T_DOC_COMMENT">	 * @param mixed $message Exception object or array of error context variables</span></pre></div><div id="line154"><pre><span class="token T_DOC_COMMENT">	 * @param const $priority Priority. Possible values: SS_Log::ERR, SS_Log::WARN or SS_Log::NOTICE</span></pre></div><div id="line155"><pre><span class="token T_DOC_COMMENT">	 * @param  mixed    $extras    Extra information to log in event</span></pre></div><div id="line156"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line157"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">log</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$message</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$priority</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$extras</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line158"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$message</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Exception</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line159"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$message</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line160"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errno'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line161"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errstr'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$message</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getMessage</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line162"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errfile'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$message</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getFile</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line163"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errline'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$message</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getLine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line164"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errcontext'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$message</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getTrace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line165"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line166"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">is_string</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$message</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line167"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$trace</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">SS_Backtrace</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">filtered_backtrace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line168"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$lastTrace</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$trace</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line169"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$message</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line170"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errno'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line171"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errstr'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$message</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line172"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errfile'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$lastTrace</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'file'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$lastTrace</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'file'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line173"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errline'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$lastTrace</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'line'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$lastTrace</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'line'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line174"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'errcontext'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$trace</span></pre></div><div id="line175"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line176"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line177"><pre><span class="token T_WHITESPACE">		</span><span class="token T_TRY">try</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line178"><pre><span class="token T_WHITESPACE">			</span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">get_logger</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">log</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$message</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$priority</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$extras</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line179"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_CATCH">catch</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Exception</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$e</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line180"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// @todo How do we handle exceptions thrown from Zend_Log?</span></pre></div><div id="line181"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// For example, an exception is thrown if no writers are added</span></pre></div><div id="line182"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line183"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line184"><br/></div><div id="line185"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line186"><br/></div></td></tr></table></section></div><footer><span/></footer></body></html>
