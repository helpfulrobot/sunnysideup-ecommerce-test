<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of CSSContentParser.php</title><link rel="stylesheet" type="text/css" href="../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file CSSContentParser.php</h1><p>
                        Size: 3,591 Bytes - Last Modified: 2015-03-14T10:39:31+13:00</p><section><h2><small>/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/dev/</small>CSSContentParser.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> * CSSContentParser enables parsing &amp; assertion running of HTML content via CSS selectors.</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * It works by converting the content to XHTML using tidy, rewriting the CSS selectors as XPath queries, and executing</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * those using SimpeXML.</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * It was built to facilitate testing using PHPUnit and contains a number of assert methods that will throw PHPUnit</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * assertion exception when applicable.</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> * Tries to use the PHP tidy extension (http://php.net/tidy),</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> * and falls back to the "tidy" CLI tool. If none of those exists,</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> * the string is parsed directly without sanitization.</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * Caution: Doesn't fully support HTML elements like &lt;header&gt;</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> * due to them being declared illegal by the "tidy" preprocessing step.</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> * @package framework</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> * @subpackage core</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line21"><pre><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">CSSContentParser</span><span class="token T_WHITESPACE"> </span><span class="token T_EXTENDS">extends</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Object</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line22"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$simpleXML</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line23"><pre><span class="token T_WHITESPACE">	</span></pre></div><div id="line24"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$content</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line25"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">extension_loaded</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'tidy'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line26"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// using the tidy php extension</span></pre></div><div id="line27"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$tidy</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">tidy</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line28"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$tidy</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">parseString</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line29"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$content</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span></pre></div><div id="line30"><pre><span class="token T_WHITESPACE">				</span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line31"><pre><span class="token T_WHITESPACE">					</span><span class="token T_CONSTANT_ENCAPSED_STRING">'output-xhtml'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line32"><pre><span class="token T_WHITESPACE">					</span><span class="token T_CONSTANT_ENCAPSED_STRING">'numeric-entities'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_COMMA">,</span></pre></div><div id="line33"><pre><span class="token T_WHITESPACE">					</span><span class="token T_CONSTANT_ENCAPSED_STRING">'wrap'</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// We need this to be consistent for functional test string comparisons</span></pre></div><div id="line34"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span></pre></div><div id="line35"><pre><span class="token T_WHITESPACE">				</span><span class="token T_CONSTANT_ENCAPSED_STRING">'utf8'</span></pre></div><div id="line36"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line37"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$tidy</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">cleanRepair</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line38"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$tidy</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">str_replace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'xmlns="http://www.w3.org/1999/xhtml"'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_VARIABLE">$tidy</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line39"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$tidy</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">str_replace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'&amp;#160;'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_VARIABLE">$tidy</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line40"><br/></div><div id="line41"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_AT">@</span><span class="token T_STRING">shell_exec</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'which tidy'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line42"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// using tiny through cli</span></pre></div><div id="line43"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$CLI_content</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">escapeshellarg</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$content</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line44"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$tidy</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_BACKTICK">`</span><span class="token T_ENCAPSED_AND_WHITESPACE">echo </span><span class="token T_VARIABLE">$CLI_content</span><span class="token T_ENCAPSED_AND_WHITESPACE"> | tidy --force-output 1 -n -q -utf8 -asxhtml -w 0 2&gt; /dev/null</span><span class="token T_PHPDOX_BACKTICK">`</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line45"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$tidy</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">str_replace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'xmlns="http://www.w3.org/1999/xhtml"'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_VARIABLE">$tidy</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line46"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$tidy</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">str_replace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'&amp;#160;'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_VARIABLE">$tidy</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line47"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line48"><pre><span class="token T_WHITESPACE">			</span><span class="token T_COMMENT">// no tidy library found, hence no sanitizing</span></pre></div><div id="line49"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$tidy</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$content</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line50"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line51"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line52"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">simpleXML</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_AT">@</span><span class="token T_STRING">simplexml_load_string</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tidy</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'SimpleXMLElement'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">LIBXML_NOWARNING</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line53"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">simpleXML</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line54"><pre><span class="token T_WHITESPACE">			</span><span class="token T_THROW">throw</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Exception</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'CSSContentParser::__construct(): Could not parse content.'</span></pre></div><div id="line55"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">' Please check the PHP extension tidy is installed.'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line56"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line57"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">parent</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line59"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line60"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line61"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT">	 * Returns a number of SimpleXML elements that match the given CSS selector.</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">	 * Currently the selector engine only supports querying by tag, id, and class.</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">	 * See {@link getByXpath()} for a more direct selector syntax.</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line66"><pre><span class="token T_DOC_COMMENT">	 * @param String $selector</span></pre></div><div id="line67"><pre><span class="token T_DOC_COMMENT">	 * @return SimpleXMLElement</span></pre></div><div id="line68"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line69"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getBySelector</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$selector</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line70"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$xpath</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">selector2xpath</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$selector</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line71"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getByXpath</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$xpath</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line72"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line73"><pre><span class="token T_WHITESPACE">	</span></pre></div><div id="line74"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line75"><pre><span class="token T_DOC_COMMENT">	 * Allows querying the content through XPATH selectors.</span></pre></div><div id="line76"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line77"><pre><span class="token T_DOC_COMMENT">	 * @param String $xpath SimpleXML compatible XPATH statement</span></pre></div><div id="line78"><pre><span class="token T_DOC_COMMENT">	 * @return SimpleXMLElement|false</span></pre></div><div id="line79"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line80"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getByXpath</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$xpath</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line81"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">simpleXML</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">xpath</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$xpath</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line82"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line83"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line84"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line85"><pre><span class="token T_DOC_COMMENT">	 * Converts a CSS selector into an equivalent xpath expression.</span></pre></div><div id="line86"><pre><span class="token T_DOC_COMMENT">	 * Currently the selector engine only supports querying by tag, id, and class.</span></pre></div><div id="line87"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line88"><pre><span class="token T_DOC_COMMENT">	 * @param String $selector See {@link getBySelector()}</span></pre></div><div id="line89"><pre><span class="token T_DOC_COMMENT">	 * @return String XPath expression</span></pre></div><div id="line90"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line91"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">selector2xpath</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$selector</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line92"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$parts</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">preg_split</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'/\\s+/'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$selector</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line93"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$xpath</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">""</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line94"><pre><span class="token T_WHITESPACE">		</span><span class="token T_FOREACH">foreach</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$parts</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$part</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line95"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'/^([A-Za-z][A-Za-z0-9]*)/'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$part</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$matches</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line96"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$xpath</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_ENCAPSED_AND_WHITESPACE">//</span><span class="token T_VARIABLE">$matches</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_NUM_STRING">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line97"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line98"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$xpath</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"//*"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line99"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line100"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$xfilters</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line101"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'/#([^#.\[]+)/'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$part</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$matches</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line102"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$xfilters</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_ENCAPSED_AND_WHITESPACE">@id='</span><span class="token T_VARIABLE">$matches</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_NUM_STRING">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_ENCAPSED_AND_WHITESPACE">'</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line103"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line104"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">preg_match</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'/\.([^#.\[]+)/'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$part</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$matches</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line105"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$xfilters</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_ENCAPSED_AND_WHITESPACE">contains(@class,'</span><span class="token T_VARIABLE">$matches</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_NUM_STRING">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_ENCAPSED_AND_WHITESPACE">')</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line106"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line107"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$xfilters</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$xpath</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'['</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">implode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">','</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$xfilters</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">']'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line108"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line109"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$xpath</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE">		</span></pre></div><div id="line110"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line111"><br/></div><div id="line112"><br/></div><div id="line113"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line114"><br/></div></td></tr></table></section></div><footer><span/></footer></body></html>
