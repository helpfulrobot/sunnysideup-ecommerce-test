<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of TemplateGlobalProvider.php</title><link rel="stylesheet" type="text/css" href="../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file TemplateGlobalProvider.php</h1><p>
                        Size: 1,351 Bytes - Last Modified: 2015-03-14T10:42:30+13:00</p><section><h2><small>/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/view/</small>TemplateGlobalProvider.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * Interface that is implemented by any classes that want to expose a method that can be called in any </span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> * scope in a template.</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * Director::AbsoluteBaseURL is an example of this.</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * @package framework</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * @subpackage core</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line11"><pre><span class="token T_INTERFACE">interface</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TemplateGlobalProvider</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line12"><br/></div><div id="line13"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT">	 * Called by SSViewer to get a list of global variables to expose to the template, the static method to call on</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT">	 * this class to get the value for those variables, and the class to use for casting the returned value for use</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT">	 * in a template</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT">	 * If the method to call is not included for a particular template variable, a method named the same as the</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT">	 * template variable will be called</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT">	 * If the casting class is not specified for a particular template variable, ViewableData::$default_cast is used</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT">	 * The first letter of the template variable is case-insensitive. However the method name is always case sensitive.</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT">	 * @abstract</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT">	 * @return array Returns an array of items. Each key =&gt; value pair is one of three forms:</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT">	 *  - template name (no key)</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT">	 *  - template name =&gt; method name</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT">	 *  - template name =&gt; array(), where the array can contain these key =&gt; value pairs</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT">	 *     - "method" =&gt; method name</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT">	 *     - "casting" =&gt; casting class to use (i.e., Varchar, HTMLText, etc)</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line33"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">get_template_global_variables</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line34"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line35"><br/></div><div id="line36"><br/></div></td></tr></table></section></div><footer><span/></footer></body></html>
