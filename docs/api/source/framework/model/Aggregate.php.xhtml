<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of Aggregate.php</title><link rel="stylesheet" type="text/css" href="../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file Aggregate.php</h1><p>
                        Size: 6,742 Bytes - Last Modified: 2015-03-14T10:40:57+13:00</p><section><h2><small>/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../framework/model/</small>Aggregate.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker" href="#line187">187</a><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a><a class="anker" href="#line193">193</a><a class="anker" href="#line194">194</a><a class="anker" href="#line195">195</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> * Calculate an Aggregate on a particular field of a particular DataObject type (possibly with</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * an additional filter before the aggregate)</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> * Implemented as a class to provide a semi-DSL method of calculating Aggregates. DataObject has a function</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> * that will create &amp; return an instance of this class with the DataObject type and filter set,</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * but at that point we don't yet know the aggregate function or field</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> * This class captures any XML_val or unknown call, and uses that to get the field &amp; aggregate function &amp;</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> * then return the result</span></pre></div><div id="line13"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line14"><pre><span class="token T_DOC_COMMENT"> * Two ways of calling</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> * $aggregate-&gt;XML_val(aggregate_function, array(field))     - For templates</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * $aggregate-&gt;aggregate_function(field)                     - For PHP</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> * Aggregate functions are uppercased by this class, but are otherwise assumed to be valid SQL functions. Some</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> * examples: Min, Max, Avg</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> * Aggregates are often used as portions of a cacheblock key. They are therefore cached themselves, in the 'aggregate'</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> * cache, although the invalidation logic prefers speed over keeping valid data. </span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> * The aggregate cache is cleared through {@link DataObject::flushCache()}, which in turn is called on</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> * {@link DataObject-&gt;write()} and other write operations. </span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> * This means most write operations to the database will invalidate the cache correctly.</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> * Use {@link Aggregate::flushCache()} to manually clear.</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT"> * NOTE: The cache logic uses tags, and so a backend that supports tags is required. Currently only the File</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT"> * backend (and the two-level backend with the File backend as the slow store) meets this requirement</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT"> * @deprecated 3.1 Use DataList to aggregate data</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT"> * @author hfried</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT"> * @package framework</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT"> * @subpackage core</span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line38"><pre><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Aggregate</span><span class="token T_WHITESPACE"> </span><span class="token T_EXTENDS">extends</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ViewableData</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line39"><br/></div><div id="line40"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$cache</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line41"><pre><span class="token T_WHITESPACE">	</span></pre></div><div id="line42"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/** Build &amp; cache the cache object */</span></pre></div><div id="line43"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">cache</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line44"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$cache</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$cache</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$cache</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">SS_Cache</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">factory</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'aggregate'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line45"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line46"><br/></div><div id="line47"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/** </span></pre></div><div id="line48"><pre><span class="token T_DOC_COMMENT">	 * Clear the aggregate cache for a given type, or pass nothing to clear all aggregate caches.</span></pre></div><div id="line49"><pre><span class="token T_DOC_COMMENT">	 * {@link $class} is just effective if the cache backend supports tags.</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line51"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">flushCache</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line52"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$cache</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">cache</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line53"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$backend</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$cache</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getBackend</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line54"><br/></div><div id="line55"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span></pre></div><div id="line56"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$backend</span><span class="token T_WHITESPACE"> </span><span class="token T_INSTANCEOF">instanceof</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Zend_Cache_Backend_ExtendedInterface</span></pre></div><div id="line57"><pre><span class="token T_WHITESPACE">			</span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$capabilities</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$backend</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getCapabilities</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">			</span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$capabilities</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_CONSTANT_ENCAPSED_STRING">'tags'</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span></pre></div><div id="line59"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line60"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$class</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$class</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'DataObject'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line61"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$cache</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">clean</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Zend_Cache</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">CLEANING_MODE_MATCHING_TAG</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'aggregate'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line62"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line63"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$tags</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ClassInfo</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">ancestry</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line64"><pre><span class="token T_WHITESPACE">				</span><span class="token T_FOREACH">foreach</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$tags</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_AMPERSAND">&amp;</span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line65"><pre><span class="token T_WHITESPACE">					</span><span class="token T_VARIABLE">$tag</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">preg_replace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'/[^a-zA-Z0-9_]/'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'_'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tag</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line66"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line67"><pre><span class="token T_WHITESPACE">				</span><span class="token T_VARIABLE">$cache</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">clean</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Zend_Cache</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">CLEANING_MODE_MATCHING_ANY_TAG</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$tags</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line68"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line69"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line70"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$cache</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">clean</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">Zend_Cache</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">CLEANING_MODE_ALL</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line71"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line72"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line73"><pre><span class="token T_WHITESPACE">	</span></pre></div><div id="line74"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line75"><pre><span class="token T_DOC_COMMENT">	 * Constructor</span></pre></div><div id="line76"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line77"><pre><span class="token T_DOC_COMMENT">	 * @deprecated 3.1 Use DataList to aggregate data</span></pre></div><div id="line78"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line79"><pre><span class="token T_DOC_COMMENT">	 * @param string $type The DataObject type we are building an aggregate for</span></pre></div><div id="line80"><pre><span class="token T_DOC_COMMENT">	 * @param string $filter (optional) An SQL filter to apply to the selected rows before calculating the aggregate</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line82"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$filter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line83"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">Deprecation</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">notice</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'3.1'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'Call aggregate methods on a DataList directly instead. In templates'</span></pre></div><div id="line84"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">' an example of the new syntax is &amp;lt% cached List(Member).max(LastEdited) %&amp;gt instead'</span></pre></div><div id="line85"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">' (check partial-caching.md documentation for more details.)'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line86"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">type</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$type</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line87"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">filter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$filter</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line88"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">parent</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line90"><br/></div><div id="line91"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line92"><pre><span class="token T_DOC_COMMENT">	 * Build the SQLQuery to calculate the aggregate</span></pre></div><div id="line93"><pre><span class="token T_DOC_COMMENT">	 * This is a seperate function so that subtypes of Aggregate can change just this bit</span></pre></div><div id="line94"><pre><span class="token T_DOC_COMMENT">	 * @param string $attr - the SQL field statement for selection (i.e. "MAX(LastUpdated)")</span></pre></div><div id="line95"><pre><span class="token T_DOC_COMMENT">	 * @return SQLQuery</span></pre></div><div id="line96"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line97"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">query</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$attr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line98"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$query</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">DataList</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">create</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">where</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">filter</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line99"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$query</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setSelect</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$attr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line100"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$query</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setOrderBy</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span></pre></div><div id="line101"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$singleton</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">extend</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'augmentSQL'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$query</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line102"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$query</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line103"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line104"><pre><span class="token T_WHITESPACE">	</span></pre></div><div id="line105"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line106"><pre><span class="token T_DOC_COMMENT">	 * Entry point for being called from a template.</span></pre></div><div id="line107"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line108"><pre><span class="token T_DOC_COMMENT">	 * This gets the aggregate function </span></pre></div><div id="line109"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line110"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line111"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">XML_val</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$args</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$cache</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line112"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$func</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strtoupper</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'get'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">substr</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">3</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$name</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line113"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$attribute</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$args</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$args</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'ID'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line114"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line115"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$table</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line116"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line117"><pre><span class="token T_WHITESPACE">		</span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ClassInfo</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">ancestry</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">type</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line118"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$fields</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">DataObject</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">database_fields</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line119"><pre><span class="token T_WHITESPACE">			</span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">array_key_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$attribute</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$fields</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$table</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$class</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line120"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line121"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line122"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$table</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">user_error</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_ENCAPSED_AND_WHITESPACE">Couldn't find table for field </span><span class="token T_VARIABLE">$attribute</span><span class="token T_ENCAPSED_AND_WHITESPACE"> in type </span><span class="token T_CURLY_OPEN">{</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">type</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">E_USER_ERROR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line123"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line124"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$query</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">query</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_VARIABLE">$func</span><span class="token T_ENCAPSED_AND_WHITESPACE">(\"</span><span class="token T_VARIABLE">$table</span><span class="token T_ENCAPSED_AND_WHITESPACE">\".\"</span><span class="token T_VARIABLE">$attribute</span><span class="token T_ENCAPSED_AND_WHITESPACE">\")</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line125"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line126"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// Cache results of this specific SQL query until flushCache() is triggered.</span></pre></div><div id="line127"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$cachekey</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">sha1</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$query</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">sql</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line128"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$cache</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">cache</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line129"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line130"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$cache</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">load</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$cachekey</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line131"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING_CAST">(string)</span><span class="token T_VARIABLE">$query</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">execute</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">value</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'0'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line132"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$cache</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">save</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'aggregate'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">preg_replace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'/[^a-zA-Z0-9_]/'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'_'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line133"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line134"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line135"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$result</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line136"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line137"><pre><span class="token T_WHITESPACE">	</span></pre></div><div id="line138"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line139"><pre><span class="token T_DOC_COMMENT">	 * Entry point for being called from PHP.</span></pre></div><div id="line140"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line141"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__call</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$method</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$arguments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line142"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">XML_val</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$method</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$arguments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line143"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line144"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line145"><br/></div><div id="line146"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line147"><pre><span class="token T_DOC_COMMENT"> * A subclass of Aggregate that calculates aggregates for the result of a has_many query.</span></pre></div><div id="line148"><pre><span class="token T_DOC_COMMENT"> * </span></pre></div><div id="line149"><pre><span class="token T_DOC_COMMENT"> * @author hfried</span></pre></div><div id="line150"><pre><span class="token T_DOC_COMMENT"> * @package framework</span></pre></div><div id="line151"><pre><span class="token T_DOC_COMMENT"> * @subpackage core</span></pre></div><div id="line152"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line153"><pre><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Aggregate_Relationship</span><span class="token T_WHITESPACE"> </span><span class="token T_EXTENDS">extends</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Aggregate</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line154"><br/></div><div id="line155"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line156"><pre><span class="token T_DOC_COMMENT">	 * Constructor</span></pre></div><div id="line157"><pre><span class="token T_DOC_COMMENT">	 * </span></pre></div><div id="line158"><pre><span class="token T_DOC_COMMENT">	 * @param DataObject $object The object that has_many somethings that we're calculating the aggregate for </span></pre></div><div id="line159"><pre><span class="token T_DOC_COMMENT">	 * @param string $relationship The name of the relationship</span></pre></div><div id="line160"><pre><span class="token T_DOC_COMMENT">	 * @param string $filter (optional) An SQL filter to apply to the relationship rows before calculating the</span></pre></div><div id="line161"><pre><span class="token T_DOC_COMMENT">	 *                       aggregate</span></pre></div><div id="line162"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line163"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$object</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$relationship</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$filter</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line164"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">object</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$object</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line165"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">relationship</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$relationship</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line166"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line167"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">has_many</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$object</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">has_many</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$relationship</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line168"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">many_many</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$object</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">many_many</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$relationship</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line169"><br/></div><div id="line170"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">has_many</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">many_many</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line171"><pre><span class="token T_WHITESPACE">			</span><span class="token T_STRING">user_error</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span><span class="token T_ENCAPSED_AND_WHITESPACE">Could not find relationship </span><span class="token T_VARIABLE">$relationship</span><span class="token T_ENCAPSED_AND_WHITESPACE"> on object class </span><span class="token T_CURLY_OPEN">{</span><span class="token T_VARIABLE">$object</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">class</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_ENCAPSED_AND_WHITESPACE"> in</span><span class="token T_PHPDOX_DOUBLE_QUOTES">"</span></pre></div><div id="line172"><pre><span class="token T_WHITESPACE">				</span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">" Aggregate Relationship"</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">E_USER_ERROR</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line173"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line174"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line175"><pre><span class="token T_WHITESPACE">		</span><span class="token T_STRING">parent</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">has_many</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">has_many</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">many_many</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$filter</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line176"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line177"><pre><span class="token T_WHITESPACE">	</span></pre></div><div id="line178"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">query</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$attr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line179"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">has_many</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line180"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$query</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">object</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getComponentsQuery</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">relationship</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">filter</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line181"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line182"><pre><span class="token T_WHITESPACE">		</span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line183"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$query</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">object</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getManyManyComponentsQuery</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">relationship</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">filter</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line184"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line185"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line186"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$query</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setSelect</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$attr</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line187"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$query</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setGroupBy</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line188"><pre><span class="token T_WHITESPACE">		</span></pre></div><div id="line189"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$singleton</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">singleton</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">type</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line190"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$singleton</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">extend</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'augmentSQL'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$query</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line191"><br/></div><div id="line192"><pre><span class="token T_WHITESPACE">		</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$query</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line193"><pre><span class="token T_WHITESPACE">	</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line194"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line195"><br/></div></td></tr></table></section></div><footer><span/></footer></body></html>
