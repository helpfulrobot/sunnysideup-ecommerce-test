<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of ProductBulkLoader.php</title><link rel="stylesheet" type="text/css" href="../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file ProductBulkLoader.php</h1><p>
                        Size: 6,387 Bytes - Last Modified: 2015-03-14T10:43:16+13:00</p><section><h2><small>/var/www/_modules/ecommerce_test/trunk/docs/en/phpdox/../../../ecommerce/code/cms/</small>ProductBulkLoader.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker" href="#line187">187</a><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a><a class="anker" href="#line193">193</a><a class="anker" href="#line194">194</a><a class="anker" href="#line195">195</a><a class="anker" href="#line196">196</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * @Description: ProductBulkLoader - allows loading products via CSV file.</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> * Images should be uploaded before import,</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * where the Photo/Image field corresponds to the filename of a file that was uploaded.</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> * @TODO: test and update to Ecommerce 1.0</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT"> * @authors: Nicolaas [at] Sunny Side Up .co.nz</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * @package: ecommerce</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> * @sub-package: cms</span></pre></div><div id="line12"><pre><span class="token T_DOC_COMMENT"> * @inspiration: Silverstripe Ltd, Jeremy</span></pre></div><div id="line13"><br/></div><div id="line14"><br/></div><div id="line15"><pre><span class="token T_DOC_COMMENT">class ProductBulkLoader extends CsvBulkLoader{</span></pre></div><div id="line16"><br/></div><div id="line17"><pre><span class="token T_DOC_COMMENT">	private static $product_class_name = "Product";</span></pre></div><div id="line18"><br/></div><div id="line19"><pre><span class="token T_DOC_COMMENT">	private static $product_group_class_name = "ProductGroup";</span></pre></div><div id="line20"><br/></div><div id="line21"><pre><span class="token T_DOC_COMMENT">	private static $parent_page_id = null;</span></pre></div><div id="line22"><br/></div><div id="line23"><pre><span class="token T_DOC_COMMENT">	private static $create_new_product_groups = false;</span></pre></div><div id="line24"><br/></div><div id="line25"><pre><span class="token T_DOC_COMMENT">	public $columnMap = array(</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT">		'Category' =&gt; '-&gt;setParent',</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT">		'ProductGroup' =&gt; '-&gt;setParent',</span></pre></div><div id="line28"><br/></div><div id="line29"><pre><span class="token T_DOC_COMMENT">		'Product ID' =&gt; 'InternalItemID',</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT">		'ProductID' =&gt; 'InternalItemID',</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT">		'SKU' =&gt; 'InternalItemID',</span></pre></div><div id="line32"><br/></div><div id="line33"><pre><span class="token T_DOC_COMMENT">		'Description' =&gt; '-&gt;setContent',</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT">		'Long Description' =&gt; '-&gt;setContent',</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT">		'Short Description' =&gt; 'MetaDescription',</span></pre></div><div id="line36"><br/></div><div id="line37"><pre><span class="token T_DOC_COMMENT">		'Short Title' =&gt; 'MenuTitle',</span></pre></div><div id="line38"><br/></div><div id="line39"><pre><span class="token T_DOC_COMMENT">		'Title' =&gt; 'Title',</span></pre></div><div id="line40"><br/></div><div id="line41"><pre><span class="token T_DOC_COMMENT">		//'Delete' //TODO: allow products to be deleted/disabled via CSV</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT">	);</span></pre></div><div id="line43"><br/></div><div id="line44"><pre><span class="token T_DOC_COMMENT">	/* 	NB there is a bug in CsvBulkLoader where it fails to apply Convert::raw2sql to the field value prior to a duplicate check.</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT">	 	This results in a failed database call on any fields here that conatin quotes and causes whole load to fail.</span></pre></div><div id="line46"><pre><span class="token T_DOC_COMMENT">	 	Fix is to change CsvBulkLoader findExistingObject function</span></pre></div><div id="line47"><pre><span class="token T_DOC_COMMENT">	 	FROM</span></pre></div><div id="line48"><pre><span class="token T_DOC_COMMENT">	 		$SQL_fieldValue = $record[$fieldName];</span></pre></div><div id="line49"><pre><span class="token T_DOC_COMMENT">	 	TO</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT">	 		$SQL_fieldValue = Convert::raw2sql($record[$fieldName]);</span></pre></div><div id="line51"><pre><span class="token T_DOC_COMMENT">	 	until patch gets applied by SS team</span></pre></div><div id="line52"><br/></div><div id="line53"><br/></div><div id="line54"><pre><span class="token T_DOC_COMMENT">	public $duplicateChecks = array(</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">		'InternalItemID' =&gt; 'InternalItemID',</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT">		//'Product ID' =&gt; 'InternalItemID', // see issue 143</span></pre></div><div id="line57"><pre><span class="token T_DOC_COMMENT">		//'ProductID' =&gt; 'InternalItemID',</span></pre></div><div id="line58"><pre><span class="token T_DOC_COMMENT">		//'SKU' =&gt; 'InternalItemID',</span></pre></div><div id="line59"><pre><span class="token T_DOC_COMMENT">		'Title' =&gt; 'Title'</span></pre></div><div id="line60"><pre><span class="token T_DOC_COMMENT">	);</span></pre></div><div id="line61"><br/></div><div id="line62"><pre><span class="token T_DOC_COMMENT">	public $relationCallbacks = array(</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">		'Image' =&gt; array(</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">			'relationname' =&gt; 'Image', // relation accessor name</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT">			'callback' =&gt; 'imageByFilename'</span></pre></div><div id="line66"><pre><span class="token T_DOC_COMMENT">		),</span></pre></div><div id="line67"><pre><span class="token T_DOC_COMMENT">		'Photo' =&gt; array(</span></pre></div><div id="line68"><pre><span class="token T_DOC_COMMENT">			'relationname' =&gt; 'Image', // relation accessor name</span></pre></div><div id="line69"><pre><span class="token T_DOC_COMMENT">			'callback' =&gt; 'imageByFilename'</span></pre></div><div id="line70"><pre><span class="token T_DOC_COMMENT">		)</span></pre></div><div id="line71"><pre><span class="token T_DOC_COMMENT">	);</span></pre></div><div id="line72"><br/></div><div id="line73"><pre><span class="token T_DOC_COMMENT">	public static function import_content(&amp;$obj, $val, $record ){</span></pre></div><div id="line74"><pre><span class="token T_DOC_COMMENT">		$obj-&gt;Content = Convert::raw2sql($val);</span></pre></div><div id="line75"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line76"><pre><span class="token T_DOC_COMMENT">	public static function import_meta_description(&amp;$obj, $val, $record ){</span></pre></div><div id="line77"><pre><span class="token T_DOC_COMMENT">		$obj-&gt;MetaDescription = Convert::raw2sql($val);</span></pre></div><div id="line78"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line79"><pre><span class="token T_DOC_COMMENT">	public static function import_menu_title(&amp;$obj, $val, $record ){</span></pre></div><div id="line80"><pre><span class="token T_DOC_COMMENT">		$obj-&gt;MenuTitle = Convert::raw2sql($val);</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line82"><pre><span class="token T_DOC_COMMENT">	public static function import_title(&amp;$obj, $val, $record ){</span></pre></div><div id="line83"><pre><span class="token T_DOC_COMMENT">		$obj-&gt;Title = Convert::raw2sql($val);</span></pre></div><div id="line84"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line85"><br/></div><div id="line86"><pre><span class="token T_DOC_COMMENT">	public static function importInternalItemID(&amp;$obj, $val, $record ){</span></pre></div><div id="line87"><pre><span class="token T_DOC_COMMENT">		$obj-&gt;InternalItemID = Convert::raw2sql($val);</span></pre></div><div id="line88"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line89"><br/></div><div id="line90"><pre><span class="token T_DOC_COMMENT">	protected function processAll($filepath, $preview = false) {</span></pre></div><div id="line91"><pre><span class="token T_DOC_COMMENT">		$this-&gt;extend('updateColumnMap',$this-&gt;columnMap);</span></pre></div><div id="line92"><pre><span class="token T_DOC_COMMENT">		// we have to check for the existence of this in case the stockcontrol module hasn't been loaded</span></pre></div><div id="line93"><pre><span class="token T_DOC_COMMENT">		// and the CSV still contains a Stock column</span></pre></div><div id="line94"><br/></div><div id="line95"><pre><span class="token T_DOC_COMMENT">		$results = parent::processAll($filepath, $preview);</span></pre></div><div id="line96"><br/></div><div id="line97"><pre><span class="token T_DOC_COMMENT">		//After results have been processed, publish all created &amp; updated products</span></pre></div><div id="line98"><pre><span class="token T_DOC_COMMENT">		$objects = new DataList();</span></pre></div><div id="line99"><pre><span class="token T_DOC_COMMENT">		$objects-&gt;merge($results-&gt;Created());</span></pre></div><div id="line100"><pre><span class="token T_DOC_COMMENT">		$objects-&gt;merge($results-&gt;Updated());</span></pre></div><div id="line101"><pre><span class="token T_DOC_COMMENT">		foreach($objects as $object){</span></pre></div><div id="line102"><pre><span class="token T_DOC_COMMENT">			if(!$object-&gt;ParentID){</span></pre></div><div id="line103"><pre><span class="token T_DOC_COMMENT">				 //set parent page</span></pre></div><div id="line104"><pre><span class="token T_DOC_COMMENT">				 //cached option</span></pre></div><div id="line105"><pre><span class="token T_DOC_COMMENT">				$productGroupClassName = $this-&gt;config()-&gt;get("product_group_class_name");</span></pre></div><div id="line106"><pre><span class="token T_DOC_COMMENT">				if(is_numeric(self::$parent_page_id) &amp;&amp;  $productGroupClassName::get()-&gt;byID(self::$parent_page_id)) {</span></pre></div><div id="line107"><pre><span class="token T_DOC_COMMENT">					$object-&gt;ParentID = self::$parent_page_id;</span></pre></div><div id="line108"><pre><span class="token T_DOC_COMMENT">				}</span></pre></div><div id="line109"><pre><span class="token T_DOC_COMMENT">				//page called 'Products'</span></pre></div><div id="line110"><pre><span class="token T_DOC_COMMENT">				elseif($parentpage = $productGroupClassName::get()-&gt;Filter(array("Title" =&gt; "Products"))-&gt;sort("Created", "DESC")-&gt;First()){</span></pre></div><div id="line111"><pre><span class="token T_DOC_COMMENT">					$object-&gt;ParentID = self::$parent_page_id = $parentpage-&gt;ID;</span></pre></div><div id="line112"><pre><span class="token T_DOC_COMMENT">				}</span></pre></div><div id="line113"><pre><span class="token T_DOC_COMMENT">				//root page</span></pre></div><div id="line114"><pre><span class="token T_DOC_COMMENT">				elseif($parentpage = $productGroupClassName::get()-&gt;Filter(array("ParentID" =&gt; 0))-&gt;sort("Created", "DESC")-&gt;First()){</span></pre></div><div id="line115"><pre><span class="token T_DOC_COMMENT">					$object-&gt;ParentID = self::$parent_page_id = $parentpage-&gt;ID;</span></pre></div><div id="line116"><pre><span class="token T_DOC_COMMENT">				}</span></pre></div><div id="line117"><pre><span class="token T_DOC_COMMENT">				//any product page</span></pre></div><div id="line118"><pre><span class="token T_DOC_COMMENT">				elseif($parentpage = $productGroupClassName::get()-&gt;sort("Created", "DESC")-&gt;First()){</span></pre></div><div id="line119"><pre><span class="token T_DOC_COMMENT">					$object-&gt;ParentID = self::$parent_page_id = $parentpage-&gt;ID;</span></pre></div><div id="line120"><pre><span class="token T_DOC_COMMENT">				}</span></pre></div><div id="line121"><pre><span class="token T_DOC_COMMENT">				else {</span></pre></div><div id="line122"><pre><span class="token T_DOC_COMMENT">					$object-&gt;ParentID = self::$parent_page_id = 0;</span></pre></div><div id="line123"><pre><span class="token T_DOC_COMMENT">				}</span></pre></div><div id="line124"><pre><span class="token T_DOC_COMMENT">			}</span></pre></div><div id="line125"><pre><span class="token T_DOC_COMMENT">			$object-&gt;extend('updateImport'); //could be used for setting other attributes, such as stock level</span></pre></div><div id="line126"><pre><span class="token T_DOC_COMMENT">			$object-&gt;writeToStage('Stage');</span></pre></div><div id="line127"><pre><span class="token T_DOC_COMMENT">			$object-&gt;publish('Stage', 'Live');</span></pre></div><div id="line128"><pre><span class="token T_DOC_COMMENT">		}</span></pre></div><div id="line129"><br/></div><div id="line130"><pre><span class="token T_DOC_COMMENT">		return $results;</span></pre></div><div id="line131"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line132"><br/></div><div id="line133"><pre><span class="token T_DOC_COMMENT">	function processRecord($record, $columnMap, &amp;$results, $preview = false){</span></pre></div><div id="line134"><pre><span class="token T_DOC_COMMENT">		//see issue 144</span></pre></div><div id="line135"><pre><span class="token T_DOC_COMMENT">		if(!$record || !isset($record['Title']) || $record['Title'] == ''){</span></pre></div><div id="line136"><pre><span class="token T_DOC_COMMENT">			return null;</span></pre></div><div id="line137"><pre><span class="token T_DOC_COMMENT">		}</span></pre></div><div id="line138"><pre><span class="token T_DOC_COMMENT">		return parent::processRecord($record, $columnMap, $results, $preview);</span></pre></div><div id="line139"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line140"><br/></div><div id="line141"><br/></div><div id="line142"><pre><span class="token T_DOC_COMMENT">	function imageByFilename(&amp;$obj, $val, $record){</span></pre></div><div id="line143"><pre><span class="token T_DOC_COMMENT">		$filename = strtolower(Convert::raw2sql($val));</span></pre></div><div id="line144"><pre><span class="token T_DOC_COMMENT">		$image = Image::get()-&gt;where("LOWER(\"Filename\") LIKE '%$filename%'");</span></pre></div><div id="line145"><pre><span class="token T_DOC_COMMENT">		if($filename &amp;&amp; $image){ //ignore case</span></pre></div><div id="line146"><pre><span class="token T_DOC_COMMENT">			if($image-&gt;exists()){</span></pre></div><div id="line147"><pre><span class="token T_DOC_COMMENT">				$image-&gt;ClassName = $this-&gt;config()-&gt;get("product_class_name").'_Image'; //must be this type of image</span></pre></div><div id="line148"><pre><span class="token T_DOC_COMMENT">				$image-&gt;write();</span></pre></div><div id="line149"><pre><span class="token T_DOC_COMMENT">				return $image;</span></pre></div><div id="line150"><pre><span class="token T_DOC_COMMENT">			}</span></pre></div><div id="line151"><pre><span class="token T_DOC_COMMENT">		}</span></pre></div><div id="line152"><pre><span class="token T_DOC_COMMENT">		return null;</span></pre></div><div id="line153"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line154"><br/></div><div id="line155"><pre><span class="token T_DOC_COMMENT">	// find product group parent (ie Cateogry)</span></pre></div><div id="line156"><pre><span class="token T_DOC_COMMENT">	function setParent(&amp;$obj, $val, $record){</span></pre></div><div id="line157"><pre><span class="token T_DOC_COMMENT">		$title = strtolower(Convert::raw2sql($val));</span></pre></div><div id="line158"><pre><span class="token T_DOC_COMMENT">		if($title){</span></pre></div><div id="line159"><pre><span class="token T_DOC_COMMENT">			$className = $this-&gt;Config()-&gt;get("product_group_class_name");</span></pre></div><div id="line160"><pre><span class="token T_DOC_COMMENT">			$parentpage = $className::get()-&gt;where("LOWER(\"Title\") = '$title'")-&gt;sort("Created", "DESC")-&gt;First();</span></pre></div><div id="line161"><pre><span class="token T_DOC_COMMENT">			if($parentpage){</span></pre></div><div id="line162"><pre><span class="token T_DOC_COMMENT">				$obj-&gt;ParentID = $parentpage-&gt;ID;</span></pre></div><div id="line163"><pre><span class="token T_DOC_COMMENT">				$obj-&gt;write();</span></pre></div><div id="line164"><pre><span class="token T_DOC_COMMENT">				$obj-&gt;writeToStage('Stage');</span></pre></div><div id="line165"><pre><span class="token T_DOC_COMMENT">				$obj-&gt;publish('Stage', 'Live');</span></pre></div><div id="line166"><pre><span class="token T_DOC_COMMENT">			}</span></pre></div><div id="line167"><pre><span class="token T_DOC_COMMENT">			elseif(self::$create_new_product_groups){</span></pre></div><div id="line168"><pre><span class="token T_DOC_COMMENT">				$className = $this-&gt;Config()-&gt;get("product_group_class_name");</span></pre></div><div id="line169"><pre><span class="token T_DOC_COMMENT">				//create parent product group</span></pre></div><div id="line170"><pre><span class="token T_DOC_COMMENT">				$pg = new $className();</span></pre></div><div id="line171"><pre><span class="token T_DOC_COMMENT">				$pg-&gt;setTitle($title);</span></pre></div><div id="line172"><pre><span class="token T_DOC_COMMENT">				$pg-&gt;ParentID = (self::$parent_page_id) ? self::$parent_page_id : 0;</span></pre></div><div id="line173"><pre><span class="token T_DOC_COMMENT">				$pg-&gt;writeToStage('Stage');</span></pre></div><div id="line174"><pre><span class="token T_DOC_COMMENT">				$pg-&gt;publish('Stage', 'Live');</span></pre></div><div id="line175"><pre><span class="token T_DOC_COMMENT">				$obj-&gt;ParentID = $pg-&gt;ID;</span></pre></div><div id="line176"><pre><span class="token T_DOC_COMMENT">				$obj-&gt;write();</span></pre></div><div id="line177"><pre><span class="token T_DOC_COMMENT">				$obj-&gt;writeToStage('Stage');</span></pre></div><div id="line178"><pre><span class="token T_DOC_COMMENT">				$obj-&gt;publish('Stage', 'Live');</span></pre></div><div id="line179"><pre><span class="token T_DOC_COMMENT">			}</span></pre></div><div id="line180"><pre><span class="token T_DOC_COMMENT">		}</span></pre></div><div id="line181"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line182"><br/></div><div id="line183"><br/></div><div id="line184"><pre><span class="token T_DOC_COMMENT">	function setContent(&amp;$obj, $val, $record){</span></pre></div><div id="line185"><pre><span class="token T_DOC_COMMENT">		$val = trim($val);</span></pre></div><div id="line186"><pre><span class="token T_DOC_COMMENT">		if($val){</span></pre></div><div id="line187"><pre><span class="token T_DOC_COMMENT">			$paragraphs = explode("\n",$val);</span></pre></div><div id="line188"><pre><span class="token T_DOC_COMMENT">			$obj-&gt;Content = "&lt;p&gt;".implode("&lt;/p&gt;&lt;p&gt;",$paragraphs)."&lt;/p&gt;";</span></pre></div><div id="line189"><pre><span class="token T_DOC_COMMENT">		}</span></pre></div><div id="line190"><pre><span class="token T_DOC_COMMENT">	}</span></pre></div><div id="line191"><br/></div><div id="line192"><pre><span class="token T_DOC_COMMENT">}</span></pre></div><div id="line193"><br/></div><div id="line194"><pre><span class="token T_DOC_COMMENT">*/</span></pre></div><div id="line195"><br/></div><div id="line196"><br/></div></td></tr></table></section></div><footer><span/></footer></body></html>
