<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - CMSPagesController</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">CMSPagesController</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/cms/code/controllers/CMSPagesController.php.xhtml#line6">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>CMSPagesController</h1>
        <h4/>
        <p/>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class CMSPagesController
                extends <a title="CMSMain" href="../classes/CMSMain.xhtml">CMSMain</a>
            {<br/><ul class="none"><li>// members</li><li>private string <a href="#members">$url_segment</a>;
                    </li><li>private string <a href="#members">$url_rule</a>;
                    </li><li>private integer <a href="#members">$url_priority</a>;
                    </li><li>private string <a href="#members">$menu_title</a>;
                    </li><li>private string <a href="#members">$required_permission_codes</a>;
                    </li><li>private string <a href="#members">$session_namespace</a>;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="LeftAndMain">LeftAndMain</span></li><li>protected <span title="PjaxResponseNegotiator">PjaxResponseNegotiator</span> <a href="#members">$responseNegotiator</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="Controller">Controller</span></li><li>protected array <a href="#members">$urlParams</a>;
                        </li><li>protected array <a href="#members">$requestParams</a>;
                        </li><li>protected string <a href="#members">$action</a>;
                        </li><li>protected <a href="#members">$session</a>;
                        </li><li>protected array <a href="#members">$controller_stack</a>;
                        </li><li>protected <a href="#members">$basicAuthEnabled</a>;
                        </li><li>protected <span title="SS_HTTPResponse">SS_HTTPResponse</span> <a href="#members">$response</a>;
                        </li><li>protected <a href="#members">$baseInitCalled</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="RequestHandler">RequestHandler</span></li><li>protected <span title="SS_HTTPRequest">SS_HTTPRequest</span> <a href="#members">$request</a>;
                        </li><li>protected <a href="#members">$model</a>;
                        </li><li>protected boolean <a href="#members">$brokenOnConstruct</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="ViewableData">ViewableData</span></li><li>protected <span title="ViewableData">ViewableData</span> <a href="#members">$failover</a>;
                        </li><li>protected <span title="ViewableData">ViewableData</span> <a href="#members">$customisedObject</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="Object">Object</span></li><li>public string <a href="#members">$class</a>;
                        </li><li>protected array <a href="#members">$extension_instances</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$beforeExtendCallbacks</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$afterExtendCallbacks</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public void <a title="CMSPagesController" href="../classes/CMSPagesController/LinkPreview.xhtml">LinkPreview</a>()
                    </li><li>public String <a title="CMSPagesController" href="../classes/CMSPagesController/ViewState.xhtml">ViewState</a>()
                    </li><li>public void <a title="CMSPagesController" href="../classes/CMSPagesController/isCurrentPage.xhtml">isCurrentPage</a>()
                    </li><li>public void <a title="CMSPagesController" href="../classes/CMSPagesController/Breadcrumbs.xhtml">Breadcrumbs</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="CMSMain">CMSMain</span></li><li>public void <a title="CMSMain" href="../classes/CMSMain/init.xhtml">init</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/index.xhtml">index</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/getResponseNegotiator.xhtml">getResponseNegotiator</a>()
                        </li><li>public boolean <a title="CMSMain" href="../classes/CMSMain/ShowSwitchView.xhtml">ShowSwitchView</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/SwitchView.xhtml">SwitchView</a>()
                        </li><li>public string <a title="CMSMain" href="../classes/CMSMain/Link.xhtml">Link</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkPages.xhtml">LinkPages</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkPagesWithSearch.xhtml">LinkPagesWithSearch</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkTreeView.xhtml">LinkTreeView</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkListView.xhtml">LinkListView</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkGalleryView.xhtml">LinkGalleryView</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkPageEdit.xhtml">LinkPageEdit</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkPageSettings.xhtml">LinkPageSettings</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkPageHistory.xhtml">LinkPageHistory</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkWithSearch.xhtml">LinkWithSearch</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/LinkPageAdd.xhtml">LinkPageAdd</a>()
                        </li><li>public string <a title="CMSMain" href="../classes/CMSMain/LinkPreview.xhtml">LinkPreview</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/SiteTreeAsUL.xhtml">SiteTreeAsUL</a>()
                        </li><li>public boolean <a title="CMSMain" href="../classes/CMSMain/TreeIsFiltered.xhtml">TreeIsFiltered</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/ExtraTreeTools.xhtml">ExtraTreeTools</a>()
                        </li><li>public Form <a title="CMSMain" href="../classes/CMSMain/SearchForm.xhtml">SearchForm</a>()
                        </li><li>protected array <a title="CMSMain" href="../classes/CMSMain/getPageTypes.xhtml">getPageTypes</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/doSearch.xhtml">doSearch</a>()
                        </li><li>public ArrayList <a title="CMSMain" href="../classes/CMSMain/Breadcrumbs.xhtml">Breadcrumbs</a>()
                        </li><li>public String <a title="CMSMain" href="../classes/CMSMain/SiteTreeHints.xhtml">SiteTreeHints</a>()
                        </li><li>public SS_List <a title="CMSMain" href="../classes/CMSMain/PageTypes.xhtml">PageTypes</a>()
                        </li><li>public DataObject <a title="CMSMain" href="../classes/CMSMain/getRecord.xhtml">getRecord</a>()
                        </li><li>public Form <a title="CMSMain" href="../classes/CMSMain/getEditForm.xhtml">getEditForm</a>()
                        </li><li>public String <a title="CMSMain" href="../classes/CMSMain/treeview.xhtml">treeview</a>()
                        </li><li>public String <a title="CMSMain" href="../classes/CMSMain/listview.xhtml">listview</a>()
                        </li><li>protected CMSSiteTreeFilter <a title="CMSMain" href="../classes/CMSMain/getQueryFilter.xhtml">getQueryFilter</a>()
                        </li><li>public SS_List <a title="CMSMain" href="../classes/CMSMain/getList.xhtml">getList</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/ListViewForm.xhtml">ListViewForm</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/currentPageID.xhtml">currentPageID</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/save.xhtml">save</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/getNewItem.xhtml">getNewItem</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/deletefromlive.xhtml">deletefromlive</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/performPublish.xhtml">performPublish</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/revert.xhtml">revert</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/delete.xhtml">delete</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/publish.xhtml">publish</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/unpublish.xhtml">unpublish</a>()
                        </li><li>public array <a title="CMSMain" href="../classes/CMSMain/rollback.xhtml">rollback</a>()
                        </li><li>public html <a title="CMSMain" href="../classes/CMSMain/doRollback.xhtml">doRollback</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/batchactions.xhtml">batchactions</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/BatchActionParameters.xhtml">BatchActionParameters</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/BatchActionList.xhtml">BatchActionList</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/buildbrokenlinks.xhtml">buildbrokenlinks</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/publishall.xhtml">publishall</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/restore.xhtml">restore</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/duplicate.xhtml">duplicate</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/duplicatewithchildren.xhtml">duplicatewithchildren</a>()
                        </li><li>public void <a title="CMSMain" href="../classes/CMSMain/providePermissions.xhtml">providePermissions</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="LeftAndMain">LeftAndMain</span></li><li>public boolean <a title="LeftAndMain" href="../classes/LeftAndMain/canView.xhtml">canView</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/init.xhtml">init</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/handleRequest.xhtml">handleRequest</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/redirect.xhtml">redirect</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/index.xhtml">index</a>()
                        </li><li>public boolean <a title="LeftAndMain" href="../classes/LeftAndMain/ShowSwitchView.xhtml">ShowSwitchView</a>()
                        </li><li>public string <a title="LeftAndMain" href="../classes/LeftAndMain/Link.xhtml">Link</a>()
                        </li><li>public static void <a title="LeftAndMain" href="../classes/LeftAndMain/menu_title_for_class.xhtml">menu_title_for_class</a>()
                        </li><li>public static string <a title="LeftAndMain" href="../classes/LeftAndMain/menu_icon_for_class.xhtml">menu_icon_for_class</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/show.xhtml">show</a>()
                        </li><li>public PjaxResponseNegotiator <a title="LeftAndMain" href="../classes/LeftAndMain/getResponseNegotiator.xhtml">getResponseNegotiator</a>()
                        </li><li>public SS_List <a title="LeftAndMain" href="../classes/LeftAndMain/MainMenu.xhtml">MainMenu</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/Menu.xhtml">Menu</a>()
                        </li><li>public ArrayData <a title="LeftAndMain" href="../classes/LeftAndMain/MenuCurrentItem.xhtml">MenuCurrentItem</a>()
                        </li><li>public array <a title="LeftAndMain" href="../classes/LeftAndMain/getTemplatesWithSuffix.xhtml">getTemplatesWithSuffix</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/Content.xhtml">Content</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/getRecord.xhtml">getRecord</a>()
                        </li><li>public ArrayList <a title="LeftAndMain" href="../classes/LeftAndMain/Breadcrumbs.xhtml">Breadcrumbs</a>()
                        </li><li>public String <a title="LeftAndMain" href="../classes/LeftAndMain/SiteTreeAsUL.xhtml">SiteTreeAsUL</a>()
                        </li><li>public String <a title="LeftAndMain" href="../classes/LeftAndMain/getSiteTreeFor.xhtml">getSiteTreeFor</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/getsubtree.xhtml">getsubtree</a>()
                        </li><li>public String <a title="LeftAndMain" href="../classes/LeftAndMain/updatetreenodes.xhtml">updatetreenodes</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/save.xhtml">save</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/delete.xhtml">delete</a>()
                        </li><li>public SS_HTTPResponse <a title="LeftAndMain" href="../classes/LeftAndMain/savetreenode.xhtml">savetreenode</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/CanOrganiseSitetree.xhtml">CanOrganiseSitetree</a>()
                        </li><li>public Form <a title="LeftAndMain" href="../classes/LeftAndMain/EditForm.xhtml">EditForm</a>()
                        </li><li>public Form <a title="LeftAndMain" href="../classes/LeftAndMain/getEditForm.xhtml">getEditForm</a>()
                        </li><li>public Form <a title="LeftAndMain" href="../classes/LeftAndMain/EmptyForm.xhtml">EmptyForm</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/EditorToolbar.xhtml">EditorToolbar</a>()
                        </li><li>public String <a title="LeftAndMain" href="../classes/LeftAndMain/Tools.xhtml">Tools</a>()
                        </li><li>public String <a title="LeftAndMain" href="../classes/LeftAndMain/EditFormTools.xhtml">EditFormTools</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/batchactions.xhtml">batchactions</a>()
                        </li><li>public Form <a title="LeftAndMain" href="../classes/LeftAndMain/BatchActionsForm.xhtml">BatchActionsForm</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/printable.xhtml">printable</a>()
                        </li><li>public ArrayData <a title="LeftAndMain" href="../classes/LeftAndMain/getSilverStripeNavigator.xhtml">getSilverStripeNavigator</a>()
                        </li><li>public int <a title="LeftAndMain" href="../classes/LeftAndMain/currentPageID.xhtml">currentPageID</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/setCurrentPageID.xhtml">setCurrentPageID</a>()
                        </li><li>public DataObject <a title="LeftAndMain" href="../classes/LeftAndMain/currentPage.xhtml">currentPage</a>()
                        </li><li>public boolean <a title="LeftAndMain" href="../classes/LeftAndMain/isCurrentPage.xhtml">isCurrentPage</a>()
                        </li><li>protected String <a title="LeftAndMain" href="../classes/LeftAndMain/sessionNamespace.xhtml">sessionNamespace</a>()
                        </li><li>public String|boolean <a title="LeftAndMain" href="../classes/LeftAndMain/LinkPreview.xhtml">LinkPreview</a>()
                        </li><li>public string <a title="LeftAndMain" href="../classes/LeftAndMain/CMSVersion.xhtml">CMSVersion</a>()
                        </li><li>public array <a title="LeftAndMain" href="../classes/LeftAndMain/SwitchView.xhtml">SwitchView</a>()
                        </li><li>public SiteConfig <a title="LeftAndMain" href="../classes/LeftAndMain/SiteConfig.xhtml">SiteConfig</a>()
                        </li><li>public static void <a title="LeftAndMain" href="../classes/LeftAndMain/set_application_link.xhtml">set_application_link</a>()
                        </li><li>public String <a title="LeftAndMain" href="../classes/LeftAndMain/ApplicationLink.xhtml">ApplicationLink</a>()
                        </li><li>public static void <a title="LeftAndMain" href="../classes/LeftAndMain/setApplicationName.xhtml">setApplicationName</a>()
                        </li><li>public string <a title="LeftAndMain" href="../classes/LeftAndMain/getApplicationName.xhtml">getApplicationName</a>()
                        </li><li>public string <a title="LeftAndMain" href="../classes/LeftAndMain/Title.xhtml">Title</a>()
                        </li><li>public string <a title="LeftAndMain" href="../classes/LeftAndMain/SectionTitle.xhtml">SectionTitle</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/MceRoot.xhtml">MceRoot</a>()
                        </li><li>public String <a title="LeftAndMain" href="../classes/LeftAndMain/BaseCSSClasses.xhtml">BaseCSSClasses</a>()
                        </li><li>public String <a title="LeftAndMain" href="../classes/LeftAndMain/Locale.xhtml">Locale</a>()
                        </li><li>public void <a title="LeftAndMain" href="../classes/LeftAndMain/providePermissions.xhtml">providePermissions</a>()
                        </li><li>public static void <a title="LeftAndMain" href="../classes/LeftAndMain/require_javascript.xhtml">require_javascript</a>()
                        </li><li>public static void <a title="LeftAndMain" href="../classes/LeftAndMain/require_css.xhtml">require_css</a>()
                        </li><li>public static void <a title="LeftAndMain" href="../classes/LeftAndMain/require_themed_css.xhtml">require_themed_css</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="Controller">Controller</span></li><li>public void <a title="Controller" href="../classes/Controller/init.xhtml">init</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/Link.xhtml">Link</a>()
                        </li><li>public SS_HTTPResponse <a title="Controller" href="../classes/Controller/handleRequest.xhtml">handleRequest</a>()
                        </li><li>protected void <a title="Controller" href="../classes/Controller/handleAction.xhtml">handleAction</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/setURLParams.xhtml">setURLParams</a>()
                        </li><li>public array <a title="Controller" href="../classes/Controller/getURLParams.xhtml">getURLParams</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/getResponse.xhtml">getResponse</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/getFormOwner.xhtml">getFormOwner</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/defaultAction.xhtml">defaultAction</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/getAction.xhtml">getAction</a>()
                        </li><li>public SSViewer <a title="Controller" href="../classes/Controller/getViewer.xhtml">getViewer</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/hasAction.xhtml">hasAction</a>()
                        </li><li>public String <a title="Controller" href="../classes/Controller/removeAction.xhtml">removeAction</a>()
                        </li><li>protected void <a title="Controller" href="../classes/Controller/definingClassForAction.xhtml">definingClassForAction</a>()
                        </li><li>public bool <a title="Controller" href="../classes/Controller/hasActionTemplate.xhtml">hasActionTemplate</a>()
                        </li><li>public string <a title="Controller" href="../classes/Controller/render.xhtml">render</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/disableBasicAuth.xhtml">disableBasicAuth</a>()
                        </li><li>public static void <a title="Controller" href="../classes/Controller/curr.xhtml">curr</a>()
                        </li><li>public static boolean <a title="Controller" href="../classes/Controller/has_curr.xhtml">has_curr</a>()
                        </li><li>public boolean <a title="Controller" href="../classes/Controller/can.xhtml">can</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/pushCurrent.xhtml">pushCurrent</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/popCurrent.xhtml">popCurrent</a>()
                        </li><li>public SS_HTTPResponse <a title="Controller" href="../classes/Controller/redirect.xhtml">redirect</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/redirectBack.xhtml">redirectBack</a>()
                        </li><li>public string <a title="Controller" href="../classes/Controller/redirectedTo.xhtml">redirectedTo</a>()
                        </li><li>public Session <a title="Controller" href="../classes/Controller/getSession.xhtml">getSession</a>()
                        </li><li>public void <a title="Controller" href="../classes/Controller/setSession.xhtml">setSession</a>()
                        </li><li>public static String <a title="Controller" href="../classes/Controller/join_links.xhtml">join_links</a>()
                        </li><li>public static void <a title="Controller" href="../classes/Controller/get_template_global_variables.xhtml">get_template_global_variables</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="RequestHandler">RequestHandler</span></li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/__construct.xhtml">__construct</a>()
                        </li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/setDataModel.xhtml">setDataModel</a>()
                        </li><li>public SS_HTTPResponse|RequestHandler|string|array <a title="RequestHandler" href="../classes/RequestHandler/handleRequest.xhtml">handleRequest</a>()
                        </li><li>protected void <a title="RequestHandler" href="../classes/RequestHandler/findAction.xhtml">findAction</a>()
                        </li><li>protected SS_HTTPResponse <a title="RequestHandler" href="../classes/RequestHandler/handleAction.xhtml">handleAction</a>()
                        </li><li>public array|null <a title="RequestHandler" href="../classes/RequestHandler/allowedActions.xhtml">allowedActions</a>()
                        </li><li>public bool <a title="RequestHandler" href="../classes/RequestHandler/hasAction.xhtml">hasAction</a>()
                        </li><li>protected void <a title="RequestHandler" href="../classes/RequestHandler/definingClassForAction.xhtml">definingClassForAction</a>()
                        </li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/checkAccessAction.xhtml">checkAccessAction</a>()
                        </li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/httpError.xhtml">httpError</a>()
                        </li><li>public SS_HTTPRequest|NullHTTPRequest <a title="RequestHandler" href="../classes/RequestHandler/getRequest.xhtml">getRequest</a>()
                        </li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/setRequest.xhtml">setRequest</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="ViewableData">ViewableData</span></li><li>public static string <a title="ViewableData" href="../classes/ViewableData/castingObjectCreator.xhtml">castingObjectCreator</a>()
                        </li><li>public static array <a title="ViewableData" href="../classes/ViewableData/castingObjectCreatorPair.xhtml">castingObjectCreatorPair</a>()
                        </li><li>public bool <a title="ViewableData" href="../classes/ViewableData/__isset.xhtml">__isset</a>()
                        </li><li>public mixed <a title="ViewableData" href="../classes/ViewableData/__get.xhtml">__get</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/__set.xhtml">__set</a>()
                        </li><li>public bool <a title="ViewableData" href="../classes/ViewableData/hasField.xhtml">hasField</a>()
                        </li><li>public mixed <a title="ViewableData" href="../classes/ViewableData/getField.xhtml">getField</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/setField.xhtml">setField</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/defineMethods.xhtml">defineMethods</a>()
                        </li><li>public ViewableData_Customised <a title="ViewableData" href="../classes/ViewableData/customise.xhtml">customise</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/setCustomisedObj.xhtml">setCustomisedObj</a>()
                        </li><li>public array <a title="ViewableData" href="../classes/ViewableData/castingHelperPair.xhtml">castingHelperPair</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/castingHelper.xhtml">castingHelper</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/castingClass.xhtml">castingClass</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/escapeTypeForField.xhtml">escapeTypeForField</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/buildCastingCache.xhtml">buildCastingCache</a>()
                        </li><li>public HTMLText <a title="ViewableData" href="../classes/ViewableData/renderWith.xhtml">renderWith</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/obj.xhtml">obj</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/cachedCall.xhtml">cachedCall</a>()
                        </li><li>public bool <a title="ViewableData" href="../classes/ViewableData/hasValue.xhtml">hasValue</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/XML_val.xhtml">XML_val</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/RAW_val.xhtml">RAW_val</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/SQL_val.xhtml">SQL_val</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/JS_val.xhtml">JS_val</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/ATT_val.xhtml">ATT_val</a>()
                        </li><li>public array <a title="ViewableData" href="../classes/ViewableData/getXMLValues.xhtml">getXMLValues</a>()
                        </li><li>public ArrayIterator <a title="ViewableData" href="../classes/ViewableData/getIterator.xhtml">getIterator</a>()
                        </li><li>public ViewableData <a title="ViewableData" href="../classes/ViewableData/Me.xhtml">Me</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/ThemeDir.xhtml">ThemeDir</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/CSSClasses.xhtml">CSSClasses</a>()
                        </li><li>public ViewableData_Debugger <a title="ViewableData" href="../classes/ViewableData/Debug.xhtml">Debug</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="Object">Object</span></li><li>public static Config_ForClass|null <a title="Object" href="../classes/Object/config.xhtml">config</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/create.xhtml">create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/strong_create.xhtml">strong_create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass</a>()
                        </li><li>public static string <a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass</a>()
                        </li><li>public static any <a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/get_static.xhtml">get_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/set_static.xhtml">set_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/combined_static.xhtml">combined_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/has_extension.xhtml">has_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_extension.xhtml">add_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension</a>()
                        </li><li>public static array <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/__construct.xhtml">__construct</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/__call.xhtml">__call</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/createMethod.xhtml">createMethod</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/stat.xhtml">stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/exists.xhtml">exists</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/is_a.xhtml">is_a</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/__toString.xhtml">__toString</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/extend.xhtml">extend</a>()
                        </li><li>public Extension <a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/clearCache.xhtml">clearCache</a>()
                        </li><li>protected mixed <a title="Object" href="../classes/Object/loadCache.xhtml">loadCache</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/saveCache.xhtml">saveCache</a>()
                        </li><li>protected string <a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/CMSMain.xhtml">CMSMain</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">594</td>
            <td>Duplicate record fetching (see parent implementation)</td>
          </tr>
          <tr>
            <td class="nummeric">665</td>
            <td>Can't merge $FormAttributes in template at the moment</td>
          </tr>
          <tr>
            <td class="nummeric">863</td>
            <td>Coupling to SiteTree</td>
          </tr>
          <tr>
            <td class="nummeric">369</td>
            <td>Confuses jQuery.ondemand through document.write()</td>
          </tr>
          <tr>
            <td class="nummeric">566</td>
            <td>Necessary for TableListField URLs to work properly</td>
          </tr>
          <tr>
            <td class="nummeric">698+</td>
            <td>Wrap in CMSMenu instance accessor</td>
          </tr>
          <tr>
            <td class="nummeric">952</td>
            <td>These methods should really be in hierarchy - for a start it assumes Sort exists</td>
          </tr>
          <tr>
            <td class="nummeric">1253</td>
            <td>Currently the default Validator.js implementation</td>
          </tr>
          <tr>
            <td class="nummeric">172</td>
            <td>Fix LeftAndMain usage</td>
          </tr>
          <tr>
            <td class="nummeric">584+</td>
            <td>Add support for removing extensions with parameters</td>
          </tr>
          <tr>
            <td class="nummeric">966+</td>
            <td>integrate inheritance rules</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="menu_title">
              <strong>$menu_title</strong>
            </li>
            <li id="required_permission_codes">
              <strong>$required_permission_codes</strong>
            </li>
            <li id="session_namespace">
              <strong>$session_namespace</strong>
            </li>
            <li id="url_priority">
              <strong>$url_priority</strong>
            </li>
            <li id="url_rule">
              <strong>$url_rule</strong>
            </li>
            <li id="url_segment">
              <strong>$url_segment</strong>
            </li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="action"><strong>$action</strong>
                —
                string</li>
            <li id="afterExtendCallbacks"><strong>$afterExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call after extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="baseInitCalled">
              <strong>$baseInitCalled</strong>
            </li>
            <li id="basicAuthEnabled">
              <strong>$basicAuthEnabled</strong>
            </li>
            <li id="beforeExtendCallbacks"><strong>$beforeExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call prior to extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="brokenOnConstruct"><strong>$brokenOnConstruct</strong>
                —
                boolean<br/><span class="indent">This variable records whether RequestHandler::__construct() was called or not. Useful for checking if subclasses have called parent::__construct()</span></li>
            <li id="controller_stack">
              <strong>$controller_stack</strong>
              <br/>
              <span class="indent">Stack of current controllers.</span>
            </li>
            <li id="customisedObject"><strong>$customisedObject</strong>
                —
                <a href="#">ViewableData</a></li>
            <li id="extension_instances"><strong>$extension_instances</strong>
                —
                array</li>
            <li id="failover"><strong>$failover</strong>
                —
                <a href="#">ViewableData</a><br/><span class="indent">A failover object to attempt to get data from if it is not present on this object.</span></li>
            <li id="model">
              <strong>$model</strong>
              <br/>
              <span class="indent">The DataModel for this request</span>
            </li>
            <li id="request"><strong>$request</strong>
                —
                <a href="#">SS_HTTPRequest</a></li>
            <li id="requestParams"><strong>$requestParams</strong>
                —
                array</li>
            <li id="response"><strong>$response</strong>
                —
                <a href="#">SS_HTTPResponse</a></li>
            <li id="responseNegotiator"><strong>$responseNegotiator</strong>
                —
                <a href="#">PjaxResponseNegotiator</a></li>
            <li id="session">
              <strong>$session</strong>
              <br/>
              <span class="indent">The {@link Session} object for this controller</span>
            </li>
            <li id="urlParams"><strong>$urlParams</strong>
                —
                array</li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="class"><strong>$class</strong>
                —
                string</li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="Breadcrumbs">
              <a title="CMSPagesController" href="../classes/CMSPagesController/Breadcrumbs.xhtml">Breadcrumbs()</a>
            </li>
            <li id="LinkPreview">
              <a title="CMSPagesController" href="../classes/CMSPagesController/LinkPreview.xhtml">LinkPreview()</a>
            </li>
            <li id="ViewState">
              <a title="CMSPagesController" href="../classes/CMSPagesController/ViewState.xhtml">ViewState()</a>
            </li>
            <li id="isCurrentPage">
              <a title="CMSPagesController" href="../classes/CMSPagesController/isCurrentPage.xhtml">isCurrentPage()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="CMSMain" href="../classes/CMSMain.xhtml">CMSMain</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="getPageTypes"><a title="CMSMain" href="../classes/CMSMain/getPageTypes.xhtml">getPageTypes()</a>
                — Returns a sorted array suitable for a dropdown with pagetypes and their translated name</li>
            <li id="getQueryFilter"><a title="CMSMain" href="../classes/CMSMain/getQueryFilter.xhtml">getQueryFilter()</a>
                — Safely reconstruct a selected filter from a given set of query parameters</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="BatchActionList"><a title="CMSMain" href="../classes/CMSMain/BatchActionList.xhtml">BatchActionList()</a>
                — Returns a list of batch actions</li>
            <li id="BatchActionParameters">
              <a title="CMSMain" href="../classes/CMSMain/BatchActionParameters.xhtml">BatchActionParameters()</a>
            </li>
            <li id="Breadcrumbs">
              <a title="CMSMain" href="../classes/CMSMain/Breadcrumbs.xhtml">Breadcrumbs()</a>
            </li>
            <li id="ExtraTreeTools">
              <a title="CMSMain" href="../classes/CMSMain/ExtraTreeTools.xhtml">ExtraTreeTools()</a>
            </li>
            <li id="Link"><a title="CMSMain" href="../classes/CMSMain/Link.xhtml">Link()</a>
                — Override {@link LeftAndMain} Link to allow blank URL segment for CMSMain.</li>
            <li id="LinkGalleryView">
              <a title="CMSMain" href="../classes/CMSMain/LinkGalleryView.xhtml">LinkGalleryView()</a>
            </li>
            <li id="LinkListView">
              <a title="CMSMain" href="../classes/CMSMain/LinkListView.xhtml">LinkListView()</a>
            </li>
            <li id="LinkPageAdd">
              <a title="CMSMain" href="../classes/CMSMain/LinkPageAdd.xhtml">LinkPageAdd()</a>
            </li>
            <li id="LinkPageEdit">
              <a title="CMSMain" href="../classes/CMSMain/LinkPageEdit.xhtml">LinkPageEdit()</a>
            </li>
            <li id="LinkPageHistory">
              <a title="CMSMain" href="../classes/CMSMain/LinkPageHistory.xhtml">LinkPageHistory()</a>
            </li>
            <li id="LinkPageSettings">
              <a title="CMSMain" href="../classes/CMSMain/LinkPageSettings.xhtml">LinkPageSettings()</a>
            </li>
            <li id="LinkPages">
              <a title="CMSMain" href="../classes/CMSMain/LinkPages.xhtml">LinkPages()</a>
            </li>
            <li id="LinkPagesWithSearch">
              <a title="CMSMain" href="../classes/CMSMain/LinkPagesWithSearch.xhtml">LinkPagesWithSearch()</a>
            </li>
            <li id="LinkPreview">
              <a title="CMSMain" href="../classes/CMSMain/LinkPreview.xhtml">LinkPreview()</a>
            </li>
            <li id="LinkTreeView">
              <a title="CMSMain" href="../classes/CMSMain/LinkTreeView.xhtml">LinkTreeView()</a>
            </li>
            <li id="LinkWithSearch">
              <a title="CMSMain" href="../classes/CMSMain/LinkWithSearch.xhtml">LinkWithSearch()</a>
            </li>
            <li id="ListViewForm">
              <a title="CMSMain" href="../classes/CMSMain/ListViewForm.xhtml">ListViewForm()</a>
            </li>
            <li id="PageTypes"><a title="CMSMain" href="../classes/CMSMain/PageTypes.xhtml">PageTypes()</a>
                — Populates an array of classes in the CMS which allows the user to change the page type.</li>
            <li id="SearchForm"><a title="CMSMain" href="../classes/CMSMain/SearchForm.xhtml">SearchForm()</a>
                — Returns a Form for page searching for use in templates.</li>
            <li id="ShowSwitchView"><a title="CMSMain" href="../classes/CMSMain/ShowSwitchView.xhtml">ShowSwitchView()</a>
                — If this is set to true, the "switchView" context in the template is shown, with links to the staging and publish site.</li>
            <li id="SiteTreeAsUL"><a title="CMSMain" href="../classes/CMSMain/SiteTreeAsUL.xhtml">SiteTreeAsUL()</a>
                — Return the entire site tree as a nested set of ULs</li>
            <li id="SiteTreeHints"><a title="CMSMain" href="../classes/CMSMain/SiteTreeHints.xhtml">SiteTreeHints()</a>
                — Create serialized JSON string with site tree hints data to be injected into 'data-hints' attribute of root node of jsTree.</li>
            <li id="SwitchView"><a title="CMSMain" href="../classes/CMSMain/SwitchView.xhtml">SwitchView()</a>
                — Overloads the LeftAndMain::ShowView. Allows to pass a page as a parameter, so we are able to switch view also for archived versions.</li>
            <li id="TreeIsFiltered">
              <a title="CMSMain" href="../classes/CMSMain/TreeIsFiltered.xhtml">TreeIsFiltered()</a>
            </li>
            <li id="batchactions"><a title="CMSMain" href="../classes/CMSMain/batchactions.xhtml">batchactions()</a>
                — Batch Actions Handler</li>
            <li id="buildbrokenlinks">
              <a title="CMSMain" href="../classes/CMSMain/buildbrokenlinks.xhtml">buildbrokenlinks()</a>
            </li>
            <li id="currentPageID">
              <a title="CMSMain" href="../classes/CMSMain/currentPageID.xhtml">currentPageID()</a>
            </li>
            <li id="delete"><a title="CMSMain" href="../classes/CMSMain/delete.xhtml">delete()</a>
                — Delete the current page from draft stage.</li>
            <li id="deletefromlive"><a title="CMSMain" href="../classes/CMSMain/deletefromlive.xhtml">deletefromlive()</a>
                — Delete the page from live. This means a page in draft mode might still exist.</li>
            <li id="doRollback"><a title="CMSMain" href="../classes/CMSMain/doRollback.xhtml">doRollback()</a>
                — Rolls a site back to a given version ID</li>
            <li id="doSearch">
              <a title="CMSMain" href="../classes/CMSMain/doSearch.xhtml">doSearch()</a>
            </li>
            <li id="duplicate">
              <a title="CMSMain" href="../classes/CMSMain/duplicate.xhtml">duplicate()</a>
            </li>
            <li id="duplicatewithchildren">
              <a title="CMSMain" href="../classes/CMSMain/duplicatewithchildren.xhtml">duplicatewithchildren()</a>
            </li>
            <li id="getEditForm">
              <a title="CMSMain" href="../classes/CMSMain/getEditForm.xhtml">getEditForm()</a>
            </li>
            <li id="getList"><a title="CMSMain" href="../classes/CMSMain/getList.xhtml">getList()</a>
                — Returns the pages meet a certain criteria as {@see CMSSiteTreeFilter} or the subpages of a parent page defaulting to no filter and show all pages in first level.</li>
            <li id="getNewItem">
              <a title="CMSMain" href="../classes/CMSMain/getNewItem.xhtml">getNewItem()</a>
            </li>
            <li id="getRecord"><a title="CMSMain" href="../classes/CMSMain/getRecord.xhtml">getRecord()</a>
                — Get a database record to be managed by the CMS.</li>
            <li id="getResponseNegotiator">
              <a title="CMSMain" href="../classes/CMSMain/getResponseNegotiator.xhtml">getResponseNegotiator()</a>
            </li>
            <li id="index">
              <a title="CMSMain" href="../classes/CMSMain/index.xhtml">index()</a>
            </li>
            <li id="init">
              <a title="CMSMain" href="../classes/CMSMain/init.xhtml">init()</a>
            </li>
            <li id="listview">
              <a title="CMSMain" href="../classes/CMSMain/listview.xhtml">listview()</a>
            </li>
            <li id="performPublish"><a title="CMSMain" href="../classes/CMSMain/performPublish.xhtml">performPublish()</a>
                — Actually perform the publication step</li>
            <li id="providePermissions">
              <a title="CMSMain" href="../classes/CMSMain/providePermissions.xhtml">providePermissions()</a>
            </li>
            <li id="publish">
              <a title="CMSMain" href="../classes/CMSMain/publish.xhtml">publish()</a>
            </li>
            <li id="publishall">
              <a title="CMSMain" href="../classes/CMSMain/publishall.xhtml">publishall()</a>
            </li>
            <li id="restore"><a title="CMSMain" href="../classes/CMSMain/restore.xhtml">restore()</a>
                — Restore a completely deleted page from the SiteTree_versions table.</li>
            <li id="revert"><a title="CMSMain" href="../classes/CMSMain/revert.xhtml">revert()</a>
                — Reverts a page by publishing it to live.</li>
            <li id="rollback">
              <a title="CMSMain" href="../classes/CMSMain/rollback.xhtml">rollback()</a>
            </li>
            <li id="save"><a title="CMSMain" href="../classes/CMSMain/save.xhtml">save()</a>
                — Save and Publish page handler</li>
            <li id="treeview">
              <a title="CMSMain" href="../classes/CMSMain/treeview.xhtml">treeview()</a>
            </li>
            <li id="unpublish">
              <a title="CMSMain" href="../classes/CMSMain/unpublish.xhtml">unpublish()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="LeftAndMain" href="../classes/LeftAndMain.xhtml">LeftAndMain</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="sessionNamespace">
              <a title="LeftAndMain" href="../classes/LeftAndMain/sessionNamespace.xhtml">sessionNamespace()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="ApplicationLink">
              <a title="LeftAndMain" href="../classes/LeftAndMain/ApplicationLink.xhtml">ApplicationLink()</a>
            </li>
            <li id="BaseCSSClasses"><a title="LeftAndMain" href="../classes/LeftAndMain/BaseCSSClasses.xhtml">BaseCSSClasses()</a>
                — Same as {@link ViewableData-&gt;CSSClasses()}, but with a changed name to avoid problems when using {@link ViewableData-&gt;customise()} (which always returns "ArrayData" from the $original object).</li>
            <li id="BatchActionsForm">
              <a title="LeftAndMain" href="../classes/LeftAndMain/BatchActionsForm.xhtml">BatchActionsForm()</a>
            </li>
            <li id="Breadcrumbs">
              <a title="LeftAndMain" href="../classes/LeftAndMain/Breadcrumbs.xhtml">Breadcrumbs()</a>
            </li>
            <li id="CMSVersion"><a title="LeftAndMain" href="../classes/LeftAndMain/CMSVersion.xhtml">CMSVersion()</a>
                — Return the version number of this application.</li>
            <li id="CanOrganiseSitetree">
              <a title="LeftAndMain" href="../classes/LeftAndMain/CanOrganiseSitetree.xhtml">CanOrganiseSitetree()</a>
            </li>
            <li id="Content">
              <a title="LeftAndMain" href="../classes/LeftAndMain/Content.xhtml">Content()</a>
            </li>
            <li id="EditForm">
              <a title="LeftAndMain" href="../classes/LeftAndMain/EditForm.xhtml">EditForm()</a>
            </li>
            <li id="EditFormTools"><a title="LeftAndMain" href="../classes/LeftAndMain/EditFormTools.xhtml">EditFormTools()</a>
                — Renders a panel containing tools which apply to the currently displayed edit form.</li>
            <li id="EditorToolbar"><a title="LeftAndMain" href="../classes/LeftAndMain/EditorToolbar.xhtml">EditorToolbar()</a>
                — Return the CMS's HTML-editor toolbar</li>
            <li id="EmptyForm"><a title="LeftAndMain" href="../classes/LeftAndMain/EmptyForm.xhtml">EmptyForm()</a>
                — Returns a placeholder form, used by {@link getEditForm()} if no record is selected.</li>
            <li id="Link"><a title="LeftAndMain" href="../classes/LeftAndMain/Link.xhtml">Link()</a>
                — You should implement a Link() function in your subclass of LeftAndMain, to point to the URL of that particular controller.</li>
            <li id="LinkPreview"><a title="LeftAndMain" href="../classes/LeftAndMain/LinkPreview.xhtml">LinkPreview()</a>
                — URL to a previewable record which is shown through this controller.</li>
            <li id="Locale">
              <a title="LeftAndMain" href="../classes/LeftAndMain/Locale.xhtml">Locale()</a>
            </li>
            <li id="MainMenu"><a title="LeftAndMain" href="../classes/LeftAndMain/MainMenu.xhtml">MainMenu()</a>
                — Returns the main menu of the CMS.  This is also used by init() to work out which sections the user has access to.</li>
            <li id="MceRoot"><a title="LeftAndMain" href="../classes/LeftAndMain/MceRoot.xhtml">MceRoot()</a>
                — Return the base directory of the tiny_mce codebase</li>
            <li id="Menu">
              <a title="LeftAndMain" href="../classes/LeftAndMain/Menu.xhtml">Menu()</a>
            </li>
            <li id="MenuCurrentItem">
              <a title="LeftAndMain" href="../classes/LeftAndMain/MenuCurrentItem.xhtml">MenuCurrentItem()</a>
            </li>
            <li id="SectionTitle"><a title="LeftAndMain" href="../classes/LeftAndMain/SectionTitle.xhtml">SectionTitle()</a>
                — Return the title of the current section. Either this is pulled from the current panel's menu_title or from the first active menu</li>
            <li id="ShowSwitchView"><a title="LeftAndMain" href="../classes/LeftAndMain/ShowSwitchView.xhtml">ShowSwitchView()</a>
                — If this is set to true, the "switchView" context in the template is shown, with links to the staging and publish site.</li>
            <li id="SiteConfig">
              <a title="LeftAndMain" href="../classes/LeftAndMain/SiteConfig.xhtml">SiteConfig()</a>
            </li>
            <li id="SiteTreeAsUL">
              <a title="LeftAndMain" href="../classes/LeftAndMain/SiteTreeAsUL.xhtml">SiteTreeAsUL()</a>
            </li>
            <li id="SwitchView">
              <a title="LeftAndMain" href="../classes/LeftAndMain/SwitchView.xhtml">SwitchView()</a>
            </li>
            <li id="Title">
              <a title="LeftAndMain" href="../classes/LeftAndMain/Title.xhtml">Title()</a>
            </li>
            <li id="Tools"><a title="LeftAndMain" href="../classes/LeftAndMain/Tools.xhtml">Tools()</a>
                — Renders a panel containing tools which apply to all displayed "content" (mostly through {@link EditForm()}), for example a tree navigation or a filter panel.</li>
            <li id="batchactions"><a title="LeftAndMain" href="../classes/LeftAndMain/batchactions.xhtml">batchactions()</a>
                — Batch Actions Handler</li>
            <li id="canView">
              <a title="LeftAndMain" href="../classes/LeftAndMain/canView.xhtml">canView()</a>
            </li>
            <li id="currentPage"><a title="LeftAndMain" href="../classes/LeftAndMain/currentPage.xhtml">currentPage()</a>
                — Uses {@link getRecord()} and {@link currentPageID()} to get the currently selected record.</li>
            <li id="currentPageID"><a title="LeftAndMain" href="../classes/LeftAndMain/currentPageID.xhtml">currentPageID()</a>
                — Identifier for the currently shown record, in most cases a database ID. Inspects the following sources (in this order): - GET/POST parameter named 'ID' - URL parameter named 'ID' - Session value namespaced by classname, e.g. "CMSMain.currentPage"</li>
            <li id="delete">
              <a title="LeftAndMain" href="../classes/LeftAndMain/delete.xhtml">delete()</a>
            </li>
            <li id="getApplicationName"><a title="LeftAndMain" href="../classes/LeftAndMain/getApplicationName.xhtml">getApplicationName()</a>
                — Get the application name.</li>
            <li id="getEditForm"><a title="LeftAndMain" href="../classes/LeftAndMain/getEditForm.xhtml">getEditForm()</a>
                — Calls {@link SiteTree-&gt;getCMSFields()}</li>
            <li id="getRecord">
              <a title="LeftAndMain" href="../classes/LeftAndMain/getRecord.xhtml">getRecord()</a>
            </li>
            <li id="getResponseNegotiator"><a title="LeftAndMain" href="../classes/LeftAndMain/getResponseNegotiator.xhtml">getResponseNegotiator()</a>
                — Caution: Volatile API.</li>
            <li id="getSilverStripeNavigator"><a title="LeftAndMain" href="../classes/LeftAndMain/getSilverStripeNavigator.xhtml">getSilverStripeNavigator()</a>
                — Used for preview controls, mainly links which switch between different states of the page.</li>
            <li id="getSiteTreeFor"><a title="LeftAndMain" href="../classes/LeftAndMain/getSiteTreeFor.xhtml">getSiteTreeFor()</a>
                — Get a site tree HTML listing which displays the nodes under the given criteria.</li>
            <li id="getTemplatesWithSuffix"><a title="LeftAndMain" href="../classes/LeftAndMain/getTemplatesWithSuffix.xhtml">getTemplatesWithSuffix()</a>
                — Return a list of appropriate templates for this class, with the given suffix using {@link SSViewer::get_templates_by_class()}</li>
            <li id="getsubtree"><a title="LeftAndMain" href="../classes/LeftAndMain/getsubtree.xhtml">getsubtree()</a>
                — Get a subtree underneath the request param 'ID'.</li>
            <li id="handleRequest">
              <a title="LeftAndMain" href="../classes/LeftAndMain/handleRequest.xhtml">handleRequest()</a>
            </li>
            <li id="index">
              <a title="LeftAndMain" href="../classes/LeftAndMain/index.xhtml">index()</a>
            </li>
            <li id="init">
              <a title="LeftAndMain" href="../classes/LeftAndMain/init.xhtml">init()</a>
            </li>
            <li id="isCurrentPage"><a title="LeftAndMain" href="../classes/LeftAndMain/isCurrentPage.xhtml">isCurrentPage()</a>
                — Compares a given record to the currently selected one (if any).</li>
            <li id="menu_icon_for_class"><a title="LeftAndMain" href="../classes/LeftAndMain/menu_icon_for_class.xhtml">menu_icon_for_class()</a>
                — Return styling for the menu icon, if a custom icon is set for this class</li>
            <li id="menu_title_for_class"><a title="LeftAndMain" href="../classes/LeftAndMain/menu_title_for_class.xhtml">menu_title_for_class()</a>
                — Returns the menu title for the given LeftAndMain subclass.</li>
            <li id="printable">
              <a title="LeftAndMain" href="../classes/LeftAndMain/printable.xhtml">printable()</a>
            </li>
            <li id="providePermissions">
              <a title="LeftAndMain" href="../classes/LeftAndMain/providePermissions.xhtml">providePermissions()</a>
            </li>
            <li id="redirect"><a title="LeftAndMain" href="../classes/LeftAndMain/redirect.xhtml">redirect()</a>
                — Overloaded redirection logic to trigger a fake redirect on ajax requests.</li>
            <li id="require_css"><a title="LeftAndMain" href="../classes/LeftAndMain/require_css.xhtml">require_css()</a>
                — Register the given stylesheet file as required.</li>
            <li id="require_javascript"><a title="LeftAndMain" href="../classes/LeftAndMain/require_javascript.xhtml">require_javascript()</a>
                — Register the given javascript file as required in the CMS.</li>
            <li id="require_themed_css"><a title="LeftAndMain" href="../classes/LeftAndMain/require_themed_css.xhtml">require_themed_css()</a>
                — Register the given "themeable stylesheet" as required.</li>
            <li id="save"><a title="LeftAndMain" href="../classes/LeftAndMain/save.xhtml">save()</a>
                — Save  handler</li>
            <li id="savetreenode"><a title="LeftAndMain" href="../classes/LeftAndMain/savetreenode.xhtml">savetreenode()</a>
                — Update the position and parent of a tree node.</li>
            <li id="setApplicationName">
              <a title="LeftAndMain" href="../classes/LeftAndMain/setApplicationName.xhtml">setApplicationName()</a>
            </li>
            <li id="setCurrentPageID"><a title="LeftAndMain" href="../classes/LeftAndMain/setCurrentPageID.xhtml">setCurrentPageID()</a>
                — Forces the current page to be set in session, which can be retrieved later through {@link currentPageID()}.</li>
            <li id="set_application_link"><a title="LeftAndMain" href="../classes/LeftAndMain/set_application_link.xhtml">set_application_link()</a>
                — Sets the href for the anchor on the Silverstripe logo in the menu</li>
            <li id="show">
              <a title="LeftAndMain" href="../classes/LeftAndMain/show.xhtml">show()</a>
            </li>
            <li id="updatetreenodes"><a title="LeftAndMain" href="../classes/LeftAndMain/updatetreenodes.xhtml">updatetreenodes()</a>
                — Allows requesting a view update on specific tree nodes.</li>
          </ul>
          <h3>Inherited from <a title="Controller" href="../classes/Controller.xhtml">Controller</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="definingClassForAction"><a title="Controller" href="../classes/Controller/definingClassForAction.xhtml">definingClassForAction()</a>
                — Return the class that defines the given action, so that we know where to check allowed_actions.</li>
            <li id="handleAction"><a title="Controller" href="../classes/Controller/handleAction.xhtml">handleAction()</a>
                — Controller's default action handler.  It will call the method named in $Action, if that method exists.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="Link"><a title="Controller" href="../classes/Controller/Link.xhtml">Link()</a>
                — Returns a link to this controller.  Overload with your own Link rules if they exist.</li>
            <li id="can"><a title="Controller" href="../classes/Controller/can.xhtml">can()</a>
                — Returns true if the member is allowed to do the given action.</li>
            <li id="curr"><a title="Controller" href="../classes/Controller/curr.xhtml">curr()</a>
                — Returns the current controller</li>
            <li id="defaultAction"><a title="Controller" href="../classes/Controller/defaultAction.xhtml">defaultAction()</a>
                — This is the default action handler used if a method doesn't exist.</li>
            <li id="disableBasicAuth"><a title="Controller" href="../classes/Controller/disableBasicAuth.xhtml">disableBasicAuth()</a>
                — Call this to disable site-wide basic authentication for a specific contoller.</li>
            <li id="getAction"><a title="Controller" href="../classes/Controller/getAction.xhtml">getAction()</a>
                — Returns the action that is being executed on this controller.</li>
            <li id="getFormOwner"><a title="Controller" href="../classes/Controller/getFormOwner.xhtml">getFormOwner()</a>
                — Return the object that is going to own a form that's being processed, and handle its execution.</li>
            <li id="getResponse"><a title="Controller" href="../classes/Controller/getResponse.xhtml">getResponse()</a>
                — Returns the SS_HTTPResponse object that this controller is building up.</li>
            <li id="getSession"><a title="Controller" href="../classes/Controller/getSession.xhtml">getSession()</a>
                — Get the Session object representing this Controller's session</li>
            <li id="getURLParams">
              <a title="Controller" href="../classes/Controller/getURLParams.xhtml">getURLParams()</a>
            </li>
            <li id="getViewer"><a title="Controller" href="../classes/Controller/getViewer.xhtml">getViewer()</a>
                — Return an SSViewer object to process the data</li>
            <li id="get_template_global_variables">
              <a title="Controller" href="../classes/Controller/get_template_global_variables.xhtml">get_template_global_variables()</a>
            </li>
            <li id="handleRequest"><a title="Controller" href="../classes/Controller/handleRequest.xhtml">handleRequest()</a>
                — Executes this controller, and return an {@link SS_HTTPResponse} object with the result.</li>
            <li id="hasAction">
              <a title="Controller" href="../classes/Controller/hasAction.xhtml">hasAction()</a>
            </li>
            <li id="hasActionTemplate"><a title="Controller" href="../classes/Controller/hasActionTemplate.xhtml">hasActionTemplate()</a>
                — Returns TRUE if this controller has a template that is specifically designed to handle a specific action.</li>
            <li id="has_curr"><a title="Controller" href="../classes/Controller/has_curr.xhtml">has_curr()</a>
                — Tests whether we have a currently active controller or not</li>
            <li id="init"><a title="Controller" href="../classes/Controller/init.xhtml">init()</a>
                — Initialisation function that is run before any action on the controller is called.</li>
            <li id="join_links"><a title="Controller" href="../classes/Controller/join_links.xhtml">join_links()</a>
                — Joins two or more link segments together, putting a slash between them if necessary.</li>
            <li id="popCurrent"><a title="Controller" href="../classes/Controller/popCurrent.xhtml">popCurrent()</a>
                — Pop this controller off the top of the stack.</li>
            <li id="pushCurrent"><a title="Controller" href="../classes/Controller/pushCurrent.xhtml">pushCurrent()</a>
                — Pushes this controller onto the stack of current controllers.</li>
            <li id="redirect"><a title="Controller" href="../classes/Controller/redirect.xhtml">redirect()</a>
                — Redirect to the given URL.</li>
            <li id="redirectBack"><a title="Controller" href="../classes/Controller/redirectBack.xhtml">redirectBack()</a>
                — Redirect back. Uses either the HTTP_REFERER or a manually set request-variable called "BackURL".</li>
            <li id="redirectedTo"><a title="Controller" href="../classes/Controller/redirectedTo.xhtml">redirectedTo()</a>
                — Tests whether a redirection has been requested.</li>
            <li id="removeAction"><a title="Controller" href="../classes/Controller/removeAction.xhtml">removeAction()</a>
                — Removes all the "action" part of the current URL and returns the result.</li>
            <li id="render"><a title="Controller" href="../classes/Controller/render.xhtml">render()</a>
                — Render the current controller with the templates determined by {@link getViewer()}.</li>
            <li id="setSession"><a title="Controller" href="../classes/Controller/setSession.xhtml">setSession()</a>
                — Set the Session object.</li>
            <li id="setURLParams">
              <a title="Controller" href="../classes/Controller/setURLParams.xhtml">setURLParams()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="RequestHandler" href="../classes/RequestHandler.xhtml">RequestHandler</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="definingClassForAction"><a title="RequestHandler" href="../classes/RequestHandler/definingClassForAction.xhtml">definingClassForAction()</a>
                — Return the class that defines the given action, so that we know where to check allowed_actions.</li>
            <li id="findAction">
              <a title="RequestHandler" href="../classes/RequestHandler/findAction.xhtml">findAction()</a>
            </li>
            <li id="handleAction"><a title="RequestHandler" href="../classes/RequestHandler/handleAction.xhtml">handleAction()</a>
                — Given a request, and an action name, call that action name on this RequestHandler</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="allowedActions"><a title="RequestHandler" href="../classes/RequestHandler/allowedActions.xhtml">allowedActions()</a>
                — Get a array of allowed actions defined on this controller, any parent classes or extensions.</li>
            <li id="checkAccessAction"><a title="RequestHandler" href="../classes/RequestHandler/checkAccessAction.xhtml">checkAccessAction()</a>
                — Check that the given action is allowed to be called from a URL.</li>
            <li id="getRequest"><a title="RequestHandler" href="../classes/RequestHandler/getRequest.xhtml">getRequest()</a>
                — Returns the SS_HTTPRequest object that this controller is using.</li>
            <li id="handleRequest"><a title="RequestHandler" href="../classes/RequestHandler/handleRequest.xhtml">handleRequest()</a>
                — Handles URL requests.</li>
            <li id="hasAction"><a title="RequestHandler" href="../classes/RequestHandler/hasAction.xhtml">hasAction()</a>
                — Checks if this request handler has a specific action, even if the current user cannot access it.</li>
            <li id="httpError"><a title="RequestHandler" href="../classes/RequestHandler/httpError.xhtml">httpError()</a>
                — Throws a HTTP error response encased in a {@link SS_HTTPResponse_Exception}, which is later caught in {@link RequestHandler::handleAction()} and returned to the user.</li>
            <li id="setDataModel"><a title="RequestHandler" href="../classes/RequestHandler/setDataModel.xhtml">setDataModel()</a>
                — Set the DataModel for this request.</li>
            <li id="setRequest"><a title="RequestHandler" href="../classes/RequestHandler/setRequest.xhtml">setRequest()</a>
                — Typically the request is set through {@link handleAction()} or {@link handleRequest()}, but in some based we want to set it manually.</li>
          </ul>
          <h3>Inherited from <a title="ViewableData" href="../classes/ViewableData.xhtml">ViewableData</a></h3>
          <h4>public</h4>
          <ul>
            <li id="ATT_val"><a title="ViewableData" href="../classes/ViewableData/ATT_val.xhtml">ATT_val()</a>
                — Return the value of a field escaped suitable to be inserted into an XML node attribute.</li>
            <li id="CSSClasses"><a title="ViewableData" href="../classes/ViewableData/CSSClasses.xhtml">CSSClasses()</a>
                — Get part of the current classes ancestry to be used as a CSS class.</li>
            <li id="Debug"><a title="ViewableData" href="../classes/ViewableData/Debug.xhtml">Debug()</a>
                — Return debug information about this object that can be rendered into a template</li>
            <li id="JS_val"><a title="ViewableData" href="../classes/ViewableData/JS_val.xhtml">JS_val()</a>
                — Return the value of a field in a JavaScript-save format.</li>
            <li id="Me"><a title="ViewableData" href="../classes/ViewableData/Me.xhtml">Me()</a>
                — When rendering some objects it is necessary to iterate over the object being rendered, to do this, you need access to itself.</li>
            <li id="RAW_val"><a title="ViewableData" href="../classes/ViewableData/RAW_val.xhtml">RAW_val()</a>
                — Return the value of the field without any escaping being applied.</li>
            <li id="SQL_val"><a title="ViewableData" href="../classes/ViewableData/SQL_val.xhtml">SQL_val()</a>
                — Return the value of a field in an SQL-safe format.</li>
            <li id="ThemeDir"><a title="ViewableData" href="../classes/ViewableData/ThemeDir.xhtml">ThemeDir()</a>
                — Return the directory if the current active theme (relative to the site root).</li>
            <li id="XML_val"><a title="ViewableData" href="../classes/ViewableData/XML_val.xhtml">XML_val()</a>
                — Get the string value of a field on this object that has been suitable escaped to be inserted directly into a template.</li>
            <li id="__get"><a title="ViewableData" href="../classes/ViewableData/__get.xhtml">__get()</a>
                — Get the value of a property/field on this object. This will check if a method called get{$property} exists, then check if a field is available using {@link ViewableData::getField()}, then fall back on a failover object.</li>
            <li id="__isset"><a title="ViewableData" href="../classes/ViewableData/__isset.xhtml">__isset()</a>
                — Check if a field exists on this object or its failover.</li>
            <li id="__set"><a title="ViewableData" href="../classes/ViewableData/__set.xhtml">__set()</a>
                — Set a property/field on this object. This will check for the existence of a method called set{$property}, then use the {@link ViewableData::setField()} method.</li>
            <li id="buildCastingCache"><a title="ViewableData" href="../classes/ViewableData/buildCastingCache.xhtml">buildCastingCache()</a>
                — Save the casting cache for this object (including data from any failovers) into a variable</li>
            <li id="cachedCall"><a title="ViewableData" href="../classes/ViewableData/cachedCall.xhtml">cachedCall()</a>
                — A simple wrapper around {@link ViewableData::obj()} that automatically caches the result so it can be used again without re-running the method.</li>
            <li id="castingClass"><a title="ViewableData" href="../classes/ViewableData/castingClass.xhtml">castingClass()</a>
                — Get the class name a field on this object will be casted to</li>
            <li id="castingHelper"><a title="ViewableData" href="../classes/ViewableData/castingHelper.xhtml">castingHelper()</a>
                — Return the "casting helper" (a piece of PHP code that when evaluated creates a casted value object) for a field on this object.</li>
            <li id="castingHelperPair"><a title="ViewableData" href="../classes/ViewableData/castingHelperPair.xhtml">castingHelperPair()</a>
                — Get the class a field on this object would be casted to, as well as the casting helper for casting a field to an object (see {@link ViewableData::castingHelper()} for information on casting helpers).</li>
            <li id="castingObjectCreator"><a title="ViewableData" href="../classes/ViewableData/castingObjectCreator.xhtml">castingObjectCreator()</a>
                — Converts a field spec into an object creator. For example: "Int" becomes "new Int($fieldName);" and "Varchar(50)" becomes "new Varchar($fieldName, 50);".</li>
            <li id="castingObjectCreatorPair"><a title="ViewableData" href="../classes/ViewableData/castingObjectCreatorPair.xhtml">castingObjectCreatorPair()</a>
                — Convert a field schema (e.g. "Varchar(50)") into a casting object creator array that contains both a className and castingHelper constructor code. See {@link castingObjectCreator} for more information about the constructor.</li>
            <li id="customise"><a title="ViewableData" href="../classes/ViewableData/customise.xhtml">customise()</a>
                — Merge some arbitrary data in with this object. This method returns a {@link ViewableData_Customised} instance with references to both this and the new custom data.</li>
            <li id="defineMethods"><a title="ViewableData" href="../classes/ViewableData/defineMethods.xhtml">defineMethods()</a>
                — Add methods from the {@link ViewableData::$failover} object, as well as wrapping any methods prefixed with an underscore into a {@link ViewableData::cachedCall()}.</li>
            <li id="escapeTypeForField"><a title="ViewableData" href="../classes/ViewableData/escapeTypeForField.xhtml">escapeTypeForField()</a>
                — Return the string-format type for the given field.</li>
            <li id="getField"><a title="ViewableData" href="../classes/ViewableData/getField.xhtml">getField()</a>
                — Get the value of a field on this object. This should be overloaded in child classes.</li>
            <li id="getIterator"><a title="ViewableData" href="../classes/ViewableData/getIterator.xhtml">getIterator()</a>
                — Return a single-item iterator so you can iterate over the fields of a single record.</li>
            <li id="getXMLValues"><a title="ViewableData" href="../classes/ViewableData/getXMLValues.xhtml">getXMLValues()</a>
                — Get an array of XML-escaped values by field name</li>
            <li id="hasField"><a title="ViewableData" href="../classes/ViewableData/hasField.xhtml">hasField()</a>
                — Check if a field exists on this object. This should be overloaded in child classes.</li>
            <li id="hasValue"><a title="ViewableData" href="../classes/ViewableData/hasValue.xhtml">hasValue()</a>
                — Checks if a given method/field has a valid value. If the result is an object, this will return the result of the exists method, otherwise will check if the result is not just an empty paragraph tag.</li>
            <li id="obj"><a title="ViewableData" href="../classes/ViewableData/obj.xhtml">obj()</a>
                — Get the value of a field on this object, automatically inserting the value into any available casting objects that have been specified.</li>
            <li id="renderWith"><a title="ViewableData" href="../classes/ViewableData/renderWith.xhtml">renderWith()</a>
                — Render this object into the template, and get the result as a string. You can pass one of the following as the $template parameter:  - a template name (e.g. Page)  - an array of possible template names - the first valid one will be used  - an SSViewer instance</li>
            <li id="setCustomisedObj">
              <a title="ViewableData" href="../classes/ViewableData/setCustomisedObj.xhtml">setCustomisedObj()</a>
            </li>
            <li id="setField"><a title="ViewableData" href="../classes/ViewableData/setField.xhtml">setField()</a>
                — Set a field on this object. This should be overloaded in child classes.</li>
          </ul>
          <h3>Inherited from <a title="Object" href="../classes/Object.xhtml">Object</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="addMethodsFrom"><a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom()</a>
                — Add all the methods from an object property (which is an {@link Extension}) to this object.</li>
            <li id="addWrapperMethod"><a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod()</a>
                — Add a wrapper method - a method which points to another method with a different name. For example, Thumbnail(x) can be wrapped to generateThumbnail(x)</li>
            <li id="afterExtending"><a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending()</a>
                — Allows user code to hook into Object::extend after control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="beforeExtending"><a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending()</a>
                — Allows user code to hook into Object::extend prior to control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="createMethod"><a title="Object" href="../classes/Object/createMethod.xhtml">createMethod()</a>
                — Add an extra method using raw PHP code passed as a string</li>
            <li id="defineMethods"><a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods()</a>
                — Adds any methods from {@link Extension} instances attached to this object.</li>
            <li id="loadCache"><a title="Object" href="../classes/Object/loadCache.xhtml">loadCache()</a>
                — Loads a cache from the filesystem if a valid on is present and within the specified lifetime</li>
            <li id="sanitiseCachename"><a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename()</a>
                — Strip a file name of special characters so it is suitable for use as a cache file name</li>
            <li id="saveCache"><a title="Object" href="../classes/Object/saveCache.xhtml">saveCache()</a>
                — Save a piece of cached data to the file system</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__call"><a title="Object" href="../classes/Object/__call.xhtml">__call()</a>
                — Attemps to locate and call a method dynamically added to a class at runtime if a default cannot be located</li>
            <li id="__toString">
              <a title="Object" href="../classes/Object/__toString.xhtml">__toString()</a>
            </li>
            <li id="addStaticVars"><a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars()</a>
                — Merge in a set of additional static variables</li>
            <li id="add_extension"><a title="Object" href="../classes/Object/add_extension.xhtml">add_extension()</a>
                — Add an extension to a specific class.</li>
            <li id="add_static_var"><a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var()</a>
                — Add a static variable without replacing it completely if possible, but merging in with both existing PHP statics and existing psuedo-statics. Uses PHP's array_merge_recursive() with if the $replace argument is FALSE.</li>
            <li id="allMethodNames"><a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames()</a>
                — Return the names of all the methods available on this object</li>
            <li id="cacheToFile"><a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile()</a>
                — Cache the results of an instance method in this object to a file, or if it is already cache return the cached results</li>
            <li id="clearCache"><a title="Object" href="../classes/Object/clearCache.xhtml">clearCache()</a>
                — Clears the cache for the given cacheToFile call</li>
            <li id="combined_static"><a title="Object" href="../classes/Object/combined_static.xhtml">combined_static()</a>
                — Traverse down a class ancestry and attempt to merge all the uninherited static values for a particular static into a single variable</li>
            <li id="config"><a title="Object" href="../classes/Object/config.xhtml">config()</a>
                — Get a configuration accessor for this class. Short hand for Config::inst()-&gt;get($this-&gt;class, .....).</li>
            <li id="create"><a title="Object" href="../classes/Object/create.xhtml">create()</a>
                — An implementation of the factory method, allows you to create an instance of a class</li>
            <li id="create_from_string"><a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string()</a>
                — Create an object from a string representation.  It treats it as a PHP constructor without the 'new' keyword.  It also manages to construct the object without the use of eval().</li>
            <li id="exists"><a title="Object" href="../classes/Object/exists.xhtml">exists()</a>
                — Return true if this object "exists" i.e. has a sensible value</li>
            <li id="extend"><a title="Object" href="../classes/Object/extend.xhtml">extend()</a>
                — Run the given function on all of this object's extensions. Note that this method originally returned void, so if you wanted to return results, you're hosed</li>
            <li id="getCustomClass"><a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass()</a>
                — If a class has been overloaded, get the class name it has been overloaded with - otherwise return the class name</li>
            <li id="getExtensionInstance"><a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance()</a>
                — Get an extension instance attached to this object by name.</li>
            <li id="getExtensionInstances"><a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances()</a>
                — Get all extension instances for this specific object instance.</li>
            <li id="get_extensions">
              <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions()</a>
            </li>
            <li id="get_extra_config_sources">
              <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources()</a>
            </li>
            <li id="get_static"><a title="Object" href="../classes/Object/get_static.xhtml">get_static()</a>
                — Get a static variable, taking into account SS's inbuild static caches and pseudo-statics</li>
            <li id="hasExtension"><a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension()</a>
                — Returns TRUE if this object instance has a specific extension applied in {@link $extension_instances}. Extension instances are initialized at constructor time, meaning if you use {@link add_extension()} afterwards, the added extension will just be added to new instances of the extended class. Use the static method {@link has_extension()} to check if a class (not an instance) has a specific extension.</li>
            <li id="hasMethod"><a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod()</a>
                — Return TRUE if a method exists on this object</li>
            <li id="has_extension"><a title="Object" href="../classes/Object/has_extension.xhtml">has_extension()</a>
                — Return TRUE if a class has a specified extension.</li>
            <li id="invokeWithExtensions"><a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions()</a>
                — Calls a method if available on both this object and all applied {@link Extensions}, and then attempts to merge all results into an array</li>
            <li id="is_a"><a title="Object" href="../classes/Object/is_a.xhtml">is_a()</a>
                — Check if this class is an instance of a specific class, or has that class as one of its parents</li>
            <li id="parentClass">
              <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass()</a>
            </li>
            <li id="parse_class_spec"><a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec()</a>
                — Parses a class-spec, such as "Versioned('Stage','Live')", as passed to create_from_string().</li>
            <li id="remove_extension"><a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension()</a>
                — Remove an extension from a class.</li>
            <li id="set_stat">
              <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat()</a>
            </li>
            <li id="set_static"><a title="Object" href="../classes/Object/set_static.xhtml">set_static()</a>
                — Set a static variable</li>
            <li id="stat">
              <a title="Object" href="../classes/Object/stat.xhtml">stat()</a>
            </li>
            <li id="static_lookup"><a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup()</a>
                — Get the value of a static property of a class, even in that property is declared protected (but not private), without any inheritance, merging or parent lookup if it doesn't exist on the given class.</li>
            <li id="strong_create"><a title="Object" href="../classes/Object/strong_create.xhtml">strong_create()</a>
                — Similar to {@link Object::create()}, except that classes are only overloaded if you set the $strong parameter to TRUE when using {@link Object::useCustomClass()}</li>
            <li id="uninherited">
              <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited()</a>
            </li>
            <li id="uninherited_static"><a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static()</a>
                — Get an uninherited static variable - a variable that is explicity set in this class, and not in the parent class.</li>
            <li id="useCustomClass"><a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass()</a>
                — This class allows you to overload classes with other classes when they are constructed using the factory method {@link Object::create()}</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
