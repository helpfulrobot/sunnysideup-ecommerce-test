<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - i18n</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">i18n</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/i18n/i18n.php.xhtml#line64">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>i18n</h1>
        <h4>Base-class for storage and retrieval of translated entities.</h4>
        <p>Please see the 'translatable' module for managing translations of database-content.<br/><br/>&lt;b&gt;Usage&lt;/b&gt;<br/><br/>PHP:<br/>&lt;code&gt;<br/>_t('MyNamespace.MYENTITY', 'My default natural language value');<br/>_t('MyNamespace.MYENTITY', 'My default natural language value', 'My explanatory context');<br/>sprintf(_t('MyNamespace.MYENTITY', 'Counting %s things'), 42);<br/>&lt;/code&gt;<br/><br/>Templates:<br/>&lt;code&gt;<br/>&lt;% _t('MyNamespace.MYENTITY', 'My default natural language value') %&gt;<br/>&lt;% sprintf(_t('MyNamespace.MYENTITY','Counting %s things'),$ThingsCount) %&gt;<br/>&lt;/code&gt;<br/><br/>Javascript (see framework/javascript/i18n.js):<br/>&lt;code&gt;<br/>ss.i18n._t('MyEntity.MyNamespace','My default natural language value');<br/>&lt;/code&gt;<br/><br/>File-based i18n-translations always have a "locale" (e.g. 'en_US').<br/>Common language names (e.g. 'en') are mainly used in the 'translatable' module<br/>database-entities.<br/><br/>&lt;b&gt;Text Collection&lt;/b&gt;<br/><br/>Features a "textcollector-mode" that parses all files with a certain extension<br/>(currently *.php and *.ss) for new translatable strings. Textcollector will write<br/>updated string-tables to their respective folders inside the module, and automatically<br/>namespace entities to the classes/templates they are found in (e.g. $lang['en_US']['AssetAdmin']['UPLOADFILES']).<br/><br/>Caution: Does not apply any character-set conversion, it is assumed that all content<br/>is stored and represented in UTF-8 (Unicode). Please make sure your files are created with the correct<br/>character-set, and your HTML-templates render UTF-8.<br/><br/>Caution: The language file has to be stored in the same module path as the "filename namespaces"<br/>on the entities. So an entity stored in $lang['en_US']['AssetAdmin']['DETAILSTAB'] has to<br/>in the language file cms/lang/en_US.php, as the referenced file (AssetAdmin.php) is stored<br/>in the "cms" module.<br/><br/>&lt;b&gt;Locales&lt;/b&gt;<br/><br/>For the i18n class, a "locale" consists of a language code plus a region code separated by an underscore,<br/>for example "de_AT" for German language ("de") in the region Austria ("AT").<br/>See http://www.w3.org/International/articles/language-tags/ for a detailed description.</p>
        <ul>
          <li>Author: Bernat Foj Capell &lt;bernat@silverstripe.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class i18n
                extends <a title="Object" href="../classes/Object.xhtml">Object</a>
                implements
                <a title="TemplateGlobalProvider" href="../interfaces/TemplateGlobalProvider.xhtml">TemplateGlobalProvider</a>,<a title="Flushable" href="../interfaces/Flushable.xhtml">Flushable</a>
            {<br/><ul class="none"><li>// members</li><li>protected string <a href="#members">$current_locale</a>;
                    </li><li>private string <a href="#members">$default_locale</a>;
                    </li><li>private boolean <a href="#members">$js_i18n</a>;
                    </li><li>private string <a href="#members">$date_format</a>;
                    </li><li>private string <a href="#members">$time_format</a>;
                    </li><li>protected array <a href="#members">$translators</a>;
                    </li><li>private array <a href="#members">$all_locales</a>;
                    </li><li>private array <a href="#members">$common_languages</a>;
                    </li><li>private array <a href="#members">$common_locales</a>;
                    </li><li>private array <a href="#members">$tinymce_lang</a>;
                    </li><li>private array <a href="#members">$likely_subtags</a>;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="Object">Object</span></li><li>public string <a href="#members">$class</a>;
                        </li><li>protected array <a href="#members">$extension_instances</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$beforeExtendCallbacks</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$afterExtendCallbacks</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public static void <a title="i18n" href="../classes/i18n/flush.xhtml">flush</a>()
                    </li><li>public static Zend_Cache <a title="i18n" href="../classes/i18n/get_cache.xhtml">get_cache</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/set_js_i18n.xhtml">set_js_i18n</a>()
                    </li><li>public static bool <a title="i18n" href="../classes/i18n/get_js_i18n.xhtml">get_js_i18n</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/set_date_format.xhtml">set_date_format</a>()
                    </li><li>public static string <a title="i18n" href="../classes/i18n/get_date_format.xhtml">get_date_format</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/set_time_format.xhtml">set_time_format</a>()
                    </li><li>public static string <a title="i18n" href="../classes/i18n/get_time_format.xhtml">get_time_format</a>()
                    </li><li>public static string <a title="i18n" href="../classes/i18n/_t.xhtml">_t</a>()
                    </li><li>public static array <a title="i18n" href="../classes/i18n/get_translators.xhtml">get_translators</a>()
                    </li><li>public static Zend_Translate <a title="i18n" href="../classes/i18n/get_translator.xhtml">get_translator</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/register_translator.xhtml">register_translator</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/unregister_translator.xhtml">unregister_translator</a>()
                    </li><li>public static list <a title="i18n" href="../classes/i18n/get_common_languages.xhtml">get_common_languages</a>()
                    </li><li>public static list <a title="i18n" href="../classes/i18n/get_common_locales.xhtml">get_common_locales</a>()
                    </li><li>public static list <a title="i18n" href="../classes/i18n/get_locale_list.xhtml">get_locale_list</a>()
                    </li><li>public static string <a title="i18n" href="../classes/i18n/get_closest_translation.xhtml">get_closest_translation</a>()
                    </li><li>public static array <a title="i18n" href="../classes/i18n/get_existing_translations.xhtml">get_existing_translations</a>()
                    </li><li>public static Name <a title="i18n" href="../classes/i18n/get_language_name.xhtml">get_language_name</a>()
                    </li><li>public static Name <a title="i18n" href="../classes/i18n/get_locale_name.xhtml">get_locale_name</a>()
                    </li><li>public static Language <a title="i18n" href="../classes/i18n/get_language_code.xhtml">get_language_code</a>()
                    </li><li>public static Language <a title="i18n" href="../classes/i18n/get_tinymce_lang.xhtml">get_tinymce_lang</a>()
                    </li><li>public static array <a title="i18n" href="../classes/i18n/get_translatable_modules.xhtml">get_translatable_modules</a>()
                    </li><li>public static string <a title="i18n" href="../classes/i18n/get_lang_from_locale.xhtml">get_lang_from_locale</a>()
                    </li><li>public static string <a title="i18n" href="../classes/i18n/get_locale_from_lang.xhtml">get_locale_from_lang</a>()
                    </li><li>public static string <a title="i18n" href="../classes/i18n/convert_rfc1766.xhtml">convert_rfc1766</a>()
                    </li><li>public static string <a title="i18n" href="../classes/i18n/get_owner_module.xhtml">get_owner_module</a>()
                    </li><li>public static boolean <a title="i18n" href="../classes/i18n/validate_locale.xhtml">validate_locale</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/set_locale.xhtml">set_locale</a>()
                    </li><li>public static string <a title="i18n" href="../classes/i18n/get_locale.xhtml">get_locale</a>()
                    </li><li>public static String <a title="i18n" href="../classes/i18n/default_locale.xhtml">default_locale</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/set_default_locale.xhtml">set_default_locale</a>()
                    </li><li>public static String <a title="i18n" href="../classes/i18n/get_script_direction.xhtml">get_script_direction</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/include_by_locale.xhtml">include_by_locale</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/include_by_class.xhtml">include_by_class</a>()
                    </li><li>public static void <a title="i18n" href="../classes/i18n/get_template_global_variables.xhtml">get_template_global_variables</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="Object">Object</span></li><li>public static Config_ForClass|null <a title="Object" href="../classes/Object/config.xhtml">config</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/create.xhtml">create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/strong_create.xhtml">strong_create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass</a>()
                        </li><li>public static string <a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass</a>()
                        </li><li>public static any <a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/get_static.xhtml">get_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/set_static.xhtml">set_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/combined_static.xhtml">combined_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/has_extension.xhtml">has_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_extension.xhtml">add_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension</a>()
                        </li><li>public static array <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/__construct.xhtml">__construct</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/__call.xhtml">__call</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/createMethod.xhtml">createMethod</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/stat.xhtml">stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/exists.xhtml">exists</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/is_a.xhtml">is_a</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/__toString.xhtml">__toString</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/extend.xhtml">extend</a>()
                        </li><li>public Extension <a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/clearCache.xhtml">clearCache</a>()
                        </li><li>protected mixed <a title="Object" href="../classes/Object/loadCache.xhtml">loadCache</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/saveCache.xhtml">saveCache</a>()
                        </li><li>protected string <a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/Object.xhtml">Object</a>
            </li>
          </ul>
          <h4>Implements</h4>
          <ul>
            <li>
              <a href="../interfaces/TemplateGlobalProvider.xhtml">TemplateGlobalProvider</a>
            </li>
            <li>
              <a href="../interfaces/Flushable.xhtml">Flushable</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">2064</td>
            <td>Remove reliance on global state, by refactoring into an i18nTranslatorManager</td>
          </tr>
          <tr>
            <td class="nummeric">2264</td>
            <td>Inspect themes</td>
          </tr>
          <tr>
            <td class="nummeric">2277</td>
            <td>Replace with CLDR list of actually available languages/regions</td>
          </tr>
          <tr>
            <td class="nummeric">2591</td>
            <td>Replace with theme listing once implemented in TemplateManifest</td>
          </tr>
          <tr>
            <td class="nummeric">584+</td>
            <td>Add support for removing extensions with parameters</td>
          </tr>
          <tr>
            <td class="nummeric">966+</td>
            <td>integrate inheritance rules</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="all_locales"><strong>$all_locales</strong>
                —
                array<br/><span class="indent">An exhaustive list of possible locales (code =&gt; language and country)</span></li>
            <li id="common_languages"><strong>$common_languages</strong>
                —
                array</li>
            <li id="common_locales"><strong>$common_locales</strong>
                —
                array</li>
            <li id="date_format"><strong>$date_format</strong>
                —
                string</li>
            <li id="default_locale"><strong>$default_locale</strong>
                —
                string</li>
            <li id="js_i18n"><strong>$js_i18n</strong>
                —
                boolean</li>
            <li id="likely_subtags"><strong>$likely_subtags</strong>
                —
                array</li>
            <li id="time_format"><strong>$time_format</strong>
                —
                string</li>
            <li id="tinymce_lang"><strong>$tinymce_lang</strong>
                —
                array</li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="afterExtendCallbacks"><strong>$afterExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call after extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="beforeExtendCallbacks"><strong>$beforeExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call prior to extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="current_locale">
              <strong>$current_locale</strong>
              <br/>
              <span class="indent">This static variable is used to store the current defined locale.</span>
            </li>
            <li id="extension_instances"><strong>$extension_instances</strong>
                —
                array</li>
            <li id="translators"><strong>$translators</strong>
                —
                array</li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="class"><strong>$class</strong>
                —
                string</li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="_t"><a title="i18n" href="../classes/i18n/_t.xhtml">_t()</a>
                — This is the main translator function. Returns the string defined by $class and $entity according to the currently set locale.</li>
            <li id="convert_rfc1766"><a title="i18n" href="../classes/i18n/convert_rfc1766.xhtml">convert_rfc1766()</a>
                — Gets a RFC 1766 compatible language code, e.g. "en-US".</li>
            <li id="default_locale"><a title="i18n" href="../classes/i18n/default_locale.xhtml">default_locale()</a>
                — This is the "fallback locale", in case resources with the "current locale" (set through {@link set_locale()}) can't be found.</li>
            <li id="flush"><a title="i18n" href="../classes/i18n/flush.xhtml">flush()</a>
                — Triggered early in the request when someone requests a flush.</li>
            <li id="get_cache"><a title="i18n" href="../classes/i18n/get_cache.xhtml">get_cache()</a>
                — Return an instance of the cache used for i18n data.</li>
            <li id="get_closest_translation"><a title="i18n" href="../classes/i18n/get_closest_translation.xhtml">get_closest_translation()</a>
                — Matches a given locale with the closest translation available in the system</li>
            <li id="get_common_languages"><a title="i18n" href="../classes/i18n/get_common_languages.xhtml">get_common_languages()</a>
                — Get a list of commonly used languages</li>
            <li id="get_common_locales"><a title="i18n" href="../classes/i18n/get_common_locales.xhtml">get_common_locales()</a>
                — Get a list of commonly used locales</li>
            <li id="get_date_format">
              <a title="i18n" href="../classes/i18n/get_date_format.xhtml">get_date_format()</a>
            </li>
            <li id="get_existing_translations"><a title="i18n" href="../classes/i18n/get_existing_translations.xhtml">get_existing_translations()</a>
                — Searches the root-directory for module-directories (identified by having a _config.php on their first directory-level).</li>
            <li id="get_js_i18n">
              <a title="i18n" href="../classes/i18n/get_js_i18n.xhtml">get_js_i18n()</a>
            </li>
            <li id="get_lang_from_locale"><a title="i18n" href="../classes/i18n/get_lang_from_locale.xhtml">get_lang_from_locale()</a>
                — Returns the "short" language name from a locale, e.g. "en_US" would return "en".</li>
            <li id="get_language_code"><a title="i18n" href="../classes/i18n/get_language_code.xhtml">get_language_code()</a>
                — Get a code from an English language name</li>
            <li id="get_language_name"><a title="i18n" href="../classes/i18n/get_language_name.xhtml">get_language_name()</a>
                — Get a name from a language code (two characters, e.g. "en").</li>
            <li id="get_locale"><a title="i18n" href="../classes/i18n/get_locale.xhtml">get_locale()</a>
                — Get the current locale.</li>
            <li id="get_locale_from_lang"><a title="i18n" href="../classes/i18n/get_locale_from_lang.xhtml">get_locale_from_lang()</a>
                — Provides you "likely locales" for a given "short" language code. This is a guess, as we can't disambiguate from e.g. "en" to "en_US" - it could also mean "en_UK". Based on the Unicode CLDR project.</li>
            <li id="get_locale_list"><a title="i18n" href="../classes/i18n/get_locale_list.xhtml">get_locale_list()</a>
                — Get a list of locales (code =&gt; language and country)</li>
            <li id="get_locale_name"><a title="i18n" href="../classes/i18n/get_locale_name.xhtml">get_locale_name()</a>
                — Get a name from a locale code (xx_YY).</li>
            <li id="get_owner_module"><a title="i18n" href="../classes/i18n/get_owner_module.xhtml">get_owner_module()</a>
                — Given a PHP class name, finds the module where it's located.</li>
            <li id="get_script_direction"><a title="i18n" href="../classes/i18n/get_script_direction.xhtml">get_script_direction()</a>
                — Returns the script direction in format compatible with the HTML "dir" attribute.</li>
            <li id="get_template_global_variables">
              <a title="i18n" href="../classes/i18n/get_template_global_variables.xhtml">get_template_global_variables()</a>
            </li>
            <li id="get_time_format">
              <a title="i18n" href="../classes/i18n/get_time_format.xhtml">get_time_format()</a>
            </li>
            <li id="get_tinymce_lang"><a title="i18n" href="../classes/i18n/get_tinymce_lang.xhtml">get_tinymce_lang()</a>
                — Get the current tinyMCE language</li>
            <li id="get_translatable_modules"><a title="i18n" href="../classes/i18n/get_translatable_modules.xhtml">get_translatable_modules()</a>
                — Searches the root-directory for module-directories (identified by having a _config.php on their first directory-level and a language-file with the default locale in the /lang-subdirectory).</li>
            <li id="get_translator">
              <a title="i18n" href="../classes/i18n/get_translator.xhtml">get_translator()</a>
            </li>
            <li id="get_translators">
              <a title="i18n" href="../classes/i18n/get_translators.xhtml">get_translators()</a>
            </li>
            <li id="include_by_class"><a title="i18n" href="../classes/i18n/include_by_class.xhtml">include_by_class()</a>
                — Given a class name (a "locale namespace"), will search for its module and, if available, will load the resources for the currently defined locale.</li>
            <li id="include_by_locale"><a title="i18n" href="../classes/i18n/include_by_locale.xhtml">include_by_locale()</a>
                — Includes all available language files for a certain defined locale.</li>
            <li id="register_translator">
              <a title="i18n" href="../classes/i18n/register_translator.xhtml">register_translator()</a>
            </li>
            <li id="set_date_format">
              <a title="i18n" href="../classes/i18n/set_date_format.xhtml">set_date_format()</a>
            </li>
            <li id="set_default_locale"><a title="i18n" href="../classes/i18n/set_default_locale.xhtml">set_default_locale()</a>
                — See {@link default_locale()} for usage.</li>
            <li id="set_js_i18n"><a title="i18n" href="../classes/i18n/set_js_i18n.xhtml">set_js_i18n()</a>
                — Use javascript i18n through the ss.i18n class (enabled by default).</li>
            <li id="set_locale"><a title="i18n" href="../classes/i18n/set_locale.xhtml">set_locale()</a>
                — Set the current locale, used as the default for any localized classes, such as {@link FormField} or {@link DBField} instances. Locales can also be persisted in {@link Member-&gt;Locale}, for example in the {@link CMSMain} interface the Member locale overrules the global locale value set here.</li>
            <li id="set_time_format">
              <a title="i18n" href="../classes/i18n/set_time_format.xhtml">set_time_format()</a>
            </li>
            <li id="unregister_translator">
              <a title="i18n" href="../classes/i18n/unregister_translator.xhtml">unregister_translator()</a>
            </li>
            <li id="validate_locale"><a title="i18n" href="../classes/i18n/validate_locale.xhtml">validate_locale()</a>
                — Validates a "long" locale format (e.g. "en_US") by checking it against {@link $all_locales}.</li>
          </ul>
          <h3>Inherited from <a title="Object" href="../classes/Object.xhtml">Object</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="addMethodsFrom"><a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom()</a>
                — Add all the methods from an object property (which is an {@link Extension}) to this object.</li>
            <li id="addWrapperMethod"><a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod()</a>
                — Add a wrapper method - a method which points to another method with a different name. For example, Thumbnail(x) can be wrapped to generateThumbnail(x)</li>
            <li id="afterExtending"><a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending()</a>
                — Allows user code to hook into Object::extend after control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="beforeExtending"><a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending()</a>
                — Allows user code to hook into Object::extend prior to control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="createMethod"><a title="Object" href="../classes/Object/createMethod.xhtml">createMethod()</a>
                — Add an extra method using raw PHP code passed as a string</li>
            <li id="defineMethods"><a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods()</a>
                — Adds any methods from {@link Extension} instances attached to this object.</li>
            <li id="loadCache"><a title="Object" href="../classes/Object/loadCache.xhtml">loadCache()</a>
                — Loads a cache from the filesystem if a valid on is present and within the specified lifetime</li>
            <li id="sanitiseCachename"><a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename()</a>
                — Strip a file name of special characters so it is suitable for use as a cache file name</li>
            <li id="saveCache"><a title="Object" href="../classes/Object/saveCache.xhtml">saveCache()</a>
                — Save a piece of cached data to the file system</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__call"><a title="Object" href="../classes/Object/__call.xhtml">__call()</a>
                — Attemps to locate and call a method dynamically added to a class at runtime if a default cannot be located</li>
            <li id="__toString">
              <a title="Object" href="../classes/Object/__toString.xhtml">__toString()</a>
            </li>
            <li id="addStaticVars"><a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars()</a>
                — Merge in a set of additional static variables</li>
            <li id="add_extension"><a title="Object" href="../classes/Object/add_extension.xhtml">add_extension()</a>
                — Add an extension to a specific class.</li>
            <li id="add_static_var"><a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var()</a>
                — Add a static variable without replacing it completely if possible, but merging in with both existing PHP statics and existing psuedo-statics. Uses PHP's array_merge_recursive() with if the $replace argument is FALSE.</li>
            <li id="allMethodNames"><a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames()</a>
                — Return the names of all the methods available on this object</li>
            <li id="cacheToFile"><a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile()</a>
                — Cache the results of an instance method in this object to a file, or if it is already cache return the cached results</li>
            <li id="clearCache"><a title="Object" href="../classes/Object/clearCache.xhtml">clearCache()</a>
                — Clears the cache for the given cacheToFile call</li>
            <li id="combined_static"><a title="Object" href="../classes/Object/combined_static.xhtml">combined_static()</a>
                — Traverse down a class ancestry and attempt to merge all the uninherited static values for a particular static into a single variable</li>
            <li id="config"><a title="Object" href="../classes/Object/config.xhtml">config()</a>
                — Get a configuration accessor for this class. Short hand for Config::inst()-&gt;get($this-&gt;class, .....).</li>
            <li id="create"><a title="Object" href="../classes/Object/create.xhtml">create()</a>
                — An implementation of the factory method, allows you to create an instance of a class</li>
            <li id="create_from_string"><a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string()</a>
                — Create an object from a string representation.  It treats it as a PHP constructor without the 'new' keyword.  It also manages to construct the object without the use of eval().</li>
            <li id="exists"><a title="Object" href="../classes/Object/exists.xhtml">exists()</a>
                — Return true if this object "exists" i.e. has a sensible value</li>
            <li id="extend"><a title="Object" href="../classes/Object/extend.xhtml">extend()</a>
                — Run the given function on all of this object's extensions. Note that this method originally returned void, so if you wanted to return results, you're hosed</li>
            <li id="getCustomClass"><a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass()</a>
                — If a class has been overloaded, get the class name it has been overloaded with - otherwise return the class name</li>
            <li id="getExtensionInstance"><a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance()</a>
                — Get an extension instance attached to this object by name.</li>
            <li id="getExtensionInstances"><a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances()</a>
                — Get all extension instances for this specific object instance.</li>
            <li id="get_extensions">
              <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions()</a>
            </li>
            <li id="get_extra_config_sources">
              <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources()</a>
            </li>
            <li id="get_static"><a title="Object" href="../classes/Object/get_static.xhtml">get_static()</a>
                — Get a static variable, taking into account SS's inbuild static caches and pseudo-statics</li>
            <li id="hasExtension"><a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension()</a>
                — Returns TRUE if this object instance has a specific extension applied in {@link $extension_instances}. Extension instances are initialized at constructor time, meaning if you use {@link add_extension()} afterwards, the added extension will just be added to new instances of the extended class. Use the static method {@link has_extension()} to check if a class (not an instance) has a specific extension.</li>
            <li id="hasMethod"><a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod()</a>
                — Return TRUE if a method exists on this object</li>
            <li id="has_extension"><a title="Object" href="../classes/Object/has_extension.xhtml">has_extension()</a>
                — Return TRUE if a class has a specified extension.</li>
            <li id="invokeWithExtensions"><a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions()</a>
                — Calls a method if available on both this object and all applied {@link Extensions}, and then attempts to merge all results into an array</li>
            <li id="is_a"><a title="Object" href="../classes/Object/is_a.xhtml">is_a()</a>
                — Check if this class is an instance of a specific class, or has that class as one of its parents</li>
            <li id="parentClass">
              <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass()</a>
            </li>
            <li id="parse_class_spec"><a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec()</a>
                — Parses a class-spec, such as "Versioned('Stage','Live')", as passed to create_from_string().</li>
            <li id="remove_extension"><a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension()</a>
                — Remove an extension from a class.</li>
            <li id="set_stat">
              <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat()</a>
            </li>
            <li id="set_static"><a title="Object" href="../classes/Object/set_static.xhtml">set_static()</a>
                — Set a static variable</li>
            <li id="stat">
              <a title="Object" href="../classes/Object/stat.xhtml">stat()</a>
            </li>
            <li id="static_lookup"><a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup()</a>
                — Get the value of a static property of a class, even in that property is declared protected (but not private), without any inheritance, merging or parent lookup if it doesn't exist on the given class.</li>
            <li id="strong_create"><a title="Object" href="../classes/Object/strong_create.xhtml">strong_create()</a>
                — Similar to {@link Object::create()}, except that classes are only overloaded if you set the $strong parameter to TRUE when using {@link Object::useCustomClass()}</li>
            <li id="uninherited">
              <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited()</a>
            </li>
            <li id="uninherited_static"><a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static()</a>
                — Get an uninherited static variable - a variable that is explicity set in this class, and not in the parent class.</li>
            <li id="useCustomClass"><a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass()</a>
                — This class allows you to overload classes with other classes when they are constructed using the factory method {@link Object::create()}</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
