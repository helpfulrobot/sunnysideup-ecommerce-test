<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - SS_ConfigStaticManifest</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">SS_ConfigStaticManifest</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/core/manifest/ConfigStaticManifest.php.xhtml#line15">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>SS_ConfigStaticManifest</h1>
        <h4>A utility class which builds a manifest of the statics defined in all classes, along with their access levels and values</h4>
        <p>We use this to make the statics that the Config system uses as default values be truely immutable.<br/><br/>It has the side effect of allowing Config to avoid private-level access restrictions, so we can<br/>optionally catch attempts to modify the config statics (otherwise the modification will appear<br/>to work, but won't actually have any effect - the equvilent of failing silently)</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class SS_ConfigStaticManifest
            {<br/><ul class="none"><li>// members</li><li>protected <a href="#members">$base</a>;
                    </li><li>protected <a href="#members">$tests</a>;
                    </li><li>protected <a href="#members">$cache</a>;
                    </li><li>protected <a href="#members">$key</a>;
                    </li><li>protected <a href="#members">$index</a>;
                    </li><li>protected <a href="#members">$statics</a>;
                    </li><li>protected array <a href="#members">$initial_classes</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/__construct.xhtml">__construct</a>()
                    </li><li>public void <a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/get.xhtml">get</a>()
                    </li><li>public void <a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/regenerate.xhtml">regenerate</a>()
                    </li><li>public void <a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/handleFile.xhtml">handleFile</a>()
                    </li><li>public void <a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/getStatics.xhtml">getStatics</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="base">
              <strong>$base</strong>
            </li>
            <li id="cache">
              <strong>$cache</strong>
            </li>
            <li id="index">
              <strong>$index</strong>
            </li>
            <li id="initial_classes">
              <strong>$initial_classes</strong>
            </li>
            <li id="key">
              <strong>$key</strong>
            </li>
            <li id="statics">
              <strong>$statics</strong>
            </li>
            <li id="tests">
              <strong>$tests</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/__construct.xhtml">__construct()</a>
                — Constructs and initialises a new config static manifest, either loading the data from the cache or re-scanning for classes.</li>
            <li id="get">
              <a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/get.xhtml">get()</a>
            </li>
            <li id="getStatics">
              <a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/getStatics.xhtml">getStatics()</a>
            </li>
            <li id="handleFile">
              <a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/handleFile.xhtml">handleFile()</a>
            </li>
            <li id="regenerate"><a title="SS_ConfigStaticManifest" href="../classes/SS_ConfigStaticManifest/regenerate.xhtml">regenerate()</a>
                — Completely regenerates the manifest file.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
