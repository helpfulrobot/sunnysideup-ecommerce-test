<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - ShoppingCart</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">ShoppingCart</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/ecommerce/code/api/ShoppingCart.php.xhtml#line37">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>ShoppingCart</h1>
        <h4>ShoppingCart - provides a global way to interface with the cart (current order).</h4>
        <p>This can be used in other code by calling $cart = ShoppingCart::singleton();<br/><br/>The shopping cart can be accessed as an order handler from the back-end<br/>(e.g. when creating an order programmatically), while the accompagnying controller<br/>is used by web-users to manipulate their order.<br/><br/>A bunch of core functions are also stored in the order itself.<br/>Methods and variables are in the shopping cart if they are relevant<br/>only before (and while) the order is placed (e.g. latest update message),<br/>and others are in the order because they are relevant even after the<br/>order has been submitted (e.g. Total Cost).<br/><br/>Key methods:<br/><br/>//get Cart<br/>$myCart = ShoppingCart::singleton();<br/><br/>//get order<br/>$myOrder = ShoppingCart::current_order();<br/><br/>//view order (from another controller)<br/>$this-&gt;redirect(ShoppingCart::current_order()-&gt;Link());<br/><br/>//add item to cart<br/>ShoppingCart::singleton()-&gt;addBuyable($myProduct);</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class ShoppingCart
                extends <a title="Object" href="../classes/Object.xhtml">Object</a>
            {<br/><ul class="none"><li>// members</li><li>private <span title="Array">Array</span> <a href="#members">$session_variable_names</a>;
                    </li><li>private <span title="Object">Object</span> <a href="#members">$singletoncart</a>;
                    </li><li>protected array <a href="#members">$messages</a>;
                    </li><li>protected <span title="Object">Object</span> <a href="#members">$order</a>;
                    </li><li>protected <span title="Boolean">Boolean</span> <a href="#members">$requireSavedOrder</a>;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="Object">Object</span></li><li>public string <a href="#members">$class</a>;
                        </li><li>protected array <a href="#members">$extension_instances</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$beforeExtendCallbacks</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$afterExtendCallbacks</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public static ShoppingCart <a title="ShoppingCart" href="../classes/ShoppingCart/singleton.xhtml">singleton</a>()
                    </li><li>public static ShoppingCart <a title="ShoppingCart" href="../classes/ShoppingCart/current_order.xhtml">current_order</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/currentOrder.xhtml">currentOrder</a>()
                    </li><li>public ShoppingCart <a title="ShoppingCart" href="../classes/ShoppingCart/Link.xhtml">Link</a>()
                    </li><li>public false <a title="ShoppingCart" href="../classes/ShoppingCart/addBuyable.xhtml">addBuyable</a>()
                    </li><li>public false <a title="ShoppingCart" href="../classes/ShoppingCart/setQuantity.xhtml">setQuantity</a>()
                    </li><li>public false <a title="ShoppingCart" href="../classes/ShoppingCart/decrementBuyable.xhtml">decrementBuyable</a>()
                    </li><li>public boolean <a title="ShoppingCart" href="../classes/ShoppingCart/deleteBuyable.xhtml">deleteBuyable</a>()
                    </li><li>protected boolean <a title="ShoppingCart" href="../classes/ShoppingCart/prepareOrderItem.xhtml">prepareOrderItem</a>()
                    </li><li>protected Integer <a title="ShoppingCart" href="../classes/ShoppingCart/prepareQuantity.xhtml">prepareQuantity</a>()
                    </li><li>public OrderItem <a title="ShoppingCart" href="../classes/ShoppingCart/findOrMakeItem.xhtml">findOrMakeItem</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/submit.xhtml">submit</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/save.xhtml">save</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/clear.xhtml">clear</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/reset.xhtml">reset</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/removeModifier.xhtml">removeModifier</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/addModifier.xhtml">addModifier</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/loadOrder.xhtml">loadOrder</a>()
                    </li><li>public DataObject(Order) <a title="ShoppingCart" href="../classes/ShoppingCart/copyOrder.xhtml">copyOrder</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/setCountry.xhtml">setCountry</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/setRegion.xhtml">setRegion</a>()
                    </li><li>public Boolean <a title="ShoppingCart" href="../classes/ShoppingCart/setCurrency.xhtml">setCurrency</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/debug.xhtml">debug</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/addMessage.xhtml">addMessage</a>()
                    </li><li>protected OrderItem <a title="ShoppingCart" href="../classes/ShoppingCart/getExistingItem.xhtml">getExistingItem</a>()
                    </li><li>protected cleaned <a title="ShoppingCart" href="../classes/ShoppingCart/cleanParameters.xhtml">cleanParameters</a>()
                    </li><li>protected void <a title="ShoppingCart" href="../classes/ShoppingCart/parametersToSQL.xhtml">parametersToSQL</a>()
                    </li><li>public array <a title="ShoppingCart" href="../classes/ShoppingCart/getMessages.xhtml">getMessages</a>()
                    </li><li>protected void <a title="ShoppingCart" href="../classes/ShoppingCart/StoreMessagesInSession.xhtml">StoreMessagesInSession</a>()
                    </li><li>public void <a title="ShoppingCart" href="../classes/ShoppingCart/setMessageAndReturn.xhtml">setMessageAndReturn</a>()
                    </li><li>protected EcommerceDBConfig <a title="ShoppingCart" href="../classes/ShoppingCart/EcomConfig.xhtml">EcomConfig</a>()
                    </li><li>protected String <a title="ShoppingCart" href="../classes/ShoppingCart/sessionVariableName.xhtml">sessionVariableName</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="Object">Object</span></li><li>public static Config_ForClass|null <a title="Object" href="../classes/Object/config.xhtml">config</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/create.xhtml">create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/strong_create.xhtml">strong_create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass</a>()
                        </li><li>public static string <a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass</a>()
                        </li><li>public static any <a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/get_static.xhtml">get_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/set_static.xhtml">set_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/combined_static.xhtml">combined_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/has_extension.xhtml">has_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_extension.xhtml">add_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension</a>()
                        </li><li>public static array <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/__construct.xhtml">__construct</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/__call.xhtml">__call</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/createMethod.xhtml">createMethod</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/stat.xhtml">stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/exists.xhtml">exists</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/is_a.xhtml">is_a</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/__toString.xhtml">__toString</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/extend.xhtml">extend</a>()
                        </li><li>public Extension <a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/clearCache.xhtml">clearCache</a>()
                        </li><li>protected mixed <a title="Object" href="../classes/Object/loadCache.xhtml">loadCache</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/saveCache.xhtml">saveCache</a>()
                        </li><li>protected string <a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/Object.xhtml">Object</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">99+</td>
            <td>- does this need to be public????</td>
          </tr>
          <tr>
            <td class="nummeric">259</td>
            <td>distinquish between incremented and set</td>
          </tr>
          <tr>
            <td class="nummeric">260</td>
            <td>use sprintf to allow product name etc to be included in message</td>
          </tr>
          <tr>
            <td class="nummeric">391+</td>
            <td>: what does this method do???</td>
          </tr>
          <tr>
            <td class="nummeric">551</td>
            <td>how to handle existing order</td>
          </tr>
          <tr>
            <td class="nummeric">552</td>
            <td>permission check - does this belong to another member? ...or should permission be assumed already?</td>
          </tr>
          <tr>
            <td class="nummeric">798</td>
            <td>remove the awkward replace</td>
          </tr>
          <tr>
            <td class="nummeric">930</td>
            <td>handle passing back multiple messages</td>
          </tr>
          <tr>
            <td class="nummeric">584+</td>
            <td>Add support for removing extensions with parameters</td>
          </tr>
          <tr>
            <td class="nummeric">966+</td>
            <td>integrate inheritance rules</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="session_variable_names"><strong>$session_variable_names</strong>
                —
                <a href="#">Array</a><br/><span class="indent">List of names that can be used as session variables.</span></li>
            <li id="singletoncart"><strong>$singletoncart</strong>
                —
                <a href="#">Object</a><br/><span class="indent">This is where we hold the (singleton) Shoppingcart</span></li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="afterExtendCallbacks"><strong>$afterExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call after extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="beforeExtendCallbacks"><strong>$beforeExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call prior to extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="extension_instances"><strong>$extension_instances</strong>
                —
                array</li>
            <li id="messages">
              <strong>$messages</strong>
              <br/>
              <span class="indent">Feedback message to user (e.g. cart updated, could not delete item, someone in standing behind you).</span>
            </li>
            <li id="order"><strong>$order</strong>
                —
                <a href="#">Object</a><br/><span class="indent">stores a reference to the current order object</span></li>
            <li id="requireSavedOrder"><strong>$requireSavedOrder</strong>
                —
                <a href="#">Boolean</a><br/><span class="indent">This variable is set to YES when we actually need an order (i.e. write it)</span></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="class"><strong>$class</strong>
                —
                string</li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="EcomConfig">
              <a title="ShoppingCart" href="../classes/ShoppingCart/EcomConfig.xhtml">EcomConfig()</a>
            </li>
            <li id="StoreMessagesInSession"><a title="ShoppingCart" href="../classes/ShoppingCart/StoreMessagesInSession.xhtml">StoreMessagesInSession()</a>
                — aves current messages in session for retrieving them later.</li>
            <li id="cleanParameters"><a title="ShoppingCart" href="../classes/ShoppingCart/cleanParameters.xhtml">cleanParameters()</a>
                — Removes parameters that aren't in the default array, merges with default parameters, and converts raw2SQL.</li>
            <li id="getExistingItem"><a title="ShoppingCart" href="../classes/ShoppingCart/getExistingItem.xhtml">getExistingItem()</a>
                — Gets an existing order item based on buyable and passed parameters</li>
            <li id="parametersToSQL">
              <a title="ShoppingCart" href="../classes/ShoppingCart/parametersToSQL.xhtml">parametersToSQL()</a>
            </li>
            <li id="prepareOrderItem"><a title="ShoppingCart" href="../classes/ShoppingCart/prepareOrderItem.xhtml">prepareOrderItem()</a>
                — Checks and prepares variables for a quantity change (add, edit, remove) for an Order Item.</li>
            <li id="prepareQuantity">
              <a title="ShoppingCart" href="../classes/ShoppingCart/prepareQuantity.xhtml">prepareQuantity()</a>
            </li>
            <li id="sessionVariableName"><a title="ShoppingCart" href="../classes/ShoppingCart/sessionVariableName.xhtml">sessionVariableName()</a>
                — Return the name of the session variable that should be used.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="Link"><a title="ShoppingCart" href="../classes/ShoppingCart/Link.xhtml">Link()</a>
                — Allows access to the current order from anywhere in the code..</li>
            <li id="addBuyable"><a title="ShoppingCart" href="../classes/ShoppingCart/addBuyable.xhtml">addBuyable()</a>
                — Adds any number of items to the cart.</li>
            <li id="addMessage"><a title="ShoppingCart" href="../classes/ShoppingCart/addMessage.xhtml">addMessage()</a>
                — Stores a message that can later be returned via ajax or to $form-&gt;sessionMessage();</li>
            <li id="addModifier"><a title="ShoppingCart" href="../classes/ShoppingCart/addModifier.xhtml">addModifier()</a>
                — Removes a modifier from the cart</li>
            <li id="clear"><a title="ShoppingCart" href="../classes/ShoppingCart/clear.xhtml">clear()</a>
                — Clears the cart contents completely by removing the orderID from session, and thus creating a new cart on next request.</li>
            <li id="copyOrder"><a title="ShoppingCart" href="../classes/ShoppingCart/copyOrder.xhtml">copyOrder()</a>
                — NOTE: tried to copy part to the Order Class - but that was not much of a go-er.</li>
            <li id="currentOrder"><a title="ShoppingCart" href="../classes/ShoppingCart/currentOrder.xhtml">currentOrder()</a>
                — Gets or creates the current order.</li>
            <li id="current_order"><a title="ShoppingCart" href="../classes/ShoppingCart/current_order.xhtml">current_order()</a>
                — Allows access to the current order from anywhere in the code..</li>
            <li id="debug"><a title="ShoppingCart" href="../classes/ShoppingCart/debug.xhtml">debug()</a>
                — Produces a debug of the shopping cart.</li>
            <li id="decrementBuyable"><a title="ShoppingCart" href="../classes/ShoppingCart/decrementBuyable.xhtml">decrementBuyable()</a>
                — Removes any number of items from the cart.</li>
            <li id="deleteBuyable"><a title="ShoppingCart" href="../classes/ShoppingCart/deleteBuyable.xhtml">deleteBuyable()</a>
                — Delete item from the cart.</li>
            <li id="findOrMakeItem"><a title="ShoppingCart" href="../classes/ShoppingCart/findOrMakeItem.xhtml">findOrMakeItem()</a>
                — Helper function for making / retrieving order items.</li>
            <li id="getMessages"><a title="ShoppingCart" href="../classes/ShoppingCart/getMessages.xhtml">getMessages()</a>
                — Retrieves all good, bad, and ugly messages that have been produced during the current request.</li>
            <li id="loadOrder"><a title="ShoppingCart" href="../classes/ShoppingCart/loadOrder.xhtml">loadOrder()</a>
                — Sets an order as the current order.</li>
            <li id="removeModifier"><a title="ShoppingCart" href="../classes/ShoppingCart/removeModifier.xhtml">removeModifier()</a>
                — Removes a modifier from the cart It does not actually remove it, but it just sets it as "removed", to avoid that it is being added again.</li>
            <li id="reset"><a title="ShoppingCart" href="../classes/ShoppingCart/reset.xhtml">reset()</a>
                — alias for clear</li>
            <li id="save">
              <a title="ShoppingCart" href="../classes/ShoppingCart/save.xhtml">save()</a>
            </li>
            <li id="setCountry"><a title="ShoppingCart" href="../classes/ShoppingCart/setCountry.xhtml">setCountry()</a>
                — sets country in order so that modifiers can be recalculated, etc...</li>
            <li id="setCurrency"><a title="ShoppingCart" href="../classes/ShoppingCart/setCurrency.xhtml">setCurrency()</a>
                — sets the display currency for the cart.</li>
            <li id="setMessageAndReturn"><a title="ShoppingCart" href="../classes/ShoppingCart/setMessageAndReturn.xhtml">setMessageAndReturn()</a>
                — This method is used to return data after an ajax call was made.</li>
            <li id="setQuantity"><a title="ShoppingCart" href="../classes/ShoppingCart/setQuantity.xhtml">setQuantity()</a>
                — Sets quantity for an item in the cart.</li>
            <li id="setRegion"><a title="ShoppingCart" href="../classes/ShoppingCart/setRegion.xhtml">setRegion()</a>
                — sets region in order so that modifiers can be recalculated, etc...</li>
            <li id="singleton"><a title="ShoppingCart" href="../classes/ShoppingCart/singleton.xhtml">singleton()</a>
                — Allows access to the cart from anywhere in code.</li>
            <li id="submit"><a title="ShoppingCart" href="../classes/ShoppingCart/submit.xhtml">submit()</a>
                — submit the order so that it is no longer available in the cart but will continue its journey through the order steps.</li>
          </ul>
          <h3>Inherited from <a title="Object" href="../classes/Object.xhtml">Object</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="addMethodsFrom"><a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom()</a>
                — Add all the methods from an object property (which is an {@link Extension}) to this object.</li>
            <li id="addWrapperMethod"><a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod()</a>
                — Add a wrapper method - a method which points to another method with a different name. For example, Thumbnail(x) can be wrapped to generateThumbnail(x)</li>
            <li id="afterExtending"><a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending()</a>
                — Allows user code to hook into Object::extend after control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="beforeExtending"><a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending()</a>
                — Allows user code to hook into Object::extend prior to control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="createMethod"><a title="Object" href="../classes/Object/createMethod.xhtml">createMethod()</a>
                — Add an extra method using raw PHP code passed as a string</li>
            <li id="defineMethods"><a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods()</a>
                — Adds any methods from {@link Extension} instances attached to this object.</li>
            <li id="loadCache"><a title="Object" href="../classes/Object/loadCache.xhtml">loadCache()</a>
                — Loads a cache from the filesystem if a valid on is present and within the specified lifetime</li>
            <li id="sanitiseCachename"><a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename()</a>
                — Strip a file name of special characters so it is suitable for use as a cache file name</li>
            <li id="saveCache"><a title="Object" href="../classes/Object/saveCache.xhtml">saveCache()</a>
                — Save a piece of cached data to the file system</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__call"><a title="Object" href="../classes/Object/__call.xhtml">__call()</a>
                — Attemps to locate and call a method dynamically added to a class at runtime if a default cannot be located</li>
            <li id="__toString">
              <a title="Object" href="../classes/Object/__toString.xhtml">__toString()</a>
            </li>
            <li id="addStaticVars"><a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars()</a>
                — Merge in a set of additional static variables</li>
            <li id="add_extension"><a title="Object" href="../classes/Object/add_extension.xhtml">add_extension()</a>
                — Add an extension to a specific class.</li>
            <li id="add_static_var"><a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var()</a>
                — Add a static variable without replacing it completely if possible, but merging in with both existing PHP statics and existing psuedo-statics. Uses PHP's array_merge_recursive() with if the $replace argument is FALSE.</li>
            <li id="allMethodNames"><a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames()</a>
                — Return the names of all the methods available on this object</li>
            <li id="cacheToFile"><a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile()</a>
                — Cache the results of an instance method in this object to a file, or if it is already cache return the cached results</li>
            <li id="clearCache"><a title="Object" href="../classes/Object/clearCache.xhtml">clearCache()</a>
                — Clears the cache for the given cacheToFile call</li>
            <li id="combined_static"><a title="Object" href="../classes/Object/combined_static.xhtml">combined_static()</a>
                — Traverse down a class ancestry and attempt to merge all the uninherited static values for a particular static into a single variable</li>
            <li id="config"><a title="Object" href="../classes/Object/config.xhtml">config()</a>
                — Get a configuration accessor for this class. Short hand for Config::inst()-&gt;get($this-&gt;class, .....).</li>
            <li id="create"><a title="Object" href="../classes/Object/create.xhtml">create()</a>
                — An implementation of the factory method, allows you to create an instance of a class</li>
            <li id="create_from_string"><a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string()</a>
                — Create an object from a string representation.  It treats it as a PHP constructor without the 'new' keyword.  It also manages to construct the object without the use of eval().</li>
            <li id="exists"><a title="Object" href="../classes/Object/exists.xhtml">exists()</a>
                — Return true if this object "exists" i.e. has a sensible value</li>
            <li id="extend"><a title="Object" href="../classes/Object/extend.xhtml">extend()</a>
                — Run the given function on all of this object's extensions. Note that this method originally returned void, so if you wanted to return results, you're hosed</li>
            <li id="getCustomClass"><a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass()</a>
                — If a class has been overloaded, get the class name it has been overloaded with - otherwise return the class name</li>
            <li id="getExtensionInstance"><a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance()</a>
                — Get an extension instance attached to this object by name.</li>
            <li id="getExtensionInstances"><a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances()</a>
                — Get all extension instances for this specific object instance.</li>
            <li id="get_extensions">
              <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions()</a>
            </li>
            <li id="get_extra_config_sources">
              <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources()</a>
            </li>
            <li id="get_static"><a title="Object" href="../classes/Object/get_static.xhtml">get_static()</a>
                — Get a static variable, taking into account SS's inbuild static caches and pseudo-statics</li>
            <li id="hasExtension"><a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension()</a>
                — Returns TRUE if this object instance has a specific extension applied in {@link $extension_instances}. Extension instances are initialized at constructor time, meaning if you use {@link add_extension()} afterwards, the added extension will just be added to new instances of the extended class. Use the static method {@link has_extension()} to check if a class (not an instance) has a specific extension.</li>
            <li id="hasMethod"><a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod()</a>
                — Return TRUE if a method exists on this object</li>
            <li id="has_extension"><a title="Object" href="../classes/Object/has_extension.xhtml">has_extension()</a>
                — Return TRUE if a class has a specified extension.</li>
            <li id="invokeWithExtensions"><a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions()</a>
                — Calls a method if available on both this object and all applied {@link Extensions}, and then attempts to merge all results into an array</li>
            <li id="is_a"><a title="Object" href="../classes/Object/is_a.xhtml">is_a()</a>
                — Check if this class is an instance of a specific class, or has that class as one of its parents</li>
            <li id="parentClass">
              <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass()</a>
            </li>
            <li id="parse_class_spec"><a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec()</a>
                — Parses a class-spec, such as "Versioned('Stage','Live')", as passed to create_from_string().</li>
            <li id="remove_extension"><a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension()</a>
                — Remove an extension from a class.</li>
            <li id="set_stat">
              <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat()</a>
            </li>
            <li id="set_static"><a title="Object" href="../classes/Object/set_static.xhtml">set_static()</a>
                — Set a static variable</li>
            <li id="stat">
              <a title="Object" href="../classes/Object/stat.xhtml">stat()</a>
            </li>
            <li id="static_lookup"><a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup()</a>
                — Get the value of a static property of a class, even in that property is declared protected (but not private), without any inheritance, merging or parent lookup if it doesn't exist on the given class.</li>
            <li id="strong_create"><a title="Object" href="../classes/Object/strong_create.xhtml">strong_create()</a>
                — Similar to {@link Object::create()}, except that classes are only overloaded if you set the $strong parameter to TRUE when using {@link Object::useCustomClass()}</li>
            <li id="uninherited">
              <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited()</a>
            </li>
            <li id="uninherited_static"><a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static()</a>
                — Get an uninherited static variable - a variable that is explicity set in this class, and not in the parent class.</li>
            <li id="useCustomClass"><a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass()</a>
                — This class allows you to overload classes with other classes when they are constructed using the factory method {@link Object::create()}</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
