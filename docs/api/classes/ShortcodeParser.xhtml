<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - ShortcodeParser</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">ShortcodeParser</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/parsers/ShortcodeParser.php.xhtml#line12">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>ShortcodeParser</h1>
        <h4>A simple parser that allows you to map BBCode-like "shortcodes" to an arbitrary callback.</h4>
        <p>It is a simple regex based parser that allows you to replace simple bbcode-like tags<br/>within a HTMLText or HTMLVarchar field when rendered into a template. The API is inspired by and very similar to the<br/>[Wordpress implementation](http://codex.wordpress.org/Shortcode_API) of shortcodes.</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class ShortcodeParser
            {<br/><ul class="none"><li>// constants</li><li>const WARN = 'warn';</li><li>const STRIP = 'strip';</li><li>const LEAVE = 'leave';</li><li>const ERROR = 'error';</li><li>const BEFORE = 'before';</li><li>const AFTER = 'after';</li><li>const SPLIT = 'split';</li><li>const INLINE = 'inline';</li></ul><ul class="none"><li>// members</li><li>private array <a href="#members">$instances</a>;
                    </li><li>private string <a href="#members">$active_instance</a>;
                    </li><li>protected array <a href="#members">$shortcodes</a>;
                    </li><li>private string <a href="#members">$marker_class</a>;
                    </li><li>private array <a href="#members">$block_level_elements</a>;
                    </li><li>private string <a href="#members">$attrrx</a>;
                    </li><li>private string <a href="#members">$tagrx</a>;
                    </li><li>public <a href="#members">$error_behavior</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="ShortcodeParser" href="../classes/ShortcodeParser/img_shortcode.xhtml">img_shortcode</a>()
                    </li><li>public static ShortcodeParser <a title="ShortcodeParser" href="../classes/ShortcodeParser/get.xhtml">get</a>()
                    </li><li>public static ShortcodeParser <a title="ShortcodeParser" href="../classes/ShortcodeParser/get_active.xhtml">get_active</a>()
                    </li><li>public static void <a title="ShortcodeParser" href="../classes/ShortcodeParser/set_active.xhtml">set_active</a>()
                    </li><li>public void <a title="ShortcodeParser" href="../classes/ShortcodeParser/register.xhtml">register</a>()
                    </li><li>public bool <a title="ShortcodeParser" href="../classes/ShortcodeParser/registered.xhtml">registered</a>()
                    </li><li>public void <a title="ShortcodeParser" href="../classes/ShortcodeParser/unregister.xhtml">unregister</a>()
                    </li><li>public void <a title="ShortcodeParser" href="../classes/ShortcodeParser/clear.xhtml">clear</a>()
                    </li><li>public void <a title="ShortcodeParser" href="../classes/ShortcodeParser/callShortcode.xhtml">callShortcode</a>()
                    </li><li>protected void <a title="ShortcodeParser" href="../classes/ShortcodeParser/removeNode.xhtml">removeNode</a>()
                    </li><li>protected void <a title="ShortcodeParser" href="../classes/ShortcodeParser/insertAfter.xhtml">insertAfter</a>()
                    </li><li>protected void <a title="ShortcodeParser" href="../classes/ShortcodeParser/insertListAfter.xhtml">insertListAfter</a>()
                    </li><li>private static void <a title="ShortcodeParser" href="../classes/ShortcodeParser/attrrx.xhtml">attrrx</a>()
                    </li><li>private static void <a title="ShortcodeParser" href="../classes/ShortcodeParser/tagrx.xhtml">tagrx</a>()
                    </li><li>protected array <a title="ShortcodeParser" href="../classes/ShortcodeParser/extractTags.xhtml">extractTags</a>()
                    </li><li>protected string <a title="ShortcodeParser" href="../classes/ShortcodeParser/replaceTagsWithText.xhtml">replaceTagsWithText</a>()
                    </li><li>protected void <a title="ShortcodeParser" href="../classes/ShortcodeParser/replaceAttributeTagsWithContent.xhtml">replaceAttributeTagsWithContent</a>()
                    </li><li>protected void <a title="ShortcodeParser" href="../classes/ShortcodeParser/replaceElementTagsWithMarkers.xhtml">replaceElementTagsWithMarkers</a>()
                    </li><li>protected void <a title="ShortcodeParser" href="../classes/ShortcodeParser/findParentsForMarkers.xhtml">findParentsForMarkers</a>()
                    </li><li>protected void <a title="ShortcodeParser" href="../classes/ShortcodeParser/moveMarkerToCompliantHome.xhtml">moveMarkerToCompliantHome</a>()
                    </li><li>protected void <a title="ShortcodeParser" href="../classes/ShortcodeParser/replaceMarkerWithContent.xhtml">replaceMarkerWithContent</a>()
                    </li><li>public string <a title="ShortcodeParser" href="../classes/ShortcodeParser/parse.xhtml">parse</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="WARN">WARN</td>
              <td>'warn'</td>
            </tr>
            <tr>
              <td id="STRIP">STRIP</td>
              <td>'strip'</td>
            </tr>
            <tr>
              <td id="LEAVE">LEAVE</td>
              <td>'leave'</td>
            </tr>
            <tr>
              <td id="ERROR">ERROR</td>
              <td>'error'</td>
            </tr>
            <tr>
              <td id="BEFORE">BEFORE</td>
              <td>'before'</td>
            </tr>
            <tr>
              <td id="AFTER">AFTER</td>
              <td>'after'</td>
            </tr>
            <tr>
              <td id="SPLIT">SPLIT</td>
              <td>'split'</td>
            </tr>
            <tr>
              <td id="INLINE">INLINE</td>
              <td>'inline'</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="active_instance">
              <strong>$active_instance</strong>
            </li>
            <li id="attrrx">
              <strong>$attrrx</strong>
            </li>
            <li id="block_level_elements">
              <strong>$block_level_elements</strong>
            </li>
            <li id="instances">
              <strong>$instances</strong>
            </li>
            <li id="marker_class">
              <strong>$marker_class</strong>
            </li>
            <li id="tagrx">
              <strong>$tagrx</strong>
            </li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="shortcodes">
              <strong>$shortcodes</strong>
            </li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="error_behavior">
              <strong>$error_behavior</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="attrrx">
              <a title="ShortcodeParser" href="../classes/ShortcodeParser/attrrx.xhtml">attrrx()</a>
            </li>
            <li id="tagrx">
              <a title="ShortcodeParser" href="../classes/ShortcodeParser/tagrx.xhtml">tagrx()</a>
            </li>
          </ul>
          <h4>protected</h4>
          <ul>
            <li id="extractTags"><a title="ShortcodeParser" href="../classes/ShortcodeParser/extractTags.xhtml">extractTags()</a>
                — Look through a string that contains shortcode tags and pull out the locations and details of those tags</li>
            <li id="findParentsForMarkers">
              <a title="ShortcodeParser" href="../classes/ShortcodeParser/findParentsForMarkers.xhtml">findParentsForMarkers()</a>
            </li>
            <li id="insertAfter">
              <a title="ShortcodeParser" href="../classes/ShortcodeParser/insertAfter.xhtml">insertAfter()</a>
            </li>
            <li id="insertListAfter">
              <a title="ShortcodeParser" href="../classes/ShortcodeParser/insertListAfter.xhtml">insertListAfter()</a>
            </li>
            <li id="moveMarkerToCompliantHome"><a title="ShortcodeParser" href="../classes/ShortcodeParser/moveMarkerToCompliantHome.xhtml">moveMarkerToCompliantHome()</a>
                — Given a node with represents a shortcode marker and a location string, mutates the DOM to put the marker in the compliant location</li>
            <li id="removeNode">
              <a title="ShortcodeParser" href="../classes/ShortcodeParser/removeNode.xhtml">removeNode()</a>
            </li>
            <li id="replaceAttributeTagsWithContent"><a title="ShortcodeParser" href="../classes/ShortcodeParser/replaceAttributeTagsWithContent.xhtml">replaceAttributeTagsWithContent()</a>
                — Replace the shortcodes in attribute values with the calculated content</li>
            <li id="replaceElementTagsWithMarkers"><a title="ShortcodeParser" href="../classes/ShortcodeParser/replaceElementTagsWithMarkers.xhtml">replaceElementTagsWithMarkers()</a>
                — Replace the element-scoped tags with markers</li>
            <li id="replaceMarkerWithContent"><a title="ShortcodeParser" href="../classes/ShortcodeParser/replaceMarkerWithContent.xhtml">replaceMarkerWithContent()</a>
                — Given a node with represents a shortcode marker and some information about the shortcode, call the shortcode handler &amp; replace the marker with the actual content</li>
            <li id="replaceTagsWithText"><a title="ShortcodeParser" href="../classes/ShortcodeParser/replaceTagsWithText.xhtml">replaceTagsWithText()</a>
                — Replaces the shortcode tags extracted by extractTags with HTML element "markers", so that we can parse the resulting string as HTML and easily mutate the shortcodes in the DOM</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="callShortcode">
              <a title="ShortcodeParser" href="../classes/ShortcodeParser/callShortcode.xhtml">callShortcode()</a>
            </li>
            <li id="clear"><a title="ShortcodeParser" href="../classes/ShortcodeParser/clear.xhtml">clear()</a>
                — Remove all registered shortcodes.</li>
            <li id="get"><a title="ShortcodeParser" href="../classes/ShortcodeParser/get.xhtml">get()</a>
                — Get the {@link ShortcodeParser} instance that is attached to a particular identifier.</li>
            <li id="get_active"><a title="ShortcodeParser" href="../classes/ShortcodeParser/get_active.xhtml">get_active()</a>
                — Get the currently active/default {@link ShortcodeParser} instance.</li>
            <li id="img_shortcode">
              <a title="ShortcodeParser" href="../classes/ShortcodeParser/img_shortcode.xhtml">img_shortcode()</a>
            </li>
            <li id="parse"><a title="ShortcodeParser" href="../classes/ShortcodeParser/parse.xhtml">parse()</a>
                — Parse a string, and replace any registered shortcodes within it with the result of the mapped callback.</li>
            <li id="register"><a title="ShortcodeParser" href="../classes/ShortcodeParser/register.xhtml">register()</a>
                — Register a shortcode, and attach it to a PHP callback.</li>
            <li id="registered"><a title="ShortcodeParser" href="../classes/ShortcodeParser/registered.xhtml">registered()</a>
                — Check if a shortcode has been registered.</li>
            <li id="set_active"><a title="ShortcodeParser" href="../classes/ShortcodeParser/set_active.xhtml">set_active()</a>
                — Set the identifier to use for the current active/default {@link ShortcodeParser} instance.</li>
            <li id="unregister"><a title="ShortcodeParser" href="../classes/ShortcodeParser/unregister.xhtml">unregister()</a>
                — Remove a specific registered shortcode.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
