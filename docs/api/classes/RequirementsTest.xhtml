<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - RequirementsTest</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">RequirementsTest</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/tests/forms/RequirementsTest.php.xhtml#line9">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>RequirementsTest</h1>
        <h4/>
        <p/>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class RequirementsTest
                extends <a title="SapphireTest" href="../classes/SapphireTest.xhtml">SapphireTest</a>
            {<br/><ul class="none"><li>// members</li><li>public string <a href="#members">$html_template</a>;
                    </li><li>public <a href="#members">$old_requirements</a>;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="SapphireTest">SapphireTest</span></li><li>protected <span title="string|array">string|array</span> <a href="#members">$fixture_file</a>;
                        </li><li>protected <span title="FixtureFactory">FixtureFactory</span> <a href="#members">$fixtureFactory</a>;
                        </li><li>protected <span title="bool">bool</span> <a href="#members">$skipTest</a>;
                        </li><li>protected <span title="Boolean">Boolean</span> <a href="#members">$usesDatabase</a>;
                        </li><li>protected <a href="#members">$originalMailer</a>;
                        </li><li>protected <a href="#members">$originalMemberPasswordValidator</a>;
                        </li><li>protected <a href="#members">$originalRequirements</a>;
                        </li><li>protected <a href="#members">$originalIsRunningTest</a>;
                        </li><li>protected <a href="#members">$originalTheme</a>;
                        </li><li>protected <a href="#members">$originalNestedURLsState</a>;
                        </li><li>protected <a href="#members">$originalMemoryLimit</a>;
                        </li><li>protected <a href="#members">$mailer</a>;
                        </li><li>protected <a href="#members">$regular_manifest</a>;
                        </li><li>protected boolean <a href="#members">$is_running_test</a>;
                        </li><li>protected <a href="#members">$test_class_manifest</a>;
                        </li><li>protected array <a href="#members">$requireDefaultRecordsFrom</a>;
                        </li><li>protected array <a href="#members">$illegalExtensions</a>;
                        </li><li>protected array <a href="#members">$requiredExtensions</a>;
                        </li><li>protected array <a href="#members">$extraDataObjects</a>;
                        </li><li>protected <a href="#members">$backupGlobals</a>;
                        </li><li>protected array <a href="#members">$fixtures</a>;
                        </li><li>protected <a href="#members">$model</a>;
                        </li><li>protected array <a href="#members">$cache_generatedMembers</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testExternalUrls.xhtml">testExternalUrls</a>()
                    </li><li>protected void <a title="RequirementsTest" href="../classes/RequirementsTest/setupCombinedRequirements.xhtml">setupCombinedRequirements</a>()
                    </li><li>protected void <a title="RequirementsTest" href="../classes/RequirementsTest/setupCombinedNonrequiredRequirements.xhtml">setupCombinedNonrequiredRequirements</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testCombinedJavascript.xhtml">testCombinedJavascript</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testCombinedCss.xhtml">testCombinedCss</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testBlockedCombinedJavascript.xhtml">testBlockedCombinedJavascript</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testArgsInUrls.xhtml">testArgsInUrls</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testRequirementsBackend.xhtml">testRequirementsBackend</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testConditionalTemplateRequire.xhtml">testConditionalTemplateRequire</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testJsWriteToBody.xhtml">testJsWriteToBody</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testIncludedJsIsNotCommentedOut.xhtml">testIncludedJsIsNotCommentedOut</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testCommentedOutScriptTagIsIgnored.xhtml">testCommentedOutScriptTagIsIgnored</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testForceJsToBottom.xhtml">testForceJsToBottom</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/testSuffix.xhtml">testSuffix</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/assertFileIncluded.xhtml">assertFileIncluded</a>()
                    </li><li>public void <a title="RequirementsTest" href="../classes/RequirementsTest/assertFileNotIncluded.xhtml">assertFileNotIncluded</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="SapphireTest">SapphireTest</span></li><li>public static boolean <a title="SapphireTest" href="../classes/SapphireTest/is_running_test.xhtml">is_running_test</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/set_is_running_test.xhtml">set_is_running_test</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/set_test_class_manifest.xhtml">set_test_class_manifest</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/get_test_class_manifest.xhtml">get_test_class_manifest</a>()
                        </li><li>public static String <a title="SapphireTest" href="../classes/SapphireTest/get_fixture_file.xhtml">get_fixture_file</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/setUp.xhtml">setUp</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/setUpOnce.xhtml">setUpOnce</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/tearDownOnce.xhtml">tearDownOnce</a>()
                        </li><li>public FixtureFactory <a title="SapphireTest" href="../classes/SapphireTest/getFixtureFactory.xhtml">getFixtureFactory</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/setFixtureFactory.xhtml">setFixtureFactory</a>()
                        </li><li>protected int <a title="SapphireTest" href="../classes/SapphireTest/idFromFixture.xhtml">idFromFixture</a>()
                        </li><li>protected A <a title="SapphireTest" href="../classes/SapphireTest/allFixtureIDs.xhtml">allFixtureIDs</a>()
                        </li><li>protected DataObject <a title="SapphireTest" href="../classes/SapphireTest/objFromFixture.xhtml">objFromFixture</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/loadFixture.xhtml">loadFixture</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/clearFixtures.xhtml">clearFixtures</a>()
                        </li><li>protected String <a title="SapphireTest" href="../classes/SapphireTest/getCurrentAbsolutePath.xhtml">getCurrentAbsolutePath</a>()
                        </li><li>protected String <a title="SapphireTest" href="../classes/SapphireTest/getCurrentRelativePath.xhtml">getCurrentRelativePath</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/tearDown.xhtml">tearDown</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/assertContains.xhtml">assertContains</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/assertNotContains.xhtml">assertNotContains</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/clearEmails.xhtml">clearEmails</a>()
                        </li><li>public array <a title="SapphireTest" href="../classes/SapphireTest/findEmail.xhtml">findEmail</a>()
                        </li><li>public array <a title="SapphireTest" href="../classes/SapphireTest/assertEmailSent.xhtml">assertEmailSent</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/assertDOSContains.xhtml">assertDOSContains</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/assertDOSEquals.xhtml">assertDOSEquals</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/assertDOSAllMatch.xhtml">assertDOSAllMatch</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/using_temp_db.xhtml">using_temp_db</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/kill_temp_db.xhtml">kill_temp_db</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/empty_temp_db.xhtml">empty_temp_db</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/create_temp_db.xhtml">create_temp_db</a>()
                        </li><li>public static void <a title="SapphireTest" href="../classes/SapphireTest/delete_all_temp_dbs.xhtml">delete_all_temp_dbs</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/resetDBSchema.xhtml">resetDBSchema</a>()
                        </li><li>public void <a title="SapphireTest" href="../classes/SapphireTest/logInWithPermission.xhtml">logInWithPermission</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/SapphireTest.xhtml">SapphireTest</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">9+</td>
            <td>Test that order of combine_files() is correct</td>
          </tr>
          <tr>
            <td class="nummeric">9+</td>
            <td>Figure out how to clear the modified state of Requirements class - might affect other tests.</td>
          </tr>
          <tr>
            <td class="nummeric">217</td>
            <td>this could be a special test model</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="backupGlobals">
              <strong>$backupGlobals</strong>
              <br/>
              <span class="indent">We need to disabling backing up of globals to avoid overriding the few globals SilverStripe relies on, like $lang for the i18n subsystem.</span>
            </li>
            <li id="cache_generatedMembers">
              <strong>$cache_generatedMembers</strong>
              <br/>
              <span class="indent">Cache for logInWithPermission()</span>
            </li>
            <li id="extraDataObjects">
              <strong>$extraDataObjects</strong>
              <br/>
              <span class="indent">By default, the test database won't contain any DataObjects that have the interface TestOnly.</span>
            </li>
            <li id="fixtureFactory"><strong>$fixtureFactory</strong>
                —
                <a href="#">FixtureFactory</a></li>
            <li id="fixture_file"><strong>$fixture_file</strong>
                —
                <a href="#">string|array</a><br/><span class="indent">Path to fixture data for this test run.</span></li>
            <li id="fixtures"><strong>$fixtures</strong>
                —
                array</li>
            <li id="illegalExtensions">
              <strong>$illegalExtensions</strong>
              <br/>
              <span class="indent">A list of extensions that can't be applied during the execution of this run.  If they are applied, they will be temporarily removed and a database migration called.</span>
            </li>
            <li id="is_running_test"><strong>$is_running_test</strong>
                —
                boolean</li>
            <li id="mailer">
              <strong>$mailer</strong>
            </li>
            <li id="model">
              <strong>$model</strong>
            </li>
            <li id="originalIsRunningTest">
              <strong>$originalIsRunningTest</strong>
            </li>
            <li id="originalMailer">
              <strong>$originalMailer</strong>
            </li>
            <li id="originalMemberPasswordValidator">
              <strong>$originalMemberPasswordValidator</strong>
            </li>
            <li id="originalMemoryLimit">
              <strong>$originalMemoryLimit</strong>
            </li>
            <li id="originalNestedURLsState">
              <strong>$originalNestedURLsState</strong>
            </li>
            <li id="originalRequirements">
              <strong>$originalRequirements</strong>
            </li>
            <li id="originalTheme">
              <strong>$originalTheme</strong>
            </li>
            <li id="regular_manifest">
              <strong>$regular_manifest</strong>
              <br/>
              <span class="indent">Pointer to the manifest that isn't a test manifest</span>
            </li>
            <li id="requireDefaultRecordsFrom">
              <strong>$requireDefaultRecordsFrom</strong>
              <br/>
              <span class="indent">By default, setUp() does not require default records. Pass class names in here, and the require/augment default records function will be called on them.</span>
            </li>
            <li id="requiredExtensions">
              <strong>$requiredExtensions</strong>
              <br/>
              <span class="indent">A list of extensions that must be applied during the execution of this run.  If they are not applied, they will be temporarily added and a database migration called.</span>
            </li>
            <li id="skipTest"><strong>$skipTest</strong>
                —
                <a href="#">bool</a></li>
            <li id="test_class_manifest">
              <strong>$test_class_manifest</strong>
            </li>
            <li id="usesDatabase"><strong>$usesDatabase</strong>
                —
                <a href="#">Boolean</a></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="html_template">
              <strong>$html_template</strong>
            </li>
            <li id="old_requirements">
              <strong>$old_requirements</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="setupCombinedNonrequiredRequirements">
              <a title="RequirementsTest" href="../classes/RequirementsTest/setupCombinedNonrequiredRequirements.xhtml">setupCombinedNonrequiredRequirements()</a>
            </li>
            <li id="setupCombinedRequirements">
              <a title="RequirementsTest" href="../classes/RequirementsTest/setupCombinedRequirements.xhtml">setupCombinedRequirements()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="assertFileIncluded">
              <a title="RequirementsTest" href="../classes/RequirementsTest/assertFileIncluded.xhtml">assertFileIncluded()</a>
            </li>
            <li id="assertFileNotIncluded">
              <a title="RequirementsTest" href="../classes/RequirementsTest/assertFileNotIncluded.xhtml">assertFileNotIncluded()</a>
            </li>
            <li id="testArgsInUrls">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testArgsInUrls.xhtml">testArgsInUrls()</a>
            </li>
            <li id="testBlockedCombinedJavascript">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testBlockedCombinedJavascript.xhtml">testBlockedCombinedJavascript()</a>
            </li>
            <li id="testCombinedCss">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testCombinedCss.xhtml">testCombinedCss()</a>
            </li>
            <li id="testCombinedJavascript">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testCombinedJavascript.xhtml">testCombinedJavascript()</a>
            </li>
            <li id="testCommentedOutScriptTagIsIgnored">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testCommentedOutScriptTagIsIgnored.xhtml">testCommentedOutScriptTagIsIgnored()</a>
            </li>
            <li id="testConditionalTemplateRequire">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testConditionalTemplateRequire.xhtml">testConditionalTemplateRequire()</a>
            </li>
            <li id="testExternalUrls">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testExternalUrls.xhtml">testExternalUrls()</a>
            </li>
            <li id="testForceJsToBottom">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testForceJsToBottom.xhtml">testForceJsToBottom()</a>
            </li>
            <li id="testIncludedJsIsNotCommentedOut">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testIncludedJsIsNotCommentedOut.xhtml">testIncludedJsIsNotCommentedOut()</a>
            </li>
            <li id="testJsWriteToBody">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testJsWriteToBody.xhtml">testJsWriteToBody()</a>
            </li>
            <li id="testRequirementsBackend">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testRequirementsBackend.xhtml">testRequirementsBackend()</a>
            </li>
            <li id="testSuffix">
              <a title="RequirementsTest" href="../classes/RequirementsTest/testSuffix.xhtml">testSuffix()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="SapphireTest" href="../classes/SapphireTest.xhtml">SapphireTest</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="allFixtureIDs"><a title="SapphireTest" href="../classes/SapphireTest/allFixtureIDs.xhtml">allFixtureIDs()</a>
                — Return all of the IDs in the fixture of a particular class name.</li>
            <li id="getCurrentAbsolutePath"><a title="SapphireTest" href="../classes/SapphireTest/getCurrentAbsolutePath.xhtml">getCurrentAbsolutePath()</a>
                — Useful for writing unit tests without hardcoding folder structures.</li>
            <li id="getCurrentRelativePath">
              <a title="SapphireTest" href="../classes/SapphireTest/getCurrentRelativePath.xhtml">getCurrentRelativePath()</a>
            </li>
            <li id="idFromFixture"><a title="SapphireTest" href="../classes/SapphireTest/idFromFixture.xhtml">idFromFixture()</a>
                — Get the ID of an object from the fixture.</li>
            <li id="objFromFixture"><a title="SapphireTest" href="../classes/SapphireTest/objFromFixture.xhtml">objFromFixture()</a>
                — Get an object from the fixture.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="assertContains">
              <a title="SapphireTest" href="../classes/SapphireTest/assertContains.xhtml">assertContains()</a>
            </li>
            <li id="assertDOSAllMatch"><a title="SapphireTest" href="../classes/SapphireTest/assertDOSAllMatch.xhtml">assertDOSAllMatch()</a>
                — Assert that the every record in the given {@link SS_List} matches the given key-value pairs.</li>
            <li id="assertDOSContains"><a title="SapphireTest" href="../classes/SapphireTest/assertDOSContains.xhtml">assertDOSContains()</a>
                — Assert that the given {@link SS_List} includes DataObjects matching the given key-value pairs.  Each match must correspond to 1 distinct record.</li>
            <li id="assertDOSEquals"><a title="SapphireTest" href="../classes/SapphireTest/assertDOSEquals.xhtml">assertDOSEquals()</a>
                — Assert that the given {@link SS_List} includes only DataObjects matching the given key-value pairs.  Each match must correspond to 1 distinct record.</li>
            <li id="assertEmailSent"><a title="SapphireTest" href="../classes/SapphireTest/assertEmailSent.xhtml">assertEmailSent()</a>
                — Assert that the matching email was sent since the last call to clearEmails() All of the parameters can either be a string, or, if they start with "/", a PREG-compatible regular expression.</li>
            <li id="assertNotContains">
              <a title="SapphireTest" href="../classes/SapphireTest/assertNotContains.xhtml">assertNotContains()</a>
            </li>
            <li id="clearEmails"><a title="SapphireTest" href="../classes/SapphireTest/clearEmails.xhtml">clearEmails()</a>
                — Clear the log of emails sent</li>
            <li id="clearFixtures"><a title="SapphireTest" href="../classes/SapphireTest/clearFixtures.xhtml">clearFixtures()</a>
                — Clear all fixtures which were previously loaded through {@link loadFixture()}</li>
            <li id="create_temp_db">
              <a title="SapphireTest" href="../classes/SapphireTest/create_temp_db.xhtml">create_temp_db()</a>
            </li>
            <li id="delete_all_temp_dbs">
              <a title="SapphireTest" href="../classes/SapphireTest/delete_all_temp_dbs.xhtml">delete_all_temp_dbs()</a>
            </li>
            <li id="empty_temp_db"><a title="SapphireTest" href="../classes/SapphireTest/empty_temp_db.xhtml">empty_temp_db()</a>
                — Remove all content from the temporary database.</li>
            <li id="findEmail"><a title="SapphireTest" href="../classes/SapphireTest/findEmail.xhtml">findEmail()</a>
                — Search for an email that was sent.</li>
            <li id="getFixtureFactory">
              <a title="SapphireTest" href="../classes/SapphireTest/getFixtureFactory.xhtml">getFixtureFactory()</a>
            </li>
            <li id="get_fixture_file">
              <a title="SapphireTest" href="../classes/SapphireTest/get_fixture_file.xhtml">get_fixture_file()</a>
            </li>
            <li id="get_test_class_manifest"><a title="SapphireTest" href="../classes/SapphireTest/get_test_class_manifest.xhtml">get_test_class_manifest()</a>
                — Return the manifest being used to look up test classes by helper functions</li>
            <li id="is_running_test"><a title="SapphireTest" href="../classes/SapphireTest/is_running_test.xhtml">is_running_test()</a>
                — Determines if unit tests are currently run (via {@link TestRunner}).</li>
            <li id="kill_temp_db">
              <a title="SapphireTest" href="../classes/SapphireTest/kill_temp_db.xhtml">kill_temp_db()</a>
            </li>
            <li id="loadFixture"><a title="SapphireTest" href="../classes/SapphireTest/loadFixture.xhtml">loadFixture()</a>
                — Load a YAML fixture file into the database.</li>
            <li id="logInWithPermission"><a title="SapphireTest" href="../classes/SapphireTest/logInWithPermission.xhtml">logInWithPermission()</a>
                — Create a member and group with the given permission code, and log in with it.</li>
            <li id="resetDBSchema"><a title="SapphireTest" href="../classes/SapphireTest/resetDBSchema.xhtml">resetDBSchema()</a>
                — Reset the testing database's schema.</li>
            <li id="setFixtureFactory">
              <a title="SapphireTest" href="../classes/SapphireTest/setFixtureFactory.xhtml">setFixtureFactory()</a>
            </li>
            <li id="setUp">
              <a title="SapphireTest" href="../classes/SapphireTest/setUp.xhtml">setUp()</a>
            </li>
            <li id="setUpOnce"><a title="SapphireTest" href="../classes/SapphireTest/setUpOnce.xhtml">setUpOnce()</a>
                — Called once per test case ({@link SapphireTest} subclass).</li>
            <li id="set_is_running_test">
              <a title="SapphireTest" href="../classes/SapphireTest/set_is_running_test.xhtml">set_is_running_test()</a>
            </li>
            <li id="set_test_class_manifest"><a title="SapphireTest" href="../classes/SapphireTest/set_test_class_manifest.xhtml">set_test_class_manifest()</a>
                — Set the manifest to be used to look up test classes by helper functions</li>
            <li id="tearDown">
              <a title="SapphireTest" href="../classes/SapphireTest/tearDown.xhtml">tearDown()</a>
            </li>
            <li id="tearDownOnce"><a title="SapphireTest" href="../classes/SapphireTest/tearDownOnce.xhtml">tearDownOnce()</a>
                — tearDown method that's called once per test class rather once per test method.</li>
            <li id="using_temp_db"><a title="SapphireTest" href="../classes/SapphireTest/using_temp_db.xhtml">using_temp_db()</a>
                — Returns true if we are currently using a temporary database</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
