<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - GridState</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">GridState</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/forms/gridfield/GridState.php.xhtml#line13">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>GridState</h1>
        <h4>This class is a snapshot of the current status of a {@link GridField}.</h4>
        <p>It's designed to be inserted into a Form as a HiddenField and passed through<br/>to actions such as the .<br/></p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class GridState
                extends <a title="HiddenField" href="../classes/HiddenField.xhtml">HiddenField</a>
            {<br/><ul class="none"><li>// members</li><li>protected <span title="GridField">GridField</span> <a href="#members">$grid</a>;
                    </li><li>protected <span title="GridState_Data">GridState_Data</span> <a href="#members">$data</a>;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="FormField">FormField</span></li><li>protected <span title="Form">Form</span> <a href="#members">$form</a>;
                        </li><li>protected <a href="#members">$name</a>;
                        </li><li>protected <span title="$description">$description</span> <a href="#members">$description</a>;
                        </li><li>protected <span title="$extraClasses">$extraClasses</span> <a href="#members">$extraClasses</a>;
                        </li><li>public <a href="#members">$dontEscape</a>;
                        </li><li>protected <span title="$rightTitle">$rightTitle</span> <a href="#members">$rightTitle</a>;
                        </li><li>protected <span title="$leftTitle">$leftTitle</span> <a href="#members">$leftTitle</a>;
                        </li><li>protected <span title="FieldList">FieldList</span> <a href="#members">$containerFieldList</a>;
                        </li><li>protected boolean <a href="#members">$readonly</a>;
                        </li><li>protected boolean <a href="#members">$disabled</a>;
                        </li><li>protected string <a href="#members">$customValidationMessage</a>;
                        </li><li>protected string <a href="#members">$template</a>;
                        </li><li>protected array <a href="#members">$attributes</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="RequestHandler">RequestHandler</span></li><li>protected <span title="SS_HTTPRequest">SS_HTTPRequest</span> <a href="#members">$request</a>;
                        </li><li>protected <a href="#members">$model</a>;
                        </li><li>protected boolean <a href="#members">$brokenOnConstruct</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="ViewableData">ViewableData</span></li><li>protected <span title="ViewableData">ViewableData</span> <a href="#members">$failover</a>;
                        </li><li>protected <span title="ViewableData">ViewableData</span> <a href="#members">$customisedObject</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="Object">Object</span></li><li>public string <a href="#members">$class</a>;
                        </li><li>protected array <a href="#members">$extension_instances</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$beforeExtendCallbacks</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$afterExtendCallbacks</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public void <a title="GridState" href="../classes/GridState/__construct.xhtml">__construct</a>()
                    </li><li>public static  <a title="GridState" href="../classes/GridState/array_to_object.xhtml">array_to_object</a>()
                    </li><li>public void <a title="GridState" href="../classes/GridState/setValue.xhtml">setValue</a>()
                    </li><li>public void <a title="GridState" href="../classes/GridState/getData.xhtml">getData</a>()
                    </li><li>public DataList <a title="GridState" href="../classes/GridState/getList.xhtml">getList</a>()
                    </li><li>public string <a title="GridState" href="../classes/GridState/Value.xhtml">Value</a>()
                    </li><li>public string <a title="GridState" href="../classes/GridState/dataValue.xhtml">dataValue</a>()
                    </li><li>public type <a title="GridState" href="../classes/GridState/attrValue.xhtml">attrValue</a>()
                    </li><li>public type <a title="GridState" href="../classes/GridState/__toString.xhtml">__toString</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="HiddenField">HiddenField</span></li><li>public void <a title="HiddenField" href="../classes/HiddenField/FieldHolder.xhtml">FieldHolder</a>()
                        </li><li>public void <a title="HiddenField" href="../classes/HiddenField/performReadonlyTransformation.xhtml">performReadonlyTransformation</a>()
                        </li><li>public void <a title="HiddenField" href="../classes/HiddenField/IsHidden.xhtml">IsHidden</a>()
                        </li><li>public void <a title="HiddenField" href="../classes/HiddenField/getAttributes.xhtml">getAttributes</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="FormField">FormField</span></li><li>public static string <a title="FormField" href="../classes/FormField/name_to_label.xhtml">name_to_label</a>()
                        </li><li>public static void <a title="FormField" href="../classes/FormField/create_tag.xhtml">create_tag</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/__construct.xhtml">__construct</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/Link.xhtml">Link</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/ID.xhtml">ID</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/getName.xhtml">getName</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/Message.xhtml">Message</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/MessageType.xhtml">MessageType</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/Value.xhtml">Value</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/saveInto.xhtml">saveInto</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/dataValue.xhtml">dataValue</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/Title.xhtml">Title</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setTitle.xhtml">setTitle</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/RightTitle.xhtml">RightTitle</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setRightTitle.xhtml">setRightTitle</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/LeftTitle.xhtml">LeftTitle</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setLeftTitle.xhtml">setLeftTitle</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/extraClass.xhtml">extraClass</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/addExtraClass.xhtml">addExtraClass</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/removeExtraClass.xhtml">removeExtraClass</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setAttribute.xhtml">setAttribute</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/getAttribute.xhtml">getAttribute</a>()
                        </li><li>public array <a title="FormField" href="../classes/FormField/getAttributes.xhtml">getAttributes</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/getAttributesHTML.xhtml">getAttributesHTML</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/attrTitle.xhtml">attrTitle</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/attrValue.xhtml">attrValue</a>()
                        </li><li>public FormField <a title="FormField" href="../classes/FormField/setValue.xhtml">setValue</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setName.xhtml">setName</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setForm.xhtml">setForm</a>()
                        </li><li>public Form <a title="FormField" href="../classes/FormField/getForm.xhtml">getForm</a>()
                        </li><li>public bool <a title="FormField" href="../classes/FormField/securityTokenEnabled.xhtml">securityTokenEnabled</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setError.xhtml">setError</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setCustomValidationMessage.xhtml">setCustomValidationMessage</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/getCustomValidationMessage.xhtml">getCustomValidationMessage</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setTemplate.xhtml">setTemplate</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/getTemplate.xhtml">getTemplate</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/getFieldHolderTemplate.xhtml">getFieldHolderTemplate</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setFieldHolderTemplate.xhtml">setFieldHolderTemplate</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/getSmallFieldHolderTemplate.xhtml">getSmallFieldHolderTemplate</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setSmallFieldHolderTemplate.xhtml">setSmallFieldHolderTemplate</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/Field.xhtml">Field</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/FieldHolder.xhtml">FieldHolder</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/SmallFieldHolder.xhtml">SmallFieldHolder</a>()
                        </li><li>public array <a title="FormField" href="../classes/FormField/getTemplates.xhtml">getTemplates</a>()
                        </li><li>public array <a title="FormField" href="../classes/FormField/getFieldHolderTemplates.xhtml">getFieldHolderTemplates</a>()
                        </li><li>public array <a title="FormField" href="../classes/FormField/getSmallFieldHolderTemplates.xhtml">getSmallFieldHolderTemplates</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/isComposite.xhtml">isComposite</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/hasData.xhtml">hasData</a>()
                        </li><li>public boolean <a title="FormField" href="../classes/FormField/isReadonly.xhtml">isReadonly</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setReadonly.xhtml">setReadonly</a>()
                        </li><li>public boolean <a title="FormField" href="../classes/FormField/isDisabled.xhtml">isDisabled</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/setDisabled.xhtml">setDisabled</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/performReadonlyTransformation.xhtml">performReadonlyTransformation</a>()
                        </li><li>public FormField <a title="FormField" href="../classes/FormField/performDisabledTransformation.xhtml">performDisabledTransformation</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/transform.xhtml">transform</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/hasClass.xhtml">hasClass</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/Type.xhtml">Type</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/createTag.xhtml">createTag</a>()
                        </li><li>public boolean <a title="FormField" href="../classes/FormField/validate.xhtml">validate</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/setDescription.xhtml">setDescription</a>()
                        </li><li>public string <a title="FormField" href="../classes/FormField/getDescription.xhtml">getDescription</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/debug.xhtml">debug</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/forTemplate.xhtml">forTemplate</a>()
                        </li><li>public boolean <a title="FormField" href="../classes/FormField/Required.xhtml">Required</a>()
                        </li><li>public FieldList <a title="FormField" href="../classes/FormField/setContainerFieldList.xhtml">setContainerFieldList</a>()
                        </li><li>public FieldList <a title="FormField" href="../classes/FormField/getContainerFieldList.xhtml">getContainerFieldList</a>()
                        </li><li>public void <a title="FormField" href="../classes/FormField/rootFieldList.xhtml">rootFieldList</a>()
                        </li><li>public FormField <a title="FormField" href="../classes/FormField/castedCopy.xhtml">castedCopy</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="RequestHandler">RequestHandler</span></li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/__construct.xhtml">__construct</a>()
                        </li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/setDataModel.xhtml">setDataModel</a>()
                        </li><li>public SS_HTTPResponse|RequestHandler|string|array <a title="RequestHandler" href="../classes/RequestHandler/handleRequest.xhtml">handleRequest</a>()
                        </li><li>protected void <a title="RequestHandler" href="../classes/RequestHandler/findAction.xhtml">findAction</a>()
                        </li><li>protected SS_HTTPResponse <a title="RequestHandler" href="../classes/RequestHandler/handleAction.xhtml">handleAction</a>()
                        </li><li>public array|null <a title="RequestHandler" href="../classes/RequestHandler/allowedActions.xhtml">allowedActions</a>()
                        </li><li>public bool <a title="RequestHandler" href="../classes/RequestHandler/hasAction.xhtml">hasAction</a>()
                        </li><li>protected void <a title="RequestHandler" href="../classes/RequestHandler/definingClassForAction.xhtml">definingClassForAction</a>()
                        </li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/checkAccessAction.xhtml">checkAccessAction</a>()
                        </li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/httpError.xhtml">httpError</a>()
                        </li><li>public SS_HTTPRequest|NullHTTPRequest <a title="RequestHandler" href="../classes/RequestHandler/getRequest.xhtml">getRequest</a>()
                        </li><li>public void <a title="RequestHandler" href="../classes/RequestHandler/setRequest.xhtml">setRequest</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="ViewableData">ViewableData</span></li><li>public static string <a title="ViewableData" href="../classes/ViewableData/castingObjectCreator.xhtml">castingObjectCreator</a>()
                        </li><li>public static array <a title="ViewableData" href="../classes/ViewableData/castingObjectCreatorPair.xhtml">castingObjectCreatorPair</a>()
                        </li><li>public bool <a title="ViewableData" href="../classes/ViewableData/__isset.xhtml">__isset</a>()
                        </li><li>public mixed <a title="ViewableData" href="../classes/ViewableData/__get.xhtml">__get</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/__set.xhtml">__set</a>()
                        </li><li>public bool <a title="ViewableData" href="../classes/ViewableData/hasField.xhtml">hasField</a>()
                        </li><li>public mixed <a title="ViewableData" href="../classes/ViewableData/getField.xhtml">getField</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/setField.xhtml">setField</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/defineMethods.xhtml">defineMethods</a>()
                        </li><li>public ViewableData_Customised <a title="ViewableData" href="../classes/ViewableData/customise.xhtml">customise</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/setCustomisedObj.xhtml">setCustomisedObj</a>()
                        </li><li>public array <a title="ViewableData" href="../classes/ViewableData/castingHelperPair.xhtml">castingHelperPair</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/castingHelper.xhtml">castingHelper</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/castingClass.xhtml">castingClass</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/escapeTypeForField.xhtml">escapeTypeForField</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/buildCastingCache.xhtml">buildCastingCache</a>()
                        </li><li>public HTMLText <a title="ViewableData" href="../classes/ViewableData/renderWith.xhtml">renderWith</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/obj.xhtml">obj</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/cachedCall.xhtml">cachedCall</a>()
                        </li><li>public bool <a title="ViewableData" href="../classes/ViewableData/hasValue.xhtml">hasValue</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/XML_val.xhtml">XML_val</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/RAW_val.xhtml">RAW_val</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/SQL_val.xhtml">SQL_val</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/JS_val.xhtml">JS_val</a>()
                        </li><li>public void <a title="ViewableData" href="../classes/ViewableData/ATT_val.xhtml">ATT_val</a>()
                        </li><li>public array <a title="ViewableData" href="../classes/ViewableData/getXMLValues.xhtml">getXMLValues</a>()
                        </li><li>public ArrayIterator <a title="ViewableData" href="../classes/ViewableData/getIterator.xhtml">getIterator</a>()
                        </li><li>public ViewableData <a title="ViewableData" href="../classes/ViewableData/Me.xhtml">Me</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/ThemeDir.xhtml">ThemeDir</a>()
                        </li><li>public string <a title="ViewableData" href="../classes/ViewableData/CSSClasses.xhtml">CSSClasses</a>()
                        </li><li>public ViewableData_Debugger <a title="ViewableData" href="../classes/ViewableData/Debug.xhtml">Debug</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="Object">Object</span></li><li>public static Config_ForClass|null <a title="Object" href="../classes/Object/config.xhtml">config</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/create.xhtml">create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/strong_create.xhtml">strong_create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass</a>()
                        </li><li>public static string <a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass</a>()
                        </li><li>public static any <a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/get_static.xhtml">get_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/set_static.xhtml">set_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/combined_static.xhtml">combined_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/has_extension.xhtml">has_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_extension.xhtml">add_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension</a>()
                        </li><li>public static array <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/__construct.xhtml">__construct</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/__call.xhtml">__call</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/createMethod.xhtml">createMethod</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/stat.xhtml">stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/exists.xhtml">exists</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/is_a.xhtml">is_a</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/__toString.xhtml">__toString</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/extend.xhtml">extend</a>()
                        </li><li>public Extension <a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/clearCache.xhtml">clearCache</a>()
                        </li><li>protected mixed <a title="Object" href="../classes/Object/loadCache.xhtml">loadCache</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/saveCache.xhtml">saveCache</a>()
                        </li><li>protected string <a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/HiddenField.xhtml">HiddenField</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">+</td>
            <td>Implement in all subclasses</td>
          </tr>
          <tr>
            <td class="nummeric">508+</td>
            <td>Should the default error message be stored here instead</td>
          </tr>
          <tr>
            <td class="nummeric">798+</td>
            <td>Make this abstract.</td>
          </tr>
          <tr>
            <td class="nummeric">172</td>
            <td>Fix LeftAndMain usage</td>
          </tr>
          <tr>
            <td class="nummeric">584+</td>
            <td>Add support for removing extensions with parameters</td>
          </tr>
          <tr>
            <td class="nummeric">966+</td>
            <td>integrate inheritance rules</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="afterExtendCallbacks"><strong>$afterExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call after extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="attributes"><strong>$attributes</strong>
                —
                array</li>
            <li id="beforeExtendCallbacks"><strong>$beforeExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call prior to extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="brokenOnConstruct"><strong>$brokenOnConstruct</strong>
                —
                boolean<br/><span class="indent">This variable records whether RequestHandler::__construct() was called or not. Useful for checking if subclasses have called parent::__construct()</span></li>
            <li id="containerFieldList"><strong>$containerFieldList</strong>
                —
                <a href="#">FieldList</a><br/><span class="indent">Stores a reference to the FieldList that contains this object.</span></li>
            <li id="customValidationMessage"><strong>$customValidationMessage</strong>
                —
                string</li>
            <li id="customisedObject"><strong>$customisedObject</strong>
                —
                <a href="#">ViewableData</a></li>
            <li id="data"><strong>$data</strong>
                —
                <a href="#">GridState_Data</a></li>
            <li id="description"><strong>$description</strong>
                —
                <a href="#">$description</a></li>
            <li id="disabled"><strong>$disabled</strong>
                —
                boolean</li>
            <li id="extension_instances"><strong>$extension_instances</strong>
                —
                array</li>
            <li id="extraClasses"><strong>$extraClasses</strong>
                —
                <a href="#">$extraClasses</a></li>
            <li id="failover"><strong>$failover</strong>
                —
                <a href="#">ViewableData</a><br/><span class="indent">A failover object to attempt to get data from if it is not present on this object.</span></li>
            <li id="form"><strong>$form</strong>
                —
                <a href="#">Form</a></li>
            <li id="grid"><strong>$grid</strong>
                —
                <a href="#">GridField</a></li>
            <li id="leftTitle"><strong>$leftTitle</strong>
                —
                <a href="#">$leftTitle</a></li>
            <li id="model">
              <strong>$model</strong>
              <br/>
              <span class="indent">The DataModel for this request</span>
            </li>
            <li id="name">
              <strong>$name</strong>
            </li>
            <li id="readonly"><strong>$readonly</strong>
                —
                boolean</li>
            <li id="request"><strong>$request</strong>
                —
                <a href="#">SS_HTTPRequest</a></li>
            <li id="rightTitle"><strong>$rightTitle</strong>
                —
                <a href="#">$rightTitle</a></li>
            <li id="template"><strong>$template</strong>
                —
                string<br/><span class="indent">Name of the template used to render this form field. If not set, then will look up the class ancestry for the first matching template where the template name equals the class name.</span></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="class"><strong>$class</strong>
                —
                string</li>
            <li id="dontEscape">
              <strong>$dontEscape</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__construct">
              <a title="GridState" href="../classes/GridState/__construct.xhtml">__construct()</a>
            </li>
            <li id="Value"><a title="GridState" href="../classes/GridState/Value.xhtml">Value()</a>
                — Returns a json encoded string representation of this state.</li>
            <li id="__toString">
              <a title="GridState" href="../classes/GridState/__toString.xhtml">__toString()</a>
            </li>
            <li id="array_to_object">
              <a title="GridState" href="../classes/GridState/array_to_object.xhtml">array_to_object()</a>
            </li>
            <li id="attrValue">
              <a title="GridState" href="../classes/GridState/attrValue.xhtml">attrValue()</a>
            </li>
            <li id="dataValue"><a title="GridState" href="../classes/GridState/dataValue.xhtml">dataValue()</a>
                — Returns a json encoded string representation of this state.</li>
            <li id="getData">
              <a title="GridState" href="../classes/GridState/getData.xhtml">getData()</a>
            </li>
            <li id="getList">
              <a title="GridState" href="../classes/GridState/getList.xhtml">getList()</a>
            </li>
            <li id="setValue">
              <a title="GridState" href="../classes/GridState/setValue.xhtml">setValue()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="HiddenField" href="../classes/HiddenField.xhtml">HiddenField</a></h3>
          <h4>public</h4>
          <ul>
            <li id="FieldHolder">
              <a title="HiddenField" href="../classes/HiddenField/FieldHolder.xhtml">FieldHolder()</a>
            </li>
            <li id="IsHidden">
              <a title="HiddenField" href="../classes/HiddenField/IsHidden.xhtml">IsHidden()</a>
            </li>
            <li id="getAttributes">
              <a title="HiddenField" href="../classes/HiddenField/getAttributes.xhtml">getAttributes()</a>
            </li>
            <li id="performReadonlyTransformation">
              <a title="HiddenField" href="../classes/HiddenField/performReadonlyTransformation.xhtml">performReadonlyTransformation()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="FormField" href="../classes/FormField.xhtml">FormField</a></h3>
          <h4>public</h4>
          <ul>
            <li id="Field"><a title="FormField" href="../classes/FormField/Field.xhtml">Field()</a>
                — Returns the form field - used by templates.</li>
            <li id="FieldHolder"><a title="FormField" href="../classes/FormField/FieldHolder.xhtml">FieldHolder()</a>
                — Returns a "field holder" for this field - used by templates.</li>
            <li id="ID"><a title="FormField" href="../classes/FormField/ID.xhtml">ID()</a>
                — Returns the HTML ID of the field - used in the template by label tags.</li>
            <li id="LeftTitle">
              <a title="FormField" href="../classes/FormField/LeftTitle.xhtml">LeftTitle()</a>
            </li>
            <li id="Link"><a title="FormField" href="../classes/FormField/Link.xhtml">Link()</a>
                — Return a Link to this field</li>
            <li id="Message"><a title="FormField" href="../classes/FormField/Message.xhtml">Message()</a>
                — Returns the field message, used by form validation.</li>
            <li id="MessageType"><a title="FormField" href="../classes/FormField/MessageType.xhtml">MessageType()</a>
                — Returns the field message type, used by form validation.</li>
            <li id="Required">
              <a title="FormField" href="../classes/FormField/Required.xhtml">Required()</a>
            </li>
            <li id="RightTitle"><a title="FormField" href="../classes/FormField/RightTitle.xhtml">RightTitle()</a>
                — Gets the contextual label than can be used for additional field description.</li>
            <li id="SmallFieldHolder"><a title="FormField" href="../classes/FormField/SmallFieldHolder.xhtml">SmallFieldHolder()</a>
                — Returns a restricted field holder used within things like FieldGroups.</li>
            <li id="Title"><a title="FormField" href="../classes/FormField/Title.xhtml">Title()</a>
                — Returns the field label - used by templates.</li>
            <li id="Type"><a title="FormField" href="../classes/FormField/Type.xhtml">Type()</a>
                — Returns the field type - used by templates.</li>
            <li id="Value"><a title="FormField" href="../classes/FormField/Value.xhtml">Value()</a>
                — Returns the field value - used by templates.</li>
            <li id="addExtraClass"><a title="FormField" href="../classes/FormField/addExtraClass.xhtml">addExtraClass()</a>
                — Add one or more CSS-classes to the formfield-container. Multiple class names should be space delimited.</li>
            <li id="attrTitle"><a title="FormField" href="../classes/FormField/attrTitle.xhtml">attrTitle()</a>
                — Returns a version of a title suitable for insertion into an HTML attribute</li>
            <li id="attrValue"><a title="FormField" href="../classes/FormField/attrValue.xhtml">attrValue()</a>
                — Returns a version of a title suitable for insertion into an HTML attribute</li>
            <li id="castedCopy"><a title="FormField" href="../classes/FormField/castedCopy.xhtml">castedCopy()</a>
                — Returns another instance of this field, but "cast" to a different class.</li>
            <li id="createTag">
              <a title="FormField" href="../classes/FormField/createTag.xhtml">createTag()</a>
            </li>
            <li id="create_tag"><a title="FormField" href="../classes/FormField/create_tag.xhtml">create_tag()</a>
                — Construct and return HTML tag.</li>
            <li id="dataValue"><a title="FormField" href="../classes/FormField/dataValue.xhtml">dataValue()</a>
                — Returns the field value suitable for insertion into the data object</li>
            <li id="debug">
              <a title="FormField" href="../classes/FormField/debug.xhtml">debug()</a>
            </li>
            <li id="extraClass"><a title="FormField" href="../classes/FormField/extraClass.xhtml">extraClass()</a>
                — Compiles all CSS-classes. Optionally includes a "nolabel"-class if no title was set on the formfield.</li>
            <li id="forTemplate"><a title="FormField" href="../classes/FormField/forTemplate.xhtml">forTemplate()</a>
                — This function is used by the template processor.  If you refer to a field as a $ variable, it will return the $Field value.</li>
            <li id="getAttribute"><a title="FormField" href="../classes/FormField/getAttribute.xhtml">getAttribute()</a>
                — Get an HTML attribute defined by the field, or added through {@link setAttribute()}.</li>
            <li id="getAttributes">
              <a title="FormField" href="../classes/FormField/getAttributes.xhtml">getAttributes()</a>
            </li>
            <li id="getAttributesHTML">
              <a title="FormField" href="../classes/FormField/getAttributesHTML.xhtml">getAttributesHTML()</a>
            </li>
            <li id="getContainerFieldList"><a title="FormField" href="../classes/FormField/getContainerFieldList.xhtml">getContainerFieldList()</a>
                — Get the FieldList that contains this field.</li>
            <li id="getCustomValidationMessage"><a title="FormField" href="../classes/FormField/getCustomValidationMessage.xhtml">getCustomValidationMessage()</a>
                — Get the custom error message for this form field. If a custom message has not been defined then just return blank. The default error is defined on {@link Validator}.</li>
            <li id="getDescription">
              <a title="FormField" href="../classes/FormField/getDescription.xhtml">getDescription()</a>
            </li>
            <li id="getFieldHolderTemplate">
              <a title="FormField" href="../classes/FormField/getFieldHolderTemplate.xhtml">getFieldHolderTemplate()</a>
            </li>
            <li id="getFieldHolderTemplates"><a title="FormField" href="../classes/FormField/getFieldHolderTemplates.xhtml">getFieldHolderTemplates()</a>
                — Returns an array of templates to use for rendering {@link FieldHolder}</li>
            <li id="getForm"><a title="FormField" href="../classes/FormField/getForm.xhtml">getForm()</a>
                — Get the currently used form.</li>
            <li id="getName"><a title="FormField" href="../classes/FormField/getName.xhtml">getName()</a>
                — Returns the field name - used by templates.</li>
            <li id="getSmallFieldHolderTemplate">
              <a title="FormField" href="../classes/FormField/getSmallFieldHolderTemplate.xhtml">getSmallFieldHolderTemplate()</a>
            </li>
            <li id="getSmallFieldHolderTemplates"><a title="FormField" href="../classes/FormField/getSmallFieldHolderTemplates.xhtml">getSmallFieldHolderTemplates()</a>
                — Returns an array of templates to use for rendering {@link SmallFieldHolder}</li>
            <li id="getTemplate">
              <a title="FormField" href="../classes/FormField/getTemplate.xhtml">getTemplate()</a>
            </li>
            <li id="getTemplates"><a title="FormField" href="../classes/FormField/getTemplates.xhtml">getTemplates()</a>
                — Returns an array of templates to use for rendering {@link FieldH}</li>
            <li id="hasClass">
              <a title="FormField" href="../classes/FormField/hasClass.xhtml">hasClass()</a>
            </li>
            <li id="hasData"><a title="FormField" href="../classes/FormField/hasData.xhtml">hasData()</a>
                — Returns true if this field has its own data.</li>
            <li id="isComposite"><a title="FormField" href="../classes/FormField/isComposite.xhtml">isComposite()</a>
                — Returns true if this field is a composite field.</li>
            <li id="isDisabled">
              <a title="FormField" href="../classes/FormField/isDisabled.xhtml">isDisabled()</a>
            </li>
            <li id="isReadonly">
              <a title="FormField" href="../classes/FormField/isReadonly.xhtml">isReadonly()</a>
            </li>
            <li id="name_to_label"><a title="FormField" href="../classes/FormField/name_to_label.xhtml">name_to_label()</a>
                — Takes a fieldname and converts camelcase to spaced words. Also resolves combined fieldnames with dot syntax to spaced words.</li>
            <li id="performDisabledTransformation"><a title="FormField" href="../classes/FormField/performDisabledTransformation.xhtml">performDisabledTransformation()</a>
                — Return a disabled version of this field.</li>
            <li id="performReadonlyTransformation"><a title="FormField" href="../classes/FormField/performReadonlyTransformation.xhtml">performReadonlyTransformation()</a>
                — Returns a readonly version of this field</li>
            <li id="removeExtraClass"><a title="FormField" href="../classes/FormField/removeExtraClass.xhtml">removeExtraClass()</a>
                — Remove one or more CSS-classes from the formfield-container.</li>
            <li id="rootFieldList">
              <a title="FormField" href="../classes/FormField/rootFieldList.xhtml">rootFieldList()</a>
            </li>
            <li id="saveInto"><a title="FormField" href="../classes/FormField/saveInto.xhtml">saveInto()</a>
                — Method to save this form field into the given data object.</li>
            <li id="securityTokenEnabled"><a title="FormField" href="../classes/FormField/securityTokenEnabled.xhtml">securityTokenEnabled()</a>
                — Return TRUE if security token protection is enabled on the parent {@link Form}.</li>
            <li id="setAttribute"><a title="FormField" href="../classes/FormField/setAttribute.xhtml">setAttribute()</a>
                — Set an HTML attribute on the field element, mostly an &lt;input&gt; tag.</li>
            <li id="setContainerFieldList"><a title="FormField" href="../classes/FormField/setContainerFieldList.xhtml">setContainerFieldList()</a>
                — Set the FieldList that contains this field.</li>
            <li id="setCustomValidationMessage"><a title="FormField" href="../classes/FormField/setCustomValidationMessage.xhtml">setCustomValidationMessage()</a>
                — Set the custom error message to show instead of the default format of Please Fill In XXX. Different from setError() as that appends it to the standard error messaging</li>
            <li id="setDescription"><a title="FormField" href="../classes/FormField/setDescription.xhtml">setDescription()</a>
                — Describe this field, provide help text for it.</li>
            <li id="setDisabled"><a title="FormField" href="../classes/FormField/setDisabled.xhtml">setDisabled()</a>
                — Sets disabed-flag on form-field. Please use performDisabledTransformation() to actually transform this instance.</li>
            <li id="setError"><a title="FormField" href="../classes/FormField/setError.xhtml">setError()</a>
                — Sets the error message to be displayed on the form field Set by php validation of the form.</li>
            <li id="setFieldHolderTemplate"><a title="FormField" href="../classes/FormField/setFieldHolderTemplate.xhtml">setFieldHolderTemplate()</a>
                — Set name of template (without path or extension) for the holder, which in turn is responsible for rendering {@link Field()}.</li>
            <li id="setForm"><a title="FormField" href="../classes/FormField/setForm.xhtml">setForm()</a>
                — Set the container form.</li>
            <li id="setLeftTitle">
              <a title="FormField" href="../classes/FormField/setLeftTitle.xhtml">setLeftTitle()</a>
            </li>
            <li id="setName"><a title="FormField" href="../classes/FormField/setName.xhtml">setName()</a>
                — Set the field name</li>
            <li id="setReadonly"><a title="FormField" href="../classes/FormField/setReadonly.xhtml">setReadonly()</a>
                — Sets readonly-flag on form-field. Please use performReadonlyTransformation() to actually transform this instance.</li>
            <li id="setRightTitle"><a title="FormField" href="../classes/FormField/setRightTitle.xhtml">setRightTitle()</a>
                — Sets the contextual label.</li>
            <li id="setSmallFieldHolderTemplate"><a title="FormField" href="../classes/FormField/setSmallFieldHolderTemplate.xhtml">setSmallFieldHolderTemplate()</a>
                — Set name of template (without path or extension) for the small holder, which in turn is responsible for rendering {@link Field()}.</li>
            <li id="setTemplate"><a title="FormField" href="../classes/FormField/setTemplate.xhtml">setTemplate()</a>
                — Set name of template (without path or extension).</li>
            <li id="setTitle">
              <a title="FormField" href="../classes/FormField/setTitle.xhtml">setTitle()</a>
            </li>
            <li id="setValue"><a title="FormField" href="../classes/FormField/setValue.xhtml">setValue()</a>
                — Set the field value.</li>
            <li id="transform">
              <a title="FormField" href="../classes/FormField/transform.xhtml">transform()</a>
            </li>
            <li id="validate"><a title="FormField" href="../classes/FormField/validate.xhtml">validate()</a>
                — Abstract method each {@link FormField} subclass must implement, determines whether the field is valid or not based on the value.</li>
          </ul>
          <h3>Inherited from <a title="RequestHandler" href="../classes/RequestHandler.xhtml">RequestHandler</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="definingClassForAction"><a title="RequestHandler" href="../classes/RequestHandler/definingClassForAction.xhtml">definingClassForAction()</a>
                — Return the class that defines the given action, so that we know where to check allowed_actions.</li>
            <li id="findAction">
              <a title="RequestHandler" href="../classes/RequestHandler/findAction.xhtml">findAction()</a>
            </li>
            <li id="handleAction"><a title="RequestHandler" href="../classes/RequestHandler/handleAction.xhtml">handleAction()</a>
                — Given a request, and an action name, call that action name on this RequestHandler</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="allowedActions"><a title="RequestHandler" href="../classes/RequestHandler/allowedActions.xhtml">allowedActions()</a>
                — Get a array of allowed actions defined on this controller, any parent classes or extensions.</li>
            <li id="checkAccessAction"><a title="RequestHandler" href="../classes/RequestHandler/checkAccessAction.xhtml">checkAccessAction()</a>
                — Check that the given action is allowed to be called from a URL.</li>
            <li id="getRequest"><a title="RequestHandler" href="../classes/RequestHandler/getRequest.xhtml">getRequest()</a>
                — Returns the SS_HTTPRequest object that this controller is using.</li>
            <li id="handleRequest"><a title="RequestHandler" href="../classes/RequestHandler/handleRequest.xhtml">handleRequest()</a>
                — Handles URL requests.</li>
            <li id="hasAction"><a title="RequestHandler" href="../classes/RequestHandler/hasAction.xhtml">hasAction()</a>
                — Checks if this request handler has a specific action, even if the current user cannot access it.</li>
            <li id="httpError"><a title="RequestHandler" href="../classes/RequestHandler/httpError.xhtml">httpError()</a>
                — Throws a HTTP error response encased in a {@link SS_HTTPResponse_Exception}, which is later caught in {@link RequestHandler::handleAction()} and returned to the user.</li>
            <li id="setDataModel"><a title="RequestHandler" href="../classes/RequestHandler/setDataModel.xhtml">setDataModel()</a>
                — Set the DataModel for this request.</li>
            <li id="setRequest"><a title="RequestHandler" href="../classes/RequestHandler/setRequest.xhtml">setRequest()</a>
                — Typically the request is set through {@link handleAction()} or {@link handleRequest()}, but in some based we want to set it manually.</li>
          </ul>
          <h3>Inherited from <a title="ViewableData" href="../classes/ViewableData.xhtml">ViewableData</a></h3>
          <h4>public</h4>
          <ul>
            <li id="ATT_val"><a title="ViewableData" href="../classes/ViewableData/ATT_val.xhtml">ATT_val()</a>
                — Return the value of a field escaped suitable to be inserted into an XML node attribute.</li>
            <li id="CSSClasses"><a title="ViewableData" href="../classes/ViewableData/CSSClasses.xhtml">CSSClasses()</a>
                — Get part of the current classes ancestry to be used as a CSS class.</li>
            <li id="Debug"><a title="ViewableData" href="../classes/ViewableData/Debug.xhtml">Debug()</a>
                — Return debug information about this object that can be rendered into a template</li>
            <li id="JS_val"><a title="ViewableData" href="../classes/ViewableData/JS_val.xhtml">JS_val()</a>
                — Return the value of a field in a JavaScript-save format.</li>
            <li id="Me"><a title="ViewableData" href="../classes/ViewableData/Me.xhtml">Me()</a>
                — When rendering some objects it is necessary to iterate over the object being rendered, to do this, you need access to itself.</li>
            <li id="RAW_val"><a title="ViewableData" href="../classes/ViewableData/RAW_val.xhtml">RAW_val()</a>
                — Return the value of the field without any escaping being applied.</li>
            <li id="SQL_val"><a title="ViewableData" href="../classes/ViewableData/SQL_val.xhtml">SQL_val()</a>
                — Return the value of a field in an SQL-safe format.</li>
            <li id="ThemeDir"><a title="ViewableData" href="../classes/ViewableData/ThemeDir.xhtml">ThemeDir()</a>
                — Return the directory if the current active theme (relative to the site root).</li>
            <li id="XML_val"><a title="ViewableData" href="../classes/ViewableData/XML_val.xhtml">XML_val()</a>
                — Get the string value of a field on this object that has been suitable escaped to be inserted directly into a template.</li>
            <li id="__get"><a title="ViewableData" href="../classes/ViewableData/__get.xhtml">__get()</a>
                — Get the value of a property/field on this object. This will check if a method called get{$property} exists, then check if a field is available using {@link ViewableData::getField()}, then fall back on a failover object.</li>
            <li id="__isset"><a title="ViewableData" href="../classes/ViewableData/__isset.xhtml">__isset()</a>
                — Check if a field exists on this object or its failover.</li>
            <li id="__set"><a title="ViewableData" href="../classes/ViewableData/__set.xhtml">__set()</a>
                — Set a property/field on this object. This will check for the existence of a method called set{$property}, then use the {@link ViewableData::setField()} method.</li>
            <li id="buildCastingCache"><a title="ViewableData" href="../classes/ViewableData/buildCastingCache.xhtml">buildCastingCache()</a>
                — Save the casting cache for this object (including data from any failovers) into a variable</li>
            <li id="cachedCall"><a title="ViewableData" href="../classes/ViewableData/cachedCall.xhtml">cachedCall()</a>
                — A simple wrapper around {@link ViewableData::obj()} that automatically caches the result so it can be used again without re-running the method.</li>
            <li id="castingClass"><a title="ViewableData" href="../classes/ViewableData/castingClass.xhtml">castingClass()</a>
                — Get the class name a field on this object will be casted to</li>
            <li id="castingHelper"><a title="ViewableData" href="../classes/ViewableData/castingHelper.xhtml">castingHelper()</a>
                — Return the "casting helper" (a piece of PHP code that when evaluated creates a casted value object) for a field on this object.</li>
            <li id="castingHelperPair"><a title="ViewableData" href="../classes/ViewableData/castingHelperPair.xhtml">castingHelperPair()</a>
                — Get the class a field on this object would be casted to, as well as the casting helper for casting a field to an object (see {@link ViewableData::castingHelper()} for information on casting helpers).</li>
            <li id="castingObjectCreator"><a title="ViewableData" href="../classes/ViewableData/castingObjectCreator.xhtml">castingObjectCreator()</a>
                — Converts a field spec into an object creator. For example: "Int" becomes "new Int($fieldName);" and "Varchar(50)" becomes "new Varchar($fieldName, 50);".</li>
            <li id="castingObjectCreatorPair"><a title="ViewableData" href="../classes/ViewableData/castingObjectCreatorPair.xhtml">castingObjectCreatorPair()</a>
                — Convert a field schema (e.g. "Varchar(50)") into a casting object creator array that contains both a className and castingHelper constructor code. See {@link castingObjectCreator} for more information about the constructor.</li>
            <li id="customise"><a title="ViewableData" href="../classes/ViewableData/customise.xhtml">customise()</a>
                — Merge some arbitrary data in with this object. This method returns a {@link ViewableData_Customised} instance with references to both this and the new custom data.</li>
            <li id="defineMethods"><a title="ViewableData" href="../classes/ViewableData/defineMethods.xhtml">defineMethods()</a>
                — Add methods from the {@link ViewableData::$failover} object, as well as wrapping any methods prefixed with an underscore into a {@link ViewableData::cachedCall()}.</li>
            <li id="escapeTypeForField"><a title="ViewableData" href="../classes/ViewableData/escapeTypeForField.xhtml">escapeTypeForField()</a>
                — Return the string-format type for the given field.</li>
            <li id="getField"><a title="ViewableData" href="../classes/ViewableData/getField.xhtml">getField()</a>
                — Get the value of a field on this object. This should be overloaded in child classes.</li>
            <li id="getIterator"><a title="ViewableData" href="../classes/ViewableData/getIterator.xhtml">getIterator()</a>
                — Return a single-item iterator so you can iterate over the fields of a single record.</li>
            <li id="getXMLValues"><a title="ViewableData" href="../classes/ViewableData/getXMLValues.xhtml">getXMLValues()</a>
                — Get an array of XML-escaped values by field name</li>
            <li id="hasField"><a title="ViewableData" href="../classes/ViewableData/hasField.xhtml">hasField()</a>
                — Check if a field exists on this object. This should be overloaded in child classes.</li>
            <li id="hasValue"><a title="ViewableData" href="../classes/ViewableData/hasValue.xhtml">hasValue()</a>
                — Checks if a given method/field has a valid value. If the result is an object, this will return the result of the exists method, otherwise will check if the result is not just an empty paragraph tag.</li>
            <li id="obj"><a title="ViewableData" href="../classes/ViewableData/obj.xhtml">obj()</a>
                — Get the value of a field on this object, automatically inserting the value into any available casting objects that have been specified.</li>
            <li id="renderWith"><a title="ViewableData" href="../classes/ViewableData/renderWith.xhtml">renderWith()</a>
                — Render this object into the template, and get the result as a string. You can pass one of the following as the $template parameter:  - a template name (e.g. Page)  - an array of possible template names - the first valid one will be used  - an SSViewer instance</li>
            <li id="setCustomisedObj">
              <a title="ViewableData" href="../classes/ViewableData/setCustomisedObj.xhtml">setCustomisedObj()</a>
            </li>
            <li id="setField"><a title="ViewableData" href="../classes/ViewableData/setField.xhtml">setField()</a>
                — Set a field on this object. This should be overloaded in child classes.</li>
          </ul>
          <h3>Inherited from <a title="Object" href="../classes/Object.xhtml">Object</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="addMethodsFrom"><a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom()</a>
                — Add all the methods from an object property (which is an {@link Extension}) to this object.</li>
            <li id="addWrapperMethod"><a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod()</a>
                — Add a wrapper method - a method which points to another method with a different name. For example, Thumbnail(x) can be wrapped to generateThumbnail(x)</li>
            <li id="afterExtending"><a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending()</a>
                — Allows user code to hook into Object::extend after control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="beforeExtending"><a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending()</a>
                — Allows user code to hook into Object::extend prior to control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="createMethod"><a title="Object" href="../classes/Object/createMethod.xhtml">createMethod()</a>
                — Add an extra method using raw PHP code passed as a string</li>
            <li id="defineMethods"><a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods()</a>
                — Adds any methods from {@link Extension} instances attached to this object.</li>
            <li id="loadCache"><a title="Object" href="../classes/Object/loadCache.xhtml">loadCache()</a>
                — Loads a cache from the filesystem if a valid on is present and within the specified lifetime</li>
            <li id="sanitiseCachename"><a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename()</a>
                — Strip a file name of special characters so it is suitable for use as a cache file name</li>
            <li id="saveCache"><a title="Object" href="../classes/Object/saveCache.xhtml">saveCache()</a>
                — Save a piece of cached data to the file system</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__call"><a title="Object" href="../classes/Object/__call.xhtml">__call()</a>
                — Attemps to locate and call a method dynamically added to a class at runtime if a default cannot be located</li>
            <li id="__toString">
              <a title="Object" href="../classes/Object/__toString.xhtml">__toString()</a>
            </li>
            <li id="addStaticVars"><a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars()</a>
                — Merge in a set of additional static variables</li>
            <li id="add_extension"><a title="Object" href="../classes/Object/add_extension.xhtml">add_extension()</a>
                — Add an extension to a specific class.</li>
            <li id="add_static_var"><a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var()</a>
                — Add a static variable without replacing it completely if possible, but merging in with both existing PHP statics and existing psuedo-statics. Uses PHP's array_merge_recursive() with if the $replace argument is FALSE.</li>
            <li id="allMethodNames"><a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames()</a>
                — Return the names of all the methods available on this object</li>
            <li id="cacheToFile"><a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile()</a>
                — Cache the results of an instance method in this object to a file, or if it is already cache return the cached results</li>
            <li id="clearCache"><a title="Object" href="../classes/Object/clearCache.xhtml">clearCache()</a>
                — Clears the cache for the given cacheToFile call</li>
            <li id="combined_static"><a title="Object" href="../classes/Object/combined_static.xhtml">combined_static()</a>
                — Traverse down a class ancestry and attempt to merge all the uninherited static values for a particular static into a single variable</li>
            <li id="config"><a title="Object" href="../classes/Object/config.xhtml">config()</a>
                — Get a configuration accessor for this class. Short hand for Config::inst()-&gt;get($this-&gt;class, .....).</li>
            <li id="create"><a title="Object" href="../classes/Object/create.xhtml">create()</a>
                — An implementation of the factory method, allows you to create an instance of a class</li>
            <li id="create_from_string"><a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string()</a>
                — Create an object from a string representation.  It treats it as a PHP constructor without the 'new' keyword.  It also manages to construct the object without the use of eval().</li>
            <li id="exists"><a title="Object" href="../classes/Object/exists.xhtml">exists()</a>
                — Return true if this object "exists" i.e. has a sensible value</li>
            <li id="extend"><a title="Object" href="../classes/Object/extend.xhtml">extend()</a>
                — Run the given function on all of this object's extensions. Note that this method originally returned void, so if you wanted to return results, you're hosed</li>
            <li id="getCustomClass"><a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass()</a>
                — If a class has been overloaded, get the class name it has been overloaded with - otherwise return the class name</li>
            <li id="getExtensionInstance"><a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance()</a>
                — Get an extension instance attached to this object by name.</li>
            <li id="getExtensionInstances"><a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances()</a>
                — Get all extension instances for this specific object instance.</li>
            <li id="get_extensions">
              <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions()</a>
            </li>
            <li id="get_extra_config_sources">
              <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources()</a>
            </li>
            <li id="get_static"><a title="Object" href="../classes/Object/get_static.xhtml">get_static()</a>
                — Get a static variable, taking into account SS's inbuild static caches and pseudo-statics</li>
            <li id="hasExtension"><a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension()</a>
                — Returns TRUE if this object instance has a specific extension applied in {@link $extension_instances}. Extension instances are initialized at constructor time, meaning if you use {@link add_extension()} afterwards, the added extension will just be added to new instances of the extended class. Use the static method {@link has_extension()} to check if a class (not an instance) has a specific extension.</li>
            <li id="hasMethod"><a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod()</a>
                — Return TRUE if a method exists on this object</li>
            <li id="has_extension"><a title="Object" href="../classes/Object/has_extension.xhtml">has_extension()</a>
                — Return TRUE if a class has a specified extension.</li>
            <li id="invokeWithExtensions"><a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions()</a>
                — Calls a method if available on both this object and all applied {@link Extensions}, and then attempts to merge all results into an array</li>
            <li id="is_a"><a title="Object" href="../classes/Object/is_a.xhtml">is_a()</a>
                — Check if this class is an instance of a specific class, or has that class as one of its parents</li>
            <li id="parentClass">
              <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass()</a>
            </li>
            <li id="parse_class_spec"><a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec()</a>
                — Parses a class-spec, such as "Versioned('Stage','Live')", as passed to create_from_string().</li>
            <li id="remove_extension"><a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension()</a>
                — Remove an extension from a class.</li>
            <li id="set_stat">
              <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat()</a>
            </li>
            <li id="set_static"><a title="Object" href="../classes/Object/set_static.xhtml">set_static()</a>
                — Set a static variable</li>
            <li id="stat">
              <a title="Object" href="../classes/Object/stat.xhtml">stat()</a>
            </li>
            <li id="static_lookup"><a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup()</a>
                — Get the value of a static property of a class, even in that property is declared protected (but not private), without any inheritance, merging or parent lookup if it doesn't exist on the given class.</li>
            <li id="strong_create"><a title="Object" href="../classes/Object/strong_create.xhtml">strong_create()</a>
                — Similar to {@link Object::create()}, except that classes are only overloaded if you set the $strong parameter to TRUE when using {@link Object::useCustomClass()}</li>
            <li id="uninherited">
              <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited()</a>
            </li>
            <li id="uninherited_static"><a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static()</a>
                — Get an uninherited static variable - a variable that is explicity set in this class, and not in the parent class.</li>
            <li id="useCustomClass"><a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass()</a>
                — This class allows you to overload classes with other classes when they are constructed using the factory method {@link Object::create()}</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
