<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - SS_Log</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">SS_Log</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/dev/Log.php.xhtml#line47">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>SS_Log</h1>
        <h4>Wrapper class for a logging handler like {@link Zend_Log} which takes a message (or a map of context variables) and sends it to one or more {@link Zend_Log_Writer_Abstract} subclasses for output.</h4>
        <p>These priorities are currently supported:<br/>- SS_Log::ERR<br/>- SS_Log::WARN<br/>- SS_Log::NOTICE<br/>You can add an error writer by calling Example usage of logging errors by email notification:<br/>&lt;code&gt;<br/>SS_Log::add_writer(new SS_LogEmailWriter('my@email.com'), SS_Log::ERR);<br/>&lt;/code&gt;<br/>Example usage of logging errors by file:<br/>&lt;code&gt;<br/>SS_Log::add_writer(new SS_LogFileWriter('/var/log/silverstripe/errors.log'), SS_Log::ERR);<br/>&lt;/code&gt;<br/>Example usage of logging at warnings and errors by setting the priority to '&lt;=':<br/>&lt;code&gt;<br/>SS_Log::add_writer(new SS_LogEmailWriter('my@email.com'), SS_Log::WARN, '&lt;=');<br/>&lt;/code&gt;<br/>Each writer object can be assigned a formatter. The formatter is<br/>responsible for formatting the message before giving it to the writer.<br/>is such an example that formats errors<br/>into HTML for human readability in an email client.<br/>Formatters are added to writers like this:<br/>&lt;code&gt;<br/>$logEmailWriter = new SS_LogEmailWriter('my@email.com');<br/>$myEmailFormatter = new MyLogEmailFormatter();<br/>$logEmailWriter-&gt;setFormatter($myEmailFormatter);<br/>&lt;/code&gt;<br/></p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class SS_Log
            {<br/><ul class="none"><li>// constants</li><li>const ERR = ;</li><li>const WARN = ;</li><li>const NOTICE = ;</li><li>const INFO = ;</li><li>const DEBUG = ;</li></ul><ul class="none"><li>// members</li><li>public string <a href="#members">$logger_class</a>;
                    </li><li>protected <span title=""/> <a href="#members">$logger</a>;
                    </li><li>protected array <a href="#members">$log_globals</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public static  <a title="SS_Log" href="../classes/SS_Log/get_logger.xhtml">get_logger</a>()
                    </li><li>public static array <a title="SS_Log" href="../classes/SS_Log/get_writers.xhtml">get_writers</a>()
                    </li><li>public static void <a title="SS_Log" href="../classes/SS_Log/clear_writers.xhtml">clear_writers</a>()
                    </li><li>public static void <a title="SS_Log" href="../classes/SS_Log/remove_writer.xhtml">remove_writer</a>()
                    </li><li>public static void <a title="SS_Log" href="../classes/SS_Log/add_writer.xhtml">add_writer</a>()
                    </li><li>public static void <a title="SS_Log" href="../classes/SS_Log/log.xhtml">log</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extended by</h4>
          <ul>
            <li>
              <a href="../classes/SS_LogTest_NewLogger.xhtml">SS_LogTest_NewLogger</a>
            </li>
          </ul>
        </div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="ERR">ERR</td>
              <td/>
            </tr>
            <tr>
              <td id="WARN">WARN</td>
              <td/>
            </tr>
            <tr>
              <td id="NOTICE">NOTICE</td>
              <td/>
            </tr>
            <tr>
              <td id="INFO">INFO</td>
              <td/>
            </tr>
            <tr>
              <td id="DEBUG">DEBUG</td>
              <td/>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="log_globals"><strong>$log_globals</strong>
                —
                array</li>
            <li id="logger"><strong>$logger</strong>
                —
                <a href="#"/></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="logger_class"><strong>$logger_class</strong>
                —
                string<br/><span class="indent">Logger class to use.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="add_writer"><a title="SS_Log" href="../classes/SS_Log/add_writer.xhtml">add_writer()</a>
                — Add a writer instance to the logger.</li>
            <li id="clear_writers"><a title="SS_Log" href="../classes/SS_Log/clear_writers.xhtml">clear_writers()</a>
                — Remove all writers currently in use.</li>
            <li id="get_logger"><a title="SS_Log" href="../classes/SS_Log/get_logger.xhtml">get_logger()</a>
                — Get the logger currently in use, or create a new one if it doesn't exist.</li>
            <li id="get_writers"><a title="SS_Log" href="../classes/SS_Log/get_writers.xhtml">get_writers()</a>
                — Get all writers in use by the logger.</li>
            <li id="log"><a title="SS_Log" href="../classes/SS_Log/log.xhtml">log()</a>
                — Dispatch a message by priority level.</li>
            <li id="remove_writer"><a title="SS_Log" href="../classes/SS_Log/remove_writer.xhtml">remove_writer()</a>
                — Remove a writer instance from the logger.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
