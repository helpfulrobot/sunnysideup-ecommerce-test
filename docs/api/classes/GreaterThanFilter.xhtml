<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - GreaterThanFilter</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">GreaterThanFilter</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/search/filters/GreaterThanFilter.php.xhtml#line11">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>GreaterThanFilter</h1>
        <h4>Selects numerical/date content greater than the input</h4>
        <p>Can be used by SearchContext and DataList-&gt;filter, eg;<br/>Model::get()-&gt;filter("Field1:GreaterThan", $value);</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class GreaterThanFilter
                extends <a title="ComparisonFilter" href="../classes/ComparisonFilter.xhtml">ComparisonFilter</a>
            {<br/><ul class="none"><li>// Inherited members from <span title="SearchFilter">SearchFilter</span></li><li>protected string <a href="#members">$model</a>;
                        </li><li>protected string <a href="#members">$name</a>;
                        </li><li>protected string <a href="#members">$fullName</a>;
                        </li><li>protected mixed <a href="#members">$value</a>;
                        </li><li>protected array <a href="#members">$modifiers</a>;
                        </li><li>protected string <a href="#members">$relation</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="Object">Object</span></li><li>public string <a href="#members">$class</a>;
                        </li><li>protected array <a href="#members">$extension_instances</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$beforeExtendCallbacks</a>;
                        </li><li>protected <span title="array[callable]">array[callable]</span> <a href="#members">$afterExtendCallbacks</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>protected void <a title="GreaterThanFilter" href="../classes/GreaterThanFilter/getOperator.xhtml">getOperator</a>()
                    </li><li>protected void <a title="GreaterThanFilter" href="../classes/GreaterThanFilter/getInverseOperator.xhtml">getInverseOperator</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="ComparisonFilter">ComparisonFilter</span></li><li>protected abstract string <a title="ComparisonFilter" href="../classes/ComparisonFilter/getOperator.xhtml">getOperator</a>()
                        </li><li>protected abstract string <a title="ComparisonFilter" href="../classes/ComparisonFilter/getInverseOperator.xhtml">getInverseOperator</a>()
                        </li><li>protected $this|DataQuery <a title="ComparisonFilter" href="../classes/ComparisonFilter/applyOne.xhtml">applyOne</a>()
                        </li><li>protected $this|DataQuery <a title="ComparisonFilter" href="../classes/ComparisonFilter/excludeOne.xhtml">excludeOne</a>()
                        </li><li>public void <a title="ComparisonFilter" href="../classes/ComparisonFilter/isEmpty.xhtml">isEmpty</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="SearchFilter">SearchFilter</span></li><li>public void <a title="SearchFilter" href="../classes/SearchFilter/__construct.xhtml">__construct</a>()
                        </li><li>protected void <a title="SearchFilter" href="../classes/SearchFilter/addRelation.xhtml">addRelation</a>()
                        </li><li>public void <a title="SearchFilter" href="../classes/SearchFilter/setModel.xhtml">setModel</a>()
                        </li><li>public void <a title="SearchFilter" href="../classes/SearchFilter/setValue.xhtml">setValue</a>()
                        </li><li>public string <a title="SearchFilter" href="../classes/SearchFilter/getValue.xhtml">getValue</a>()
                        </li><li>public void <a title="SearchFilter" href="../classes/SearchFilter/setModifiers.xhtml">setModifiers</a>()
                        </li><li>public array <a title="SearchFilter" href="../classes/SearchFilter/getModifiers.xhtml">getModifiers</a>()
                        </li><li>public string <a title="SearchFilter" href="../classes/SearchFilter/getName.xhtml">getName</a>()
                        </li><li>public void <a title="SearchFilter" href="../classes/SearchFilter/setName.xhtml">setName</a>()
                        </li><li>public string <a title="SearchFilter" href="../classes/SearchFilter/getFullName.xhtml">getFullName</a>()
                        </li><li>public void <a title="SearchFilter" href="../classes/SearchFilter/setFullName.xhtml">setFullName</a>()
                        </li><li>public string <a title="SearchFilter" href="../classes/SearchFilter/getDbName.xhtml">getDbName</a>()
                        </li><li>public string <a title="SearchFilter" href="../classes/SearchFilter/getDbFormattedValue.xhtml">getDbFormattedValue</a>()
                        </li><li>public DataQuery <a title="SearchFilter" href="../classes/SearchFilter/apply.xhtml">apply</a>()
                        </li><li>protected abstract DataQuery <a title="SearchFilter" href="../classes/SearchFilter/applyOne.xhtml">applyOne</a>()
                        </li><li>protected DataQuery <a title="SearchFilter" href="../classes/SearchFilter/applyMany.xhtml">applyMany</a>()
                        </li><li>public DataQuery <a title="SearchFilter" href="../classes/SearchFilter/exclude.xhtml">exclude</a>()
                        </li><li>protected abstract DataQuery <a title="SearchFilter" href="../classes/SearchFilter/excludeOne.xhtml">excludeOne</a>()
                        </li><li>protected DataQuery <a title="SearchFilter" href="../classes/SearchFilter/excludeMany.xhtml">excludeMany</a>()
                        </li><li>public boolean <a title="SearchFilter" href="../classes/SearchFilter/isEmpty.xhtml">isEmpty</a>()
                        </li><li>protected Mixed <a title="SearchFilter" href="../classes/SearchFilter/getCaseSensitive.xhtml">getCaseSensitive</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="Object">Object</span></li><li>public static Config_ForClass|null <a title="Object" href="../classes/Object/config.xhtml">config</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/create.xhtml">create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec</a>()
                        </li><li>public static static <a title="Object" href="../classes/Object/strong_create.xhtml">strong_create</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass</a>()
                        </li><li>public static string <a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass</a>()
                        </li><li>public static any <a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/get_static.xhtml">get_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/set_static.xhtml">set_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static</a>()
                        </li><li>public static mixed <a title="Object" href="../classes/Object/combined_static.xhtml">combined_static</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/has_extension.xhtml">has_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/add_extension.xhtml">add_extension</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension</a>()
                        </li><li>public static array <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions</a>()
                        </li><li>public static void <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/__construct.xhtml">__construct</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/__call.xhtml">__call</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/createMethod.xhtml">createMethod</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/stat.xhtml">stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/exists.xhtml">exists</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/is_a.xhtml">is_a</a>()
                        </li><li>public string <a title="Object" href="../classes/Object/__toString.xhtml">__toString</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/extend.xhtml">extend</a>()
                        </li><li>public Extension <a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance</a>()
                        </li><li>public bool <a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension</a>()
                        </li><li>public array <a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances</a>()
                        </li><li>public mixed <a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile</a>()
                        </li><li>public void <a title="Object" href="../classes/Object/clearCache.xhtml">clearCache</a>()
                        </li><li>protected mixed <a title="Object" href="../classes/Object/loadCache.xhtml">loadCache</a>()
                        </li><li>protected void <a title="Object" href="../classes/Object/saveCache.xhtml">saveCache</a>()
                        </li><li>protected string <a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/ComparisonFilter.xhtml">ComparisonFilter</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">191</td>
            <td>move to somewhere more appropriate, such as DataMapper, the magical class-to-be?</td>
          </tr>
          <tr>
            <td class="nummeric">584+</td>
            <td>Add support for removing extensions with parameters</td>
          </tr>
          <tr>
            <td class="nummeric">966+</td>
            <td>integrate inheritance rules</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="afterExtendCallbacks"><strong>$afterExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call after extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="beforeExtendCallbacks"><strong>$beforeExtendCallbacks</strong>
                —
                <a href="#">array[callable]</a><br/><span class="indent">List of callbacks to call prior to extensions having extend called on them, each grouped by methodName.</span></li>
            <li id="extension_instances"><strong>$extension_instances</strong>
                —
                array</li>
            <li id="fullName"><strong>$fullName</strong>
                —
                string</li>
            <li id="model"><strong>$model</strong>
                —
                string</li>
            <li id="modifiers"><strong>$modifiers</strong>
                —
                array</li>
            <li id="name"><strong>$name</strong>
                —
                string</li>
            <li id="relation"><strong>$relation</strong>
                —
                string</li>
            <li id="value"><strong>$value</strong>
                —
                mixed</li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="class"><strong>$class</strong>
                —
                string</li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="getInverseOperator">
              <a title="GreaterThanFilter" href="../classes/GreaterThanFilter/getInverseOperator.xhtml">getInverseOperator()</a>
            </li>
            <li id="getOperator">
              <a title="GreaterThanFilter" href="../classes/GreaterThanFilter/getOperator.xhtml">getOperator()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="ComparisonFilter" href="../classes/ComparisonFilter.xhtml">ComparisonFilter</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="applyOne"><a title="ComparisonFilter" href="../classes/ComparisonFilter/applyOne.xhtml">applyOne()</a>
                — Applies a comparison filter to the query Handles SQL escaping for both numeric and string values</li>
            <li id="excludeOne"><a title="ComparisonFilter" href="../classes/ComparisonFilter/excludeOne.xhtml">excludeOne()</a>
                — Applies a exclusion(inverse) filter to the query Handles SQL escaping for both numeric and string values</li>
            <li id="getInverseOperator"><a title="ComparisonFilter" href="../classes/ComparisonFilter/getInverseOperator.xhtml">getInverseOperator()</a>
                — Should return an inverse operator to be used for comparisons</li>
            <li id="getOperator"><a title="ComparisonFilter" href="../classes/ComparisonFilter/getOperator.xhtml">getOperator()</a>
                — Should return an operator to be used for comparisons</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="isEmpty">
              <a title="ComparisonFilter" href="../classes/ComparisonFilter/isEmpty.xhtml">isEmpty()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="SearchFilter" href="../classes/SearchFilter.xhtml">SearchFilter</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="addRelation"><a title="SearchFilter" href="../classes/SearchFilter/addRelation.xhtml">addRelation()</a>
                — Called by constructor to convert a string pathname into a well defined relationship sequence.</li>
            <li id="applyMany"><a title="SearchFilter" href="../classes/SearchFilter/applyMany.xhtml">applyMany()</a>
                — Apply filter criteria to a SQL query with an array of values.</li>
            <li id="applyOne"><a title="SearchFilter" href="../classes/SearchFilter/applyOne.xhtml">applyOne()</a>
                — Apply filter criteria to a SQL query with a single value.</li>
            <li id="excludeMany"><a title="SearchFilter" href="../classes/SearchFilter/excludeMany.xhtml">excludeMany()</a>
                — Exclude filter criteria from a SQL query with an array of values.</li>
            <li id="excludeOne"><a title="SearchFilter" href="../classes/SearchFilter/excludeOne.xhtml">excludeOne()</a>
                — Exclude filter criteria from a SQL query with a single value.</li>
            <li id="getCaseSensitive"><a title="SearchFilter" href="../classes/SearchFilter/getCaseSensitive.xhtml">getCaseSensitive()</a>
                — Determines case sensitivity based on {@link getModifiers()}.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="apply"><a title="SearchFilter" href="../classes/SearchFilter/apply.xhtml">apply()</a>
                — Apply filter criteria to a SQL query.</li>
            <li id="exclude"><a title="SearchFilter" href="../classes/SearchFilter/exclude.xhtml">exclude()</a>
                — Exclude filter criteria from a SQL query.</li>
            <li id="getDbFormattedValue"><a title="SearchFilter" href="../classes/SearchFilter/getDbFormattedValue.xhtml">getDbFormattedValue()</a>
                — Return the value of the field as processed by the DBField class</li>
            <li id="getDbName"><a title="SearchFilter" href="../classes/SearchFilter/getDbName.xhtml">getDbName()</a>
                — Normalizes the field name to table mapping.</li>
            <li id="getFullName"><a title="SearchFilter" href="../classes/SearchFilter/getFullName.xhtml">getFullName()</a>
                — The full name passed to the constructor, including any (optional) relations in dot notation.</li>
            <li id="getModifiers"><a title="SearchFilter" href="../classes/SearchFilter/getModifiers.xhtml">getModifiers()</a>
                — Accessor for the current modifiers to apply to the filter.</li>
            <li id="getName"><a title="SearchFilter" href="../classes/SearchFilter/getName.xhtml">getName()</a>
                — The original name of the field.</li>
            <li id="getValue"><a title="SearchFilter" href="../classes/SearchFilter/getValue.xhtml">getValue()</a>
                — Accessor for the current value to be filtered on.</li>
            <li id="isEmpty"><a title="SearchFilter" href="../classes/SearchFilter/isEmpty.xhtml">isEmpty()</a>
                — Determines if a field has a value, and that the filter should be applied.</li>
            <li id="setFullName">
              <a title="SearchFilter" href="../classes/SearchFilter/setFullName.xhtml">setFullName()</a>
            </li>
            <li id="setModel"><a title="SearchFilter" href="../classes/SearchFilter/setModel.xhtml">setModel()</a>
                — Set the root model class to be selected by this search query.</li>
            <li id="setModifiers"><a title="SearchFilter" href="../classes/SearchFilter/setModifiers.xhtml">setModifiers()</a>
                — Set the current modifiers to apply to the filter</li>
            <li id="setName">
              <a title="SearchFilter" href="../classes/SearchFilter/setName.xhtml">setName()</a>
            </li>
            <li id="setValue"><a title="SearchFilter" href="../classes/SearchFilter/setValue.xhtml">setValue()</a>
                — Set the current value to be filtered on.</li>
          </ul>
          <h3>Inherited from <a title="Object" href="../classes/Object.xhtml">Object</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="addMethodsFrom"><a title="Object" href="../classes/Object/addMethodsFrom.xhtml">addMethodsFrom()</a>
                — Add all the methods from an object property (which is an {@link Extension}) to this object.</li>
            <li id="addWrapperMethod"><a title="Object" href="../classes/Object/addWrapperMethod.xhtml">addWrapperMethod()</a>
                — Add a wrapper method - a method which points to another method with a different name. For example, Thumbnail(x) can be wrapped to generateThumbnail(x)</li>
            <li id="afterExtending"><a title="Object" href="../classes/Object/afterExtending.xhtml">afterExtending()</a>
                — Allows user code to hook into Object::extend after control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="beforeExtending"><a title="Object" href="../classes/Object/beforeExtending.xhtml">beforeExtending()</a>
                — Allows user code to hook into Object::extend prior to control being delegated to extensions. Each callback will be reset once called.</li>
            <li id="createMethod"><a title="Object" href="../classes/Object/createMethod.xhtml">createMethod()</a>
                — Add an extra method using raw PHP code passed as a string</li>
            <li id="defineMethods"><a title="Object" href="../classes/Object/defineMethods.xhtml">defineMethods()</a>
                — Adds any methods from {@link Extension} instances attached to this object.</li>
            <li id="loadCache"><a title="Object" href="../classes/Object/loadCache.xhtml">loadCache()</a>
                — Loads a cache from the filesystem if a valid on is present and within the specified lifetime</li>
            <li id="sanitiseCachename"><a title="Object" href="../classes/Object/sanitiseCachename.xhtml">sanitiseCachename()</a>
                — Strip a file name of special characters so it is suitable for use as a cache file name</li>
            <li id="saveCache"><a title="Object" href="../classes/Object/saveCache.xhtml">saveCache()</a>
                — Save a piece of cached data to the file system</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__call"><a title="Object" href="../classes/Object/__call.xhtml">__call()</a>
                — Attemps to locate and call a method dynamically added to a class at runtime if a default cannot be located</li>
            <li id="__toString">
              <a title="Object" href="../classes/Object/__toString.xhtml">__toString()</a>
            </li>
            <li id="addStaticVars"><a title="Object" href="../classes/Object/addStaticVars.xhtml">addStaticVars()</a>
                — Merge in a set of additional static variables</li>
            <li id="add_extension"><a title="Object" href="../classes/Object/add_extension.xhtml">add_extension()</a>
                — Add an extension to a specific class.</li>
            <li id="add_static_var"><a title="Object" href="../classes/Object/add_static_var.xhtml">add_static_var()</a>
                — Add a static variable without replacing it completely if possible, but merging in with both existing PHP statics and existing psuedo-statics. Uses PHP's array_merge_recursive() with if the $replace argument is FALSE.</li>
            <li id="allMethodNames"><a title="Object" href="../classes/Object/allMethodNames.xhtml">allMethodNames()</a>
                — Return the names of all the methods available on this object</li>
            <li id="cacheToFile"><a title="Object" href="../classes/Object/cacheToFile.xhtml">cacheToFile()</a>
                — Cache the results of an instance method in this object to a file, or if it is already cache return the cached results</li>
            <li id="clearCache"><a title="Object" href="../classes/Object/clearCache.xhtml">clearCache()</a>
                — Clears the cache for the given cacheToFile call</li>
            <li id="combined_static"><a title="Object" href="../classes/Object/combined_static.xhtml">combined_static()</a>
                — Traverse down a class ancestry and attempt to merge all the uninherited static values for a particular static into a single variable</li>
            <li id="config"><a title="Object" href="../classes/Object/config.xhtml">config()</a>
                — Get a configuration accessor for this class. Short hand for Config::inst()-&gt;get($this-&gt;class, .....).</li>
            <li id="create"><a title="Object" href="../classes/Object/create.xhtml">create()</a>
                — An implementation of the factory method, allows you to create an instance of a class</li>
            <li id="create_from_string"><a title="Object" href="../classes/Object/create_from_string.xhtml">create_from_string()</a>
                — Create an object from a string representation.  It treats it as a PHP constructor without the 'new' keyword.  It also manages to construct the object without the use of eval().</li>
            <li id="exists"><a title="Object" href="../classes/Object/exists.xhtml">exists()</a>
                — Return true if this object "exists" i.e. has a sensible value</li>
            <li id="extend"><a title="Object" href="../classes/Object/extend.xhtml">extend()</a>
                — Run the given function on all of this object's extensions. Note that this method originally returned void, so if you wanted to return results, you're hosed</li>
            <li id="getCustomClass"><a title="Object" href="../classes/Object/getCustomClass.xhtml">getCustomClass()</a>
                — If a class has been overloaded, get the class name it has been overloaded with - otherwise return the class name</li>
            <li id="getExtensionInstance"><a title="Object" href="../classes/Object/getExtensionInstance.xhtml">getExtensionInstance()</a>
                — Get an extension instance attached to this object by name.</li>
            <li id="getExtensionInstances"><a title="Object" href="../classes/Object/getExtensionInstances.xhtml">getExtensionInstances()</a>
                — Get all extension instances for this specific object instance.</li>
            <li id="get_extensions">
              <a title="Object" href="../classes/Object/get_extensions.xhtml">get_extensions()</a>
            </li>
            <li id="get_extra_config_sources">
              <a title="Object" href="../classes/Object/get_extra_config_sources.xhtml">get_extra_config_sources()</a>
            </li>
            <li id="get_static"><a title="Object" href="../classes/Object/get_static.xhtml">get_static()</a>
                — Get a static variable, taking into account SS's inbuild static caches and pseudo-statics</li>
            <li id="hasExtension"><a title="Object" href="../classes/Object/hasExtension.xhtml">hasExtension()</a>
                — Returns TRUE if this object instance has a specific extension applied in {@link $extension_instances}. Extension instances are initialized at constructor time, meaning if you use {@link add_extension()} afterwards, the added extension will just be added to new instances of the extended class. Use the static method {@link has_extension()} to check if a class (not an instance) has a specific extension.</li>
            <li id="hasMethod"><a title="Object" href="../classes/Object/hasMethod.xhtml">hasMethod()</a>
                — Return TRUE if a method exists on this object</li>
            <li id="has_extension"><a title="Object" href="../classes/Object/has_extension.xhtml">has_extension()</a>
                — Return TRUE if a class has a specified extension.</li>
            <li id="invokeWithExtensions"><a title="Object" href="../classes/Object/invokeWithExtensions.xhtml">invokeWithExtensions()</a>
                — Calls a method if available on both this object and all applied {@link Extensions}, and then attempts to merge all results into an array</li>
            <li id="is_a"><a title="Object" href="../classes/Object/is_a.xhtml">is_a()</a>
                — Check if this class is an instance of a specific class, or has that class as one of its parents</li>
            <li id="parentClass">
              <a title="Object" href="../classes/Object/parentClass.xhtml">parentClass()</a>
            </li>
            <li id="parse_class_spec"><a title="Object" href="../classes/Object/parse_class_spec.xhtml">parse_class_spec()</a>
                — Parses a class-spec, such as "Versioned('Stage','Live')", as passed to create_from_string().</li>
            <li id="remove_extension"><a title="Object" href="../classes/Object/remove_extension.xhtml">remove_extension()</a>
                — Remove an extension from a class.</li>
            <li id="set_stat">
              <a title="Object" href="../classes/Object/set_stat.xhtml">set_stat()</a>
            </li>
            <li id="set_static"><a title="Object" href="../classes/Object/set_static.xhtml">set_static()</a>
                — Set a static variable</li>
            <li id="stat">
              <a title="Object" href="../classes/Object/stat.xhtml">stat()</a>
            </li>
            <li id="static_lookup"><a title="Object" href="../classes/Object/static_lookup.xhtml">static_lookup()</a>
                — Get the value of a static property of a class, even in that property is declared protected (but not private), without any inheritance, merging or parent lookup if it doesn't exist on the given class.</li>
            <li id="strong_create"><a title="Object" href="../classes/Object/strong_create.xhtml">strong_create()</a>
                — Similar to {@link Object::create()}, except that classes are only overloaded if you set the $strong parameter to TRUE when using {@link Object::useCustomClass()}</li>
            <li id="uninherited">
              <a title="Object" href="../classes/Object/uninherited.xhtml">uninherited()</a>
            </li>
            <li id="uninherited_static"><a title="Object" href="../classes/Object/uninherited_static.xhtml">uninherited_static()</a>
                — Get an uninherited static variable - a variable that is explicity set in this class, and not in the parent class.</li>
            <li id="useCustomClass"><a title="Object" href="../classes/Object/useCustomClass.xhtml">useCustomClass()</a>
                — This class allows you to overload classes with other classes when they are constructed using the factory method {@link Object::create()}</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
