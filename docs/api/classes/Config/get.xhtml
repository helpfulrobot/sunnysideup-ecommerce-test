<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head>
    <title>phpDox - Test Method</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#"/>
          </li>
          <li class="separator">
            <a title="Config" href="../../classes/Config.xhtml">Config</a>
          </li>
          <li class="separator">get</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
          <li>
            <a href="../../source/framework/core/Config.php.xhtml#line575">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>Config::</small>get</h1>
        <h4>Get the config value associated for a given class and property</h4>
        <p>This merges all current sources and overrides together to give final value
todo: Currently this is done every time. This function is an inner loop function, so we really need to be
caching heavily here.</p>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function get(string
        $class,
            [string&amp;
        $name = 0,
            [int&amp;
        $sourceOptions = 0,
            [<a title="array|scalar" href="../../classes/array|scalar.xhtml">array|scalar</a>&amp;
        $result = null,
            [array
        $suppress = null]]]] )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$class</code>
                —
                string</dt>
          <dd>- The name of the class to get the value for</dd>
          <dt><code>$name</code>
                —
                string</dt>
          <dd>- The property to get the value for</dd>
          <dt><code>$sourceOptions</code>
                —
                integer</dt>
          <dd>Bitmask which can be set to some combintain of Config::UNINHERITED,<br/>Config::FIRST_SET, and Config::EXCLUDE_EXTENSIONS.<br/><br/>Config::UNINHERITED does not include parent classes when merging configuration fragments<br/>Config::FIRST_SET stops inheriting once the first class that sets a value (even an empty value) is encoutered<br/>Config::EXCLUDE_EXTRA_SOURCES does not include any additional static sources (such as extensions)<br/><br/>Config::INHERITED is a utility constant that can be used to mean "none of the above", equvilient to 0<br/>Setting both Config::UNINHERITED and Config::FIRST_SET behaves the same as just Config::UNINHERITED<br/><br/>should the parent classes value be merged in as the lowest priority source?</dd>
          <dt><code>$result</code>
                —
                object</dt>
          <dd>Reference to a variable to put the result in. Also returned, so this can be left<br/>as null safely. If you do pass a value, it will be treated as the highest priority<br/>                            value in the result chain</dd>
          <dt><code>$suppress</code>
                —
                array</dt>
          <dd>Internal use when called by child classes. Array of mask pairs to filter value by</dd>
        </dl>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>array|scalar</dt>
          <dd>The value of the config item, or null if no value set. Could be an associative array,<br/>sequential array or scalar depending on value (see class docblock)</dd>
        </dl>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
