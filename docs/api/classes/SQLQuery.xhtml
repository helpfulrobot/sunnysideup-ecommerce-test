<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - SQLQuery</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">SQLQuery</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/model/SQLQuery.php.xhtml#line13">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>SQLQuery</h1>
        <h4>Object representing a SQL query.</h4>
        <p>The various parts of the SQL query can be manipulated individually.<br/><br/>Caution: Only supports SELECT (default) and DELETE at the moment.</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class SQLQuery
            {<br/><ul class="none"><li>// members</li><li>protected array <a href="#members">$select</a>;
                    </li><li>protected array <a href="#members">$from</a>;
                    </li><li>protected array <a href="#members">$where</a>;
                    </li><li>protected array <a href="#members">$orderby</a>;
                    </li><li>protected array <a href="#members">$groupby</a>;
                    </li><li>protected array <a href="#members">$having</a>;
                    </li><li>protected array <a href="#members">$limit</a>;
                    </li><li>protected boolean <a href="#members">$distinct</a>;
                    </li><li>protected boolean <a href="#members">$delete</a>;
                    </li><li>protected string <a href="#members">$connective</a>;
                    </li><li>protected array <a href="#members">$replacementsOld</a>;
                    </li><li>protected array <a href="#members">$replacementsNew</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/__construct.xhtml">__construct</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/__get.xhtml">__get</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/__set.xhtml">__set</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/setSelect.xhtml">setSelect</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/addSelect.xhtml">addSelect</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/select.xhtml">select</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/selectField.xhtml">selectField</a>()
                    </li><li>public String <a title="SQLQuery" href="../classes/SQLQuery/expressionForField.xhtml">expressionForField</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/setFrom.xhtml">setFrom</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/addFrom.xhtml">addFrom</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/from.xhtml">from</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/addLeftJoin.xhtml">addLeftJoin</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/leftjoin.xhtml">leftjoin</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/addInnerJoin.xhtml">addInnerJoin</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/innerjoin.xhtml">innerjoin</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/addFilterToJoin.xhtml">addFilterToJoin</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/setJoinFilter.xhtml">setJoinFilter</a>()
                    </li><li>public boolean <a title="SQLQuery" href="../classes/SQLQuery/isJoinedTo.xhtml">isJoinedTo</a>()
                    </li><li>public array <a title="SQLQuery" href="../classes/SQLQuery/queriedTables.xhtml">queriedTables</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/setDistinct.xhtml">setDistinct</a>()
                    </li><li>public boolean <a title="SQLQuery" href="../classes/SQLQuery/getDistinct.xhtml">getDistinct</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/setDelete.xhtml">setDelete</a>()
                    </li><li>public boolean <a title="SQLQuery" href="../classes/SQLQuery/getDelete.xhtml">getDelete</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/setConnective.xhtml">setConnective</a>()
                    </li><li>public string <a title="SQLQuery" href="../classes/SQLQuery/getConnective.xhtml">getConnective</a>()
                    </li><li>public array <a title="SQLQuery" href="../classes/SQLQuery/getLimit.xhtml">getLimit</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/setLimit.xhtml">setLimit</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/limit.xhtml">limit</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/setOrderBy.xhtml">setOrderBy</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/addOrderBy.xhtml">addOrderBy</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/orderby.xhtml">orderby</a>()
                    </li><li>private Array <a title="SQLQuery" href="../classes/SQLQuery/getDirectionFromString.xhtml">getDirectionFromString</a>()
                    </li><li>public array <a title="SQLQuery" href="../classes/SQLQuery/getOrderBy.xhtml">getOrderBy</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/reverseOrderBy.xhtml">reverseOrderBy</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/setGroupBy.xhtml">setGroupBy</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/addGroupBy.xhtml">addGroupBy</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/groupby.xhtml">groupby</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/setHaving.xhtml">setHaving</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/addHaving.xhtml">addHaving</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/having.xhtml">having</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/setWhere.xhtml">setWhere</a>()
                    </li><li>public SQLQuery <a title="SQLQuery" href="../classes/SQLQuery/addWhere.xhtml">addWhere</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/where.xhtml">where</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/whereAny.xhtml">whereAny</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/setWhereAny.xhtml">setWhereAny</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/addWhereAny.xhtml">addWhereAny</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/useDisjunction.xhtml">useDisjunction</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/useConjunction.xhtml">useConjunction</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/renameTable.xhtml">renameTable</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/replaceText.xhtml">replaceText</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/getFilter.xhtml">getFilter</a>()
                    </li><li>public array <a title="SQLQuery" href="../classes/SQLQuery/getFrom.xhtml">getFrom</a>()
                    </li><li>public array <a title="SQLQuery" href="../classes/SQLQuery/getHaving.xhtml">getHaving</a>()
                    </li><li>public array <a title="SQLQuery" href="../classes/SQLQuery/getGroupBy.xhtml">getGroupBy</a>()
                    </li><li>public array <a title="SQLQuery" href="../classes/SQLQuery/getWhere.xhtml">getWhere</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/getSelect.xhtml">getSelect</a>()
                    </li><li>public string <a title="SQLQuery" href="../classes/SQLQuery/sql.xhtml">sql</a>()
                    </li><li>public string <a title="SQLQuery" href="../classes/SQLQuery/__toString.xhtml">__toString</a>()
                    </li><li>public SS_Query <a title="SQLQuery" href="../classes/SQLQuery/execute.xhtml">execute</a>()
                    </li><li>public boolean <a title="SQLQuery" href="../classes/SQLQuery/filtersOnID.xhtml">filtersOnID</a>()
                    </li><li>public boolean <a title="SQLQuery" href="../classes/SQLQuery/filtersOnFK.xhtml">filtersOnFK</a>()
                    </li><li>public int <a title="SQLQuery" href="../classes/SQLQuery/unlimitedRowCount.xhtml">unlimitedRowCount</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/canSortBy.xhtml">canSortBy</a>()
                    </li><li>public int <a title="SQLQuery" href="../classes/SQLQuery/count.xhtml">count</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/aggregate.xhtml">aggregate</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/firstRow.xhtml">firstRow</a>()
                    </li><li>public void <a title="SQLQuery" href="../classes/SQLQuery/lastRow.xhtml">lastRow</a>()
                    </li><li>protected array <a title="SQLQuery" href="../classes/SQLQuery/getOrderedJoins.xhtml">getOrderedJoins</a>()
                    </li><li>protected void <a title="SQLQuery" href="../classes/SQLQuery/mergesort.xhtml">mergesort</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">13+</td>
            <td>Add support for INSERT and UPDATE queries</td>
          </tr>
          <tr>
            <td class="nummeric">891</td>
            <td>Don't require this internal-state manipulate-and-preserve - let sqlQueryToString() handle the new</td>
          </tr>
          <tr>
            <td class="nummeric">957+</td>
            <td>Doesn't work with combined statements (e.g. "Foo='bar' AND ID=5")</td>
          </tr>
          <tr>
            <td class="nummeric">974+</td>
            <td>Doesn't work with combined statements (e.g. "Foo='bar' AND ParentID=5")</td>
          </tr>
          <tr>
            <td class="nummeric">1036+</td>
            <td>Respect HAVING and GROUPBY, which can affect the result-count</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="connective"><strong>$connective</strong>
                —
                string<br/><span class="indent">The logical connective used to join WHERE clauses. Defaults to AND.</span></li>
            <li id="delete"><strong>$delete</strong>
                —
                boolean<br/><span class="indent">If this is true, this statement will delete rather than select.</span></li>
            <li id="distinct"><strong>$distinct</strong>
                —
                boolean<br/><span class="indent">If this is true DISTINCT will be added to the SQL.</span></li>
            <li id="from"><strong>$from</strong>
                —
                array<br/><span class="indent">An array of FROM clauses. The first one is just the table name.</span></li>
            <li id="groupby"><strong>$groupby</strong>
                —
                array<br/><span class="indent">An array of GROUP BY clauses.</span></li>
            <li id="having"><strong>$having</strong>
                —
                array<br/><span class="indent">An array of having clauses.</span></li>
            <li id="limit"><strong>$limit</strong>
                —
                array<br/><span class="indent">An array containing limit and offset keys for LIMIT clause.</span></li>
            <li id="orderby"><strong>$orderby</strong>
                —
                string<br/><span class="indent">An array of ORDER BY clauses, functions. Stores as an associative array of column / function to direction.</span></li>
            <li id="replacementsNew"><strong>$replacementsNew</strong>
                —
                array<br/><span class="indent">Keep an internal register of find/replace pairs to execute when it's time to actually get the query SQL.</span></li>
            <li id="replacementsOld"><strong>$replacementsOld</strong>
                —
                array<br/><span class="indent">Keep an internal register of find/replace pairs to execute when it's time to actually get the query SQL.</span></li>
            <li id="select"><strong>$select</strong>
                —
                array<br/><span class="indent">An array of SELECT fields, keyed by an optional alias.</span></li>
            <li id="where"><strong>$where</strong>
                —
                array<br/><span class="indent">An array of WHERE clauses.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="getDirectionFromString"><a title="SQLQuery" href="../classes/SQLQuery/getDirectionFromString.xhtml">getDirectionFromString()</a>
                — Extract the direction part of a single-column order by clause.</li>
          </ul>
          <h4>protected</h4>
          <ul>
            <li id="getOrderedJoins"><a title="SQLQuery" href="../classes/SQLQuery/getOrderedJoins.xhtml">getOrderedJoins()</a>
                — Ensure that framework "auto-generated" table JOINs are first in the finalised SQL query.</li>
            <li id="mergesort"><a title="SQLQuery" href="../classes/SQLQuery/mergesort.xhtml">mergesort()</a>
                — Since uasort don't preserve the order of an array if the comparison is equal we have to resort to a merge sort. It's quick and stable: O(n*log(n)).</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="SQLQuery" href="../classes/SQLQuery/__construct.xhtml">__construct()</a>
                — Construct a new SQLQuery.</li>
            <li id="__get">
              <a title="SQLQuery" href="../classes/SQLQuery/__get.xhtml">__get()</a>
            </li>
            <li id="__set">
              <a title="SQLQuery" href="../classes/SQLQuery/__set.xhtml">__set()</a>
            </li>
            <li id="__toString"><a title="SQLQuery" href="../classes/SQLQuery/__toString.xhtml">__toString()</a>
                — Return the generated SQL string for this query</li>
            <li id="addFilterToJoin"><a title="SQLQuery" href="../classes/SQLQuery/addFilterToJoin.xhtml">addFilterToJoin()</a>
                — Add an additional filter (part of the ON clause) on a join.</li>
            <li id="addFrom"><a title="SQLQuery" href="../classes/SQLQuery/addFrom.xhtml">addFrom()</a>
                — Add a table to the SELECT clause.</li>
            <li id="addGroupBy"><a title="SQLQuery" href="../classes/SQLQuery/addGroupBy.xhtml">addGroupBy()</a>
                — Add a GROUP BY clause.</li>
            <li id="addHaving"><a title="SQLQuery" href="../classes/SQLQuery/addHaving.xhtml">addHaving()</a>
                — Add a HAVING clause</li>
            <li id="addInnerJoin"><a title="SQLQuery" href="../classes/SQLQuery/addInnerJoin.xhtml">addInnerJoin()</a>
                — Add an INNER JOIN criteria to the FROM clause.</li>
            <li id="addLeftJoin"><a title="SQLQuery" href="../classes/SQLQuery/addLeftJoin.xhtml">addLeftJoin()</a>
                — Add a LEFT JOIN criteria to the FROM clause.</li>
            <li id="addOrderBy"><a title="SQLQuery" href="../classes/SQLQuery/addOrderBy.xhtml">addOrderBy()</a>
                — Add ORDER BY clause either as SQL snippet or in array format.</li>
            <li id="addSelect"><a title="SQLQuery" href="../classes/SQLQuery/addSelect.xhtml">addSelect()</a>
                — Add to the list of columns to be selected by the query.</li>
            <li id="addWhere"><a title="SQLQuery" href="../classes/SQLQuery/addWhere.xhtml">addWhere()</a>
                — Add a WHERE predicate.</li>
            <li id="addWhereAny">
              <a title="SQLQuery" href="../classes/SQLQuery/addWhereAny.xhtml">addWhereAny()</a>
            </li>
            <li id="aggregate"><a title="SQLQuery" href="../classes/SQLQuery/aggregate.xhtml">aggregate()</a>
                — Return a new SQLQuery that calls the given aggregate functions on this data.</li>
            <li id="canSortBy"><a title="SQLQuery" href="../classes/SQLQuery/canSortBy.xhtml">canSortBy()</a>
                — Returns true if this query can be sorted by the given field.</li>
            <li id="count"><a title="SQLQuery" href="../classes/SQLQuery/count.xhtml">count()</a>
                — Return the number of rows in this query if the limit were removed.  Useful in paged data sets.</li>
            <li id="execute"><a title="SQLQuery" href="../classes/SQLQuery/execute.xhtml">execute()</a>
                — Execute this query.</li>
            <li id="expressionForField"><a title="SQLQuery" href="../classes/SQLQuery/expressionForField.xhtml">expressionForField()</a>
                — Return the SQL expression for the given field alias.</li>
            <li id="filtersOnFK"><a title="SQLQuery" href="../classes/SQLQuery/filtersOnFK.xhtml">filtersOnFK()</a>
                — Checks whether this query is filtering on a foreign key, ie finding a has_many relationship</li>
            <li id="filtersOnID"><a title="SQLQuery" href="../classes/SQLQuery/filtersOnID.xhtml">filtersOnID()</a>
                — Checks whether this query is for a specific ID in a table</li>
            <li id="firstRow"><a title="SQLQuery" href="../classes/SQLQuery/firstRow.xhtml">firstRow()</a>
                — Returns a query that returns only the first row of this query</li>
            <li id="from">
              <a title="SQLQuery" href="../classes/SQLQuery/from.xhtml">from()</a>
            </li>
            <li id="getConnective"><a title="SQLQuery" href="../classes/SQLQuery/getConnective.xhtml">getConnective()</a>
                — Get the connective property.</li>
            <li id="getDelete"><a title="SQLQuery" href="../classes/SQLQuery/getDelete.xhtml">getDelete()</a>
                — Get the delete property.</li>
            <li id="getDistinct"><a title="SQLQuery" href="../classes/SQLQuery/getDistinct.xhtml">getDistinct()</a>
                — Get the distinct property.</li>
            <li id="getFilter">
              <a title="SQLQuery" href="../classes/SQLQuery/getFilter.xhtml">getFilter()</a>
            </li>
            <li id="getFrom"><a title="SQLQuery" href="../classes/SQLQuery/getFrom.xhtml">getFrom()</a>
                — Return a list of FROM clauses used internally.</li>
            <li id="getGroupBy"><a title="SQLQuery" href="../classes/SQLQuery/getGroupBy.xhtml">getGroupBy()</a>
                — Return a list of GROUP BY clauses used internally.</li>
            <li id="getHaving"><a title="SQLQuery" href="../classes/SQLQuery/getHaving.xhtml">getHaving()</a>
                — Return a list of HAVING clauses used internally.</li>
            <li id="getLimit"><a title="SQLQuery" href="../classes/SQLQuery/getLimit.xhtml">getLimit()</a>
                — Get the limit property.</li>
            <li id="getOrderBy"><a title="SQLQuery" href="../classes/SQLQuery/getOrderBy.xhtml">getOrderBy()</a>
                — Returns the current order by as array if not already. To handle legacy statements which are stored as strings. Without clauses and directions, convert the orderby clause to something readable.</li>
            <li id="getSelect"><a title="SQLQuery" href="../classes/SQLQuery/getSelect.xhtml">getSelect()</a>
                — Return an itemised select list as a map, where keys are the aliases, and values are the column sources.</li>
            <li id="getWhere"><a title="SQLQuery" href="../classes/SQLQuery/getWhere.xhtml">getWhere()</a>
                — Return a list of WHERE clauses used internally.</li>
            <li id="groupby">
              <a title="SQLQuery" href="../classes/SQLQuery/groupby.xhtml">groupby()</a>
            </li>
            <li id="having">
              <a title="SQLQuery" href="../classes/SQLQuery/having.xhtml">having()</a>
            </li>
            <li id="innerjoin">
              <a title="SQLQuery" href="../classes/SQLQuery/innerjoin.xhtml">innerjoin()</a>
            </li>
            <li id="isJoinedTo"><a title="SQLQuery" href="../classes/SQLQuery/isJoinedTo.xhtml">isJoinedTo()</a>
                — Returns true if we are already joining to the given table alias</li>
            <li id="lastRow"><a title="SQLQuery" href="../classes/SQLQuery/lastRow.xhtml">lastRow()</a>
                — Returns a query that returns only the last row of this query</li>
            <li id="leftjoin">
              <a title="SQLQuery" href="../classes/SQLQuery/leftjoin.xhtml">leftjoin()</a>
            </li>
            <li id="limit">
              <a title="SQLQuery" href="../classes/SQLQuery/limit.xhtml">limit()</a>
            </li>
            <li id="orderby">
              <a title="SQLQuery" href="../classes/SQLQuery/orderby.xhtml">orderby()</a>
            </li>
            <li id="queriedTables"><a title="SQLQuery" href="../classes/SQLQuery/queriedTables.xhtml">queriedTables()</a>
                — Return a list of tables that this query is selecting from.</li>
            <li id="renameTable"><a title="SQLQuery" href="../classes/SQLQuery/renameTable.xhtml">renameTable()</a>
                — Swap the use of one table with another.</li>
            <li id="replaceText"><a title="SQLQuery" href="../classes/SQLQuery/replaceText.xhtml">replaceText()</a>
                — Swap some text in the SQL query with another.</li>
            <li id="reverseOrderBy"><a title="SQLQuery" href="../classes/SQLQuery/reverseOrderBy.xhtml">reverseOrderBy()</a>
                — Reverses the order by clause by replacing ASC or DESC references in the current order by with it's corollary.</li>
            <li id="select">
              <a title="SQLQuery" href="../classes/SQLQuery/select.xhtml">select()</a>
            </li>
            <li id="selectField"><a title="SQLQuery" href="../classes/SQLQuery/selectField.xhtml">selectField()</a>
                — Select an additional field.</li>
            <li id="setConnective"><a title="SQLQuery" href="../classes/SQLQuery/setConnective.xhtml">setConnective()</a>
                — Set the connective property.</li>
            <li id="setDelete"><a title="SQLQuery" href="../classes/SQLQuery/setDelete.xhtml">setDelete()</a>
                — Set the delete property.</li>
            <li id="setDistinct"><a title="SQLQuery" href="../classes/SQLQuery/setDistinct.xhtml">setDistinct()</a>
                — Set distinct property.</li>
            <li id="setFrom"><a title="SQLQuery" href="../classes/SQLQuery/setFrom.xhtml">setFrom()</a>
                — Set table for the SELECT clause.</li>
            <li id="setGroupBy"><a title="SQLQuery" href="../classes/SQLQuery/setGroupBy.xhtml">setGroupBy()</a>
                — Set a GROUP BY clause.</li>
            <li id="setHaving"><a title="SQLQuery" href="../classes/SQLQuery/setHaving.xhtml">setHaving()</a>
                — Set a HAVING clause.</li>
            <li id="setJoinFilter"><a title="SQLQuery" href="../classes/SQLQuery/setJoinFilter.xhtml">setJoinFilter()</a>
                — Set the filter (part of the ON clause) on a join.</li>
            <li id="setLimit"><a title="SQLQuery" href="../classes/SQLQuery/setLimit.xhtml">setLimit()</a>
                — Pass LIMIT clause either as SQL snippet or in array format.</li>
            <li id="setOrderBy"><a title="SQLQuery" href="../classes/SQLQuery/setOrderBy.xhtml">setOrderBy()</a>
                — Set ORDER BY clause either as SQL snippet or in array format.</li>
            <li id="setSelect"><a title="SQLQuery" href="../classes/SQLQuery/setSelect.xhtml">setSelect()</a>
                — Set the list of columns to be selected by the query.</li>
            <li id="setWhere"><a title="SQLQuery" href="../classes/SQLQuery/setWhere.xhtml">setWhere()</a>
                — Set a WHERE clause.</li>
            <li id="setWhereAny">
              <a title="SQLQuery" href="../classes/SQLQuery/setWhereAny.xhtml">setWhereAny()</a>
            </li>
            <li id="sql"><a title="SQLQuery" href="../classes/SQLQuery/sql.xhtml">sql()</a>
                — Generate the SQL statement for this query.</li>
            <li id="unlimitedRowCount"><a title="SQLQuery" href="../classes/SQLQuery/unlimitedRowCount.xhtml">unlimitedRowCount()</a>
                — Return the number of rows in this query if the limit were removed.  Useful in paged data sets.</li>
            <li id="useConjunction"><a title="SQLQuery" href="../classes/SQLQuery/useConjunction.xhtml">useConjunction()</a>
                — Use the conjunctive operator 'AND' to join filter expressions in the WHERE clause.</li>
            <li id="useDisjunction"><a title="SQLQuery" href="../classes/SQLQuery/useDisjunction.xhtml">useDisjunction()</a>
                — Use the disjunctive operator 'OR' to join filter expressions in the WHERE clause.</li>
            <li id="where">
              <a title="SQLQuery" href="../classes/SQLQuery/where.xhtml">where()</a>
            </li>
            <li id="whereAny">
              <a title="SQLQuery" href="../classes/SQLQuery/whereAny.xhtml">whereAny()</a>
            </li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
