<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - CompositeDBField</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../interfaces.xhtml">Interfaces</a>
          </li>
          <li class="separator">CompositeDBField</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#violations">Violations</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/model/fieldtypes/CompositeDBField.php.xhtml#line99">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>CompositeDBField</h1>
        <h4>Apply this interface to any {@link DBField} that doesn't have a 1-1 mapping with a database field.</h4>
        <p>This includes multi-value fields and transformed fields</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">interface CompositeDBField
            {<br/><ul class="none"><li>// methods</li><li>public void <a title="CompositeDBField" href="../interfaces/CompositeDBField/setValue.xhtml">setValue</a>()
                    </li><li>public void <a title="CompositeDBField" href="../interfaces/CompositeDBField/writeToManipulation.xhtml">writeToManipulation</a>()
                    </li><li>public void <a title="CompositeDBField" href="../interfaces/CompositeDBField/addToQuery.xhtml">addToQuery</a>()
                    </li><li>public array <a title="CompositeDBField" href="../interfaces/CompositeDBField/compositeDatabaseFields.xhtml">compositeDatabaseFields</a>()
                    </li><li>public boolean <a title="CompositeDBField" href="../interfaces/CompositeDBField/isChanged.xhtml">isChanged</a>()
                    </li><li>public boolean <a title="CompositeDBField" href="../interfaces/CompositeDBField/exists.xhtml">exists</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">99+</td>
            <td>Unittests for loading and saving composite values (see GIS module for existing similiar unittests)</td>
          </tr>
        </table>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="addToQuery"><a title="CompositeDBField" href="../interfaces/CompositeDBField/addToQuery.xhtml">addToQuery()</a>
                — Add all columns which are defined through {@link requireField()} and {@link $composite_db}, or any additional SQL that is required to get to these columns. Will mostly just write to the {@link SQLQuery-&gt;select} array.</li>
            <li id="compositeDatabaseFields"><a title="CompositeDBField" href="../interfaces/CompositeDBField/compositeDatabaseFields.xhtml">compositeDatabaseFields()</a>
                — Return array in the format of {@link $composite_db}.</li>
            <li id="exists"><a title="CompositeDBField" href="../interfaces/CompositeDBField/exists.xhtml">exists()</a>
                — Determines if any of the properties in this field have a value, meaning at least one of them is not NULL.</li>
            <li id="isChanged"><a title="CompositeDBField" href="../interfaces/CompositeDBField/isChanged.xhtml">isChanged()</a>
                — Determines if the field has been changed since its initialization.</li>
            <li id="setValue"><a title="CompositeDBField" href="../interfaces/CompositeDBField/setValue.xhtml">setValue()</a>
                — Set the value of this field in various formats.</li>
            <li id="writeToManipulation"><a title="CompositeDBField" href="../interfaces/CompositeDBField/writeToManipulation.xhtml">writeToManipulation()</a>
                — Add the custom internal values to an INSERT or UPDATE request passed through the ORM with {@link DataObject-&gt;write()}.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
