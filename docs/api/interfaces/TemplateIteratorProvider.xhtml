<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - TemplateIteratorProvider</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../interfaces.xhtml">Interfaces</a>
          </li>
          <li class="separator">TemplateIteratorProvider</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#violations">Violations</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/framework/view/TemplateIteratorProvider.php.xhtml#line11">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>TemplateIteratorProvider</h1>
        <h4>Interface that is implemented by any classes that want to expose a method that can be called in any scope in a template that returns values dependant on the state of the iterator of the current scope.</h4>
        <p>SSViewer_BasicIteratorSupport is an example of this. See also @TemplateGlobalProvider</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">interface TemplateIteratorProvider
            {<br/><ul class="none"><li>// methods</li><li>public static array <a title="TemplateIteratorProvider" href="../interfaces/TemplateIteratorProvider/get_template_iterator_variables.xhtml">get_template_iterator_variables</a>()
                    </li><li>public void <a title="TemplateIteratorProvider" href="../interfaces/TemplateIteratorProvider/iteratorProperties.xhtml">iteratorProperties</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="get_template_iterator_variables"><a title="TemplateIteratorProvider" href="../interfaces/TemplateIteratorProvider/get_template_iterator_variables.xhtml">get_template_iterator_variables()</a>
                — Called by SSViewer to get a list of iterator variables to expose to the template, the instance method to call on an instance of this class to get the value for those variables, and the class to use for casting the returned value for use in a template</li>
            <li id="iteratorProperties"><a title="TemplateIteratorProvider" href="../interfaces/TemplateIteratorProvider/iteratorProperties.xhtml">iteratorProperties()</a>
                — Set the current iterator properties - where we are on the iterator.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
